

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Nov 11 19:22:07 2021

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.05
    53                           ; Generated 20/12/2018 GMT
    54                           ; 
    55                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F1619 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  0111                     	;# 
   143  0112                     	;# 
   144  0113                     	;# 
   145  0114                     	;# 
   146  0115                     	;# 
   147  0116                     	;# 
   148  0117                     	;# 
   149  0118                     	;# 
   150  0119                     	;# 
   151  011C                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018E                     	;# 
   155  0191                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0194                     	;# 
   161  0195                     	;# 
   162  0196                     	;# 
   163  0197                     	;# 
   164  0199                     	;# 
   165  0199                     	;# 
   166  0199                     	;# 
   167  019A                     	;# 
   168  019A                     	;# 
   169  019A                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019C                     	;# 
   176  019C                     	;# 
   177  019C                     	;# 
   178  019D                     	;# 
   179  019D                     	;# 
   180  019D                     	;# 
   181  019E                     	;# 
   182  019E                     	;# 
   183  019E                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  019F                     	;# 
   188  019F                     	;# 
   189  020C                     	;# 
   190  020D                     	;# 
   191  020E                     	;# 
   192  0211                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0212                     	;# 
   196  0213                     	;# 
   197  0213                     	;# 
   198  0214                     	;# 
   199  0214                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0216                     	;# 
   205  0216                     	;# 
   206  0217                     	;# 
   207  0217                     	;# 
   208  028C                     	;# 
   209  028D                     	;# 
   210  028E                     	;# 
   211  0291                     	;# 
   212  0291                     	;# 
   213  0292                     	;# 
   214  0293                     	;# 
   215  0294                     	;# 
   216  0298                     	;# 
   217  0298                     	;# 
   218  0299                     	;# 
   219  029A                     	;# 
   220  029B                     	;# 
   221  029E                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  030E                     	;# 
   225  038C                     	;# 
   226  038D                     	;# 
   227  038E                     	;# 
   228  0391                     	;# 
   229  0392                     	;# 
   230  0393                     	;# 
   231  0394                     	;# 
   232  0395                     	;# 
   233  0396                     	;# 
   234  0397                     	;# 
   235  0398                     	;# 
   236  0399                     	;# 
   237  040E                     	;# 
   238  0413                     	;# 
   239  0413                     	;# 
   240  0414                     	;# 
   241  0414                     	;# 
   242  0415                     	;# 
   243  0416                     	;# 
   244  0417                     	;# 
   245  0418                     	;# 
   246  041A                     	;# 
   247  041A                     	;# 
   248  041B                     	;# 
   249  041B                     	;# 
   250  041C                     	;# 
   251  041D                     	;# 
   252  041E                     	;# 
   253  041F                     	;# 
   254  0493                     	;# 
   255  0494                     	;# 
   256  0495                     	;# 
   257  0496                     	;# 
   258  049A                     	;# 
   259  049B                     	;# 
   260  049C                     	;# 
   261  049D                     	;# 
   262  058C                     	;# 
   263  058C                     	;# 
   264  058D                     	;# 
   265  058E                     	;# 
   266  058E                     	;# 
   267  058F                     	;# 
   268  0590                     	;# 
   269  0590                     	;# 
   270  0591                     	;# 
   271  0592                     	;# 
   272  0592                     	;# 
   273  0593                     	;# 
   274  0594                     	;# 
   275  0594                     	;# 
   276  0595                     	;# 
   277  0596                     	;# 
   278  0596                     	;# 
   279  0597                     	;# 
   280  0598                     	;# 
   281  0599                     	;# 
   282  059A                     	;# 
   283  059B                     	;# 
   284  059B                     	;# 
   285  059C                     	;# 
   286  059D                     	;# 
   287  060C                     	;# 
   288  060C                     	;# 
   289  060D                     	;# 
   290  060E                     	;# 
   291  060F                     	;# 
   292  060F                     	;# 
   293  0610                     	;# 
   294  0611                     	;# 
   295  0612                     	;# 
   296  0613                     	;# 
   297  0614                     	;# 
   298  0617                     	;# 
   299  0617                     	;# 
   300  0618                     	;# 
   301  0619                     	;# 
   302  061A                     	;# 
   303  061A                     	;# 
   304  061B                     	;# 
   305  061C                     	;# 
   306  0691                     	;# 
   307  0692                     	;# 
   308  0693                     	;# 
   309  0694                     	;# 
   310  0695                     	;# 
   311  0696                     	;# 
   312  0697                     	;# 
   313  0699                     	;# 
   314  069A                     	;# 
   315  0711                     	;# 
   316  0712                     	;# 
   317  0713                     	;# 
   318  0714                     	;# 
   319  0715                     	;# 
   320  0718                     	;# 
   321  0718                     	;# 
   322  0719                     	;# 
   323  071A                     	;# 
   324  071A                     	;# 
   325  071B                     	;# 
   326  071C                     	;# 
   327  071D                     	;# 
   328  0791                     	;# 
   329  0791                     	;# 
   330  0792                     	;# 
   331  0793                     	;# 
   332  0793                     	;# 
   333  0794                     	;# 
   334  0795                     	;# 
   335  0795                     	;# 
   336  0796                     	;# 
   337  0797                     	;# 
   338  0797                     	;# 
   339  0798                     	;# 
   340  0799                     	;# 
   341  079A                     	;# 
   342  080C                     	;# 
   343  080C                     	;# 
   344  080D                     	;# 
   345  080E                     	;# 
   346  080E                     	;# 
   347  080F                     	;# 
   348  0810                     	;# 
   349  0810                     	;# 
   350  0811                     	;# 
   351  0812                     	;# 
   352  0812                     	;# 
   353  0813                     	;# 
   354  0814                     	;# 
   355  0815                     	;# 
   356  0816                     	;# 
   357  0817                     	;# 
   358  0818                     	;# 
   359  0819                     	;# 
   360  081A                     	;# 
   361  081A                     	;# 
   362  081B                     	;# 
   363  081C                     	;# 
   364  081C                     	;# 
   365  081D                     	;# 
   366  088C                     	;# 
   367  088D                     	;# 
   368  088E                     	;# 
   369  088F                     	;# 
   370  088F                     	;# 
   371  0890                     	;# 
   372  0891                     	;# 
   373  0892                     	;# 
   374  0893                     	;# 
   375  0893                     	;# 
   376  0894                     	;# 
   377  0895                     	;# 
   378  0896                     	;# 
   379  0897                     	;# 
   380  0897                     	;# 
   381  0898                     	;# 
   382  0899                     	;# 
   383  0D8C                     	;# 
   384  0D8C                     	;# 
   385  0D8D                     	;# 
   386  0D8E                     	;# 
   387  0D8F                     	;# 
   388  0D8F                     	;# 
   389  0D90                     	;# 
   390  0D91                     	;# 
   391  0D92                     	;# 
   392  0D92                     	;# 
   393  0D93                     	;# 
   394  0D94                     	;# 
   395  0D95                     	;# 
   396  0D95                     	;# 
   397  0D96                     	;# 
   398  0D97                     	;# 
   399  0D98                     	;# 
   400  0D99                     	;# 
   401  0D9A                     	;# 
   402  0D9B                     	;# 
   403  0D9C                     	;# 
   404  0D9D                     	;# 
   405  0D9E                     	;# 
   406  0D9E                     	;# 
   407  0D9F                     	;# 
   408  0DA0                     	;# 
   409  0DA1                     	;# 
   410  0DA1                     	;# 
   411  0DA2                     	;# 
   412  0DA3                     	;# 
   413  0DA4                     	;# 
   414  0DA4                     	;# 
   415  0DA5                     	;# 
   416  0DA6                     	;# 
   417  0DA7                     	;# 
   418  0DA7                     	;# 
   419  0DA8                     	;# 
   420  0DA9                     	;# 
   421  0DAA                     	;# 
   422  0DAB                     	;# 
   423  0DAC                     	;# 
   424  0DAD                     	;# 
   425  0DAE                     	;# 
   426  0DAF                     	;# 
   427  0E0F                     	;# 
   428  0E10                     	;# 
   429  0E11                     	;# 
   430  0E12                     	;# 
   431  0E13                     	;# 
   432  0E14                     	;# 
   433  0E15                     	;# 
   434  0E16                     	;# 
   435  0E17                     	;# 
   436  0E18                     	;# 
   437  0E19                     	;# 
   438  0E1A                     	;# 
   439  0E1B                     	;# 
   440  0E1C                     	;# 
   441  0E1D                     	;# 
   442  0E1E                     	;# 
   443  0E1F                     	;# 
   444  0E20                     	;# 
   445  0E21                     	;# 
   446  0E22                     	;# 
   447  0E23                     	;# 
   448  0E24                     	;# 
   449  0E25                     	;# 
   450  0E26                     	;# 
   451  0E27                     	;# 
   452  0E28                     	;# 
   453  0E29                     	;# 
   454  0E2A                     	;# 
   455  0E2B                     	;# 
   456  0E2C                     	;# 
   457  0E2D                     	;# 
   458  0E2E                     	;# 
   459  0E90                     	;# 
   460  0E91                     	;# 
   461  0E92                     	;# 
   462  0E94                     	;# 
   463  0E95                     	;# 
   464  0E9C                     	;# 
   465  0E9D                     	;# 
   466  0E9E                     	;# 
   467  0E9F                     	;# 
   468  0EA0                     	;# 
   469  0EA1                     	;# 
   470  0EA2                     	;# 
   471  0EA3                     	;# 
   472  0EA4                     	;# 
   473  0EA5                     	;# 
   474  0EA6                     	;# 
   475  0EA7                     	;# 
   476  0F0F                     	;# 
   477  0F10                     	;# 
   478  0F11                     	;# 
   479  0F12                     	;# 
   480  0F13                     	;# 
   481  0F14                     	;# 
   482  0F15                     	;# 
   483  0F16                     	;# 
   484  0F17                     	;# 
   485  0F18                     	;# 
   486  0F19                     	;# 
   487  0F1A                     	;# 
   488  0F1B                     	;# 
   489  0F1C                     	;# 
   490  0F1D                     	;# 
   491  0F1E                     	;# 
   492  0F1F                     	;# 
   493  0F20                     	;# 
   494  0F21                     	;# 
   495  0F22                     	;# 
   496  0F23                     	;# 
   497  0F24                     	;# 
   498  0F25                     	;# 
   499  0F26                     	;# 
   500  0F27                     	;# 
   501  0F28                     	;# 
   502  0F29                     	;# 
   503  0F2A                     	;# 
   504  0F2B                     	;# 
   505  0F2C                     	;# 
   506  0F2D                     	;# 
   507  0F2E                     	;# 
   508  0F2F                     	;# 
   509  0F30                     	;# 
   510  0F31                     	;# 
   511  0F32                     	;# 
   512  0F33                     	;# 
   513  0F34                     	;# 
   514  0F35                     	;# 
   515  0F36                     	;# 
   516  0F37                     	;# 
   517  0FE4                     	;# 
   518  0FE5                     	;# 
   519  0FE6                     	;# 
   520  0FE7                     	;# 
   521  0FE8                     	;# 
   522  0FE9                     	;# 
   523  0FEA                     	;# 
   524  0FEB                     	;# 
   525  0FED                     	;# 
   526  0FEE                     	;# 
   527  0FEF                     	;# 
   528  0000                     	;# 
   529  0001                     	;# 
   530  0002                     	;# 
   531  0003                     	;# 
   532  0004                     	;# 
   533  0005                     	;# 
   534  0006                     	;# 
   535  0007                     	;# 
   536  0008                     	;# 
   537  0009                     	;# 
   538  000A                     	;# 
   539  000B                     	;# 
   540  000C                     	;# 
   541  000D                     	;# 
   542  000E                     	;# 
   543  0010                     	;# 
   544  0011                     	;# 
   545  0012                     	;# 
   546  0013                     	;# 
   547  0014                     	;# 
   548  0015                     	;# 
   549  0016                     	;# 
   550  0016                     	;# 
   551  0017                     	;# 
   552  0018                     	;# 
   553  0019                     	;# 
   554  001A                     	;# 
   555  001A                     	;# 
   556  001B                     	;# 
   557  001B                     	;# 
   558  001C                     	;# 
   559  001D                     	;# 
   560  001E                     	;# 
   561  001F                     	;# 
   562  008C                     	;# 
   563  008D                     	;# 
   564  008E                     	;# 
   565  0090                     	;# 
   566  0091                     	;# 
   567  0092                     	;# 
   568  0093                     	;# 
   569  0094                     	;# 
   570  0095                     	;# 
   571  0096                     	;# 
   572  0098                     	;# 
   573  0099                     	;# 
   574  009A                     	;# 
   575  009B                     	;# 
   576  009B                     	;# 
   577  009C                     	;# 
   578  009D                     	;# 
   579  009E                     	;# 
   580  009F                     	;# 
   581  010C                     	;# 
   582  010D                     	;# 
   583  010E                     	;# 
   584  0111                     	;# 
   585  0112                     	;# 
   586  0113                     	;# 
   587  0114                     	;# 
   588  0115                     	;# 
   589  0116                     	;# 
   590  0117                     	;# 
   591  0118                     	;# 
   592  0119                     	;# 
   593  011C                     	;# 
   594  018C                     	;# 
   595  018D                     	;# 
   596  018E                     	;# 
   597  0191                     	;# 
   598  0191                     	;# 
   599  0192                     	;# 
   600  0193                     	;# 
   601  0193                     	;# 
   602  0194                     	;# 
   603  0195                     	;# 
   604  0196                     	;# 
   605  0197                     	;# 
   606  0199                     	;# 
   607  0199                     	;# 
   608  0199                     	;# 
   609  019A                     	;# 
   610  019A                     	;# 
   611  019A                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019C                     	;# 
   618  019C                     	;# 
   619  019C                     	;# 
   620  019D                     	;# 
   621  019D                     	;# 
   622  019D                     	;# 
   623  019E                     	;# 
   624  019E                     	;# 
   625  019E                     	;# 
   626  019F                     	;# 
   627  019F                     	;# 
   628  019F                     	;# 
   629  019F                     	;# 
   630  019F                     	;# 
   631  020C                     	;# 
   632  020D                     	;# 
   633  020E                     	;# 
   634  0211                     	;# 
   635  0211                     	;# 
   636  0212                     	;# 
   637  0212                     	;# 
   638  0213                     	;# 
   639  0213                     	;# 
   640  0214                     	;# 
   641  0214                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0215                     	;# 
   645  0215                     	;# 
   646  0216                     	;# 
   647  0216                     	;# 
   648  0217                     	;# 
   649  0217                     	;# 
   650  028C                     	;# 
   651  028D                     	;# 
   652  028E                     	;# 
   653  0291                     	;# 
   654  0291                     	;# 
   655  0292                     	;# 
   656  0293                     	;# 
   657  0294                     	;# 
   658  0298                     	;# 
   659  0298                     	;# 
   660  0299                     	;# 
   661  029A                     	;# 
   662  029B                     	;# 
   663  029E                     	;# 
   664  030C                     	;# 
   665  030D                     	;# 
   666  030E                     	;# 
   667  038C                     	;# 
   668  038D                     	;# 
   669  038E                     	;# 
   670  0391                     	;# 
   671  0392                     	;# 
   672  0393                     	;# 
   673  0394                     	;# 
   674  0395                     	;# 
   675  0396                     	;# 
   676  0397                     	;# 
   677  0398                     	;# 
   678  0399                     	;# 
   679  040E                     	;# 
   680  0413                     	;# 
   681  0413                     	;# 
   682  0414                     	;# 
   683  0414                     	;# 
   684  0415                     	;# 
   685  0416                     	;# 
   686  0417                     	;# 
   687  0418                     	;# 
   688  041A                     	;# 
   689  041A                     	;# 
   690  041B                     	;# 
   691  041B                     	;# 
   692  041C                     	;# 
   693  041D                     	;# 
   694  041E                     	;# 
   695  041F                     	;# 
   696  0493                     	;# 
   697  0494                     	;# 
   698  0495                     	;# 
   699  0496                     	;# 
   700  049A                     	;# 
   701  049B                     	;# 
   702  049C                     	;# 
   703  049D                     	;# 
   704  058C                     	;# 
   705  058C                     	;# 
   706  058D                     	;# 
   707  058E                     	;# 
   708  058E                     	;# 
   709  058F                     	;# 
   710  0590                     	;# 
   711  0590                     	;# 
   712  0591                     	;# 
   713  0592                     	;# 
   714  0592                     	;# 
   715  0593                     	;# 
   716  0594                     	;# 
   717  0594                     	;# 
   718  0595                     	;# 
   719  0596                     	;# 
   720  0596                     	;# 
   721  0597                     	;# 
   722  0598                     	;# 
   723  0599                     	;# 
   724  059A                     	;# 
   725  059B                     	;# 
   726  059B                     	;# 
   727  059C                     	;# 
   728  059D                     	;# 
   729  060C                     	;# 
   730  060C                     	;# 
   731  060D                     	;# 
   732  060E                     	;# 
   733  060F                     	;# 
   734  060F                     	;# 
   735  0610                     	;# 
   736  0611                     	;# 
   737  0612                     	;# 
   738  0613                     	;# 
   739  0614                     	;# 
   740  0617                     	;# 
   741  0617                     	;# 
   742  0618                     	;# 
   743  0619                     	;# 
   744  061A                     	;# 
   745  061A                     	;# 
   746  061B                     	;# 
   747  061C                     	;# 
   748  0691                     	;# 
   749  0692                     	;# 
   750  0693                     	;# 
   751  0694                     	;# 
   752  0695                     	;# 
   753  0696                     	;# 
   754  0697                     	;# 
   755  0699                     	;# 
   756  069A                     	;# 
   757  0711                     	;# 
   758  0712                     	;# 
   759  0713                     	;# 
   760  0714                     	;# 
   761  0715                     	;# 
   762  0718                     	;# 
   763  0718                     	;# 
   764  0719                     	;# 
   765  071A                     	;# 
   766  071A                     	;# 
   767  071B                     	;# 
   768  071C                     	;# 
   769  071D                     	;# 
   770  0791                     	;# 
   771  0791                     	;# 
   772  0792                     	;# 
   773  0793                     	;# 
   774  0793                     	;# 
   775  0794                     	;# 
   776  0795                     	;# 
   777  0795                     	;# 
   778  0796                     	;# 
   779  0797                     	;# 
   780  0797                     	;# 
   781  0798                     	;# 
   782  0799                     	;# 
   783  079A                     	;# 
   784  080C                     	;# 
   785  080C                     	;# 
   786  080D                     	;# 
   787  080E                     	;# 
   788  080E                     	;# 
   789  080F                     	;# 
   790  0810                     	;# 
   791  0810                     	;# 
   792  0811                     	;# 
   793  0812                     	;# 
   794  0812                     	;# 
   795  0813                     	;# 
   796  0814                     	;# 
   797  0815                     	;# 
   798  0816                     	;# 
   799  0817                     	;# 
   800  0818                     	;# 
   801  0819                     	;# 
   802  081A                     	;# 
   803  081A                     	;# 
   804  081B                     	;# 
   805  081C                     	;# 
   806  081C                     	;# 
   807  081D                     	;# 
   808  088C                     	;# 
   809  088D                     	;# 
   810  088E                     	;# 
   811  088F                     	;# 
   812  088F                     	;# 
   813  0890                     	;# 
   814  0891                     	;# 
   815  0892                     	;# 
   816  0893                     	;# 
   817  0893                     	;# 
   818  0894                     	;# 
   819  0895                     	;# 
   820  0896                     	;# 
   821  0897                     	;# 
   822  0897                     	;# 
   823  0898                     	;# 
   824  0899                     	;# 
   825  0D8C                     	;# 
   826  0D8C                     	;# 
   827  0D8D                     	;# 
   828  0D8E                     	;# 
   829  0D8F                     	;# 
   830  0D8F                     	;# 
   831  0D90                     	;# 
   832  0D91                     	;# 
   833  0D92                     	;# 
   834  0D92                     	;# 
   835  0D93                     	;# 
   836  0D94                     	;# 
   837  0D95                     	;# 
   838  0D95                     	;# 
   839  0D96                     	;# 
   840  0D97                     	;# 
   841  0D98                     	;# 
   842  0D99                     	;# 
   843  0D9A                     	;# 
   844  0D9B                     	;# 
   845  0D9C                     	;# 
   846  0D9D                     	;# 
   847  0D9E                     	;# 
   848  0D9E                     	;# 
   849  0D9F                     	;# 
   850  0DA0                     	;# 
   851  0DA1                     	;# 
   852  0DA1                     	;# 
   853  0DA2                     	;# 
   854  0DA3                     	;# 
   855  0DA4                     	;# 
   856  0DA4                     	;# 
   857  0DA5                     	;# 
   858  0DA6                     	;# 
   859  0DA7                     	;# 
   860  0DA7                     	;# 
   861  0DA8                     	;# 
   862  0DA9                     	;# 
   863  0DAA                     	;# 
   864  0DAB                     	;# 
   865  0DAC                     	;# 
   866  0DAD                     	;# 
   867  0DAE                     	;# 
   868  0DAF                     	;# 
   869  0E0F                     	;# 
   870  0E10                     	;# 
   871  0E11                     	;# 
   872  0E12                     	;# 
   873  0E13                     	;# 
   874  0E14                     	;# 
   875  0E15                     	;# 
   876  0E16                     	;# 
   877  0E17                     	;# 
   878  0E18                     	;# 
   879  0E19                     	;# 
   880  0E1A                     	;# 
   881  0E1B                     	;# 
   882  0E1C                     	;# 
   883  0E1D                     	;# 
   884  0E1E                     	;# 
   885  0E1F                     	;# 
   886  0E20                     	;# 
   887  0E21                     	;# 
   888  0E22                     	;# 
   889  0E23                     	;# 
   890  0E24                     	;# 
   891  0E25                     	;# 
   892  0E26                     	;# 
   893  0E27                     	;# 
   894  0E28                     	;# 
   895  0E29                     	;# 
   896  0E2A                     	;# 
   897  0E2B                     	;# 
   898  0E2C                     	;# 
   899  0E2D                     	;# 
   900  0E2E                     	;# 
   901  0E90                     	;# 
   902  0E91                     	;# 
   903  0E92                     	;# 
   904  0E94                     	;# 
   905  0E95                     	;# 
   906  0E9C                     	;# 
   907  0E9D                     	;# 
   908  0E9E                     	;# 
   909  0E9F                     	;# 
   910  0EA0                     	;# 
   911  0EA1                     	;# 
   912  0EA2                     	;# 
   913  0EA3                     	;# 
   914  0EA4                     	;# 
   915  0EA5                     	;# 
   916  0EA6                     	;# 
   917  0EA7                     	;# 
   918  0F0F                     	;# 
   919  0F10                     	;# 
   920  0F11                     	;# 
   921  0F12                     	;# 
   922  0F13                     	;# 
   923  0F14                     	;# 
   924  0F15                     	;# 
   925  0F16                     	;# 
   926  0F17                     	;# 
   927  0F18                     	;# 
   928  0F19                     	;# 
   929  0F1A                     	;# 
   930  0F1B                     	;# 
   931  0F1C                     	;# 
   932  0F1D                     	;# 
   933  0F1E                     	;# 
   934  0F1F                     	;# 
   935  0F20                     	;# 
   936  0F21                     	;# 
   937  0F22                     	;# 
   938  0F23                     	;# 
   939  0F24                     	;# 
   940  0F25                     	;# 
   941  0F26                     	;# 
   942  0F27                     	;# 
   943  0F28                     	;# 
   944  0F29                     	;# 
   945  0F2A                     	;# 
   946  0F2B                     	;# 
   947  0F2C                     	;# 
   948  0F2D                     	;# 
   949  0F2E                     	;# 
   950  0F2F                     	;# 
   951  0F30                     	;# 
   952  0F31                     	;# 
   953  0F32                     	;# 
   954  0F33                     	;# 
   955  0F34                     	;# 
   956  0F35                     	;# 
   957  0F36                     	;# 
   958  0F37                     	;# 
   959  0FE4                     	;# 
   960  0FE5                     	;# 
   961  0FE6                     	;# 
   962  0FE7                     	;# 
   963  0FE8                     	;# 
   964  0FE9                     	;# 
   965  0FEA                     	;# 
   966  0FEB                     	;# 
   967  0FED                     	;# 
   968  0FEE                     	;# 
   969  0FEF                     	;# 
   970  0000                     	;# 
   971  0001                     	;# 
   972  0002                     	;# 
   973  0003                     	;# 
   974  0004                     	;# 
   975  0005                     	;# 
   976  0006                     	;# 
   977  0007                     	;# 
   978  0008                     	;# 
   979  0009                     	;# 
   980  000A                     	;# 
   981  000B                     	;# 
   982  000C                     	;# 
   983  000D                     	;# 
   984  000E                     	;# 
   985  0010                     	;# 
   986  0011                     	;# 
   987  0012                     	;# 
   988  0013                     	;# 
   989  0014                     	;# 
   990  0015                     	;# 
   991  0016                     	;# 
   992  0016                     	;# 
   993  0017                     	;# 
   994  0018                     	;# 
   995  0019                     	;# 
   996  001A                     	;# 
   997  001A                     	;# 
   998  001B                     	;# 
   999  001B                     	;# 
  1000  001C                     	;# 
  1001  001D                     	;# 
  1002  001E                     	;# 
  1003  001F                     	;# 
  1004  008C                     	;# 
  1005  008D                     	;# 
  1006  008E                     	;# 
  1007  0090                     	;# 
  1008  0091                     	;# 
  1009  0092                     	;# 
  1010  0093                     	;# 
  1011  0094                     	;# 
  1012  0095                     	;# 
  1013  0096                     	;# 
  1014  0098                     	;# 
  1015  0099                     	;# 
  1016  009A                     	;# 
  1017  009B                     	;# 
  1018  009B                     	;# 
  1019  009C                     	;# 
  1020  009D                     	;# 
  1021  009E                     	;# 
  1022  009F                     	;# 
  1023  010C                     	;# 
  1024  010D                     	;# 
  1025  010E                     	;# 
  1026  0111                     	;# 
  1027  0112                     	;# 
  1028  0113                     	;# 
  1029  0114                     	;# 
  1030  0115                     	;# 
  1031  0116                     	;# 
  1032  0117                     	;# 
  1033  0118                     	;# 
  1034  0119                     	;# 
  1035  011C                     	;# 
  1036  018C                     	;# 
  1037  018D                     	;# 
  1038  018E                     	;# 
  1039  0191                     	;# 
  1040  0191                     	;# 
  1041  0192                     	;# 
  1042  0193                     	;# 
  1043  0193                     	;# 
  1044  0194                     	;# 
  1045  0195                     	;# 
  1046  0196                     	;# 
  1047  0197                     	;# 
  1048  0199                     	;# 
  1049  0199                     	;# 
  1050  0199                     	;# 
  1051  019A                     	;# 
  1052  019A                     	;# 
  1053  019A                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019B                     	;# 
  1059  019C                     	;# 
  1060  019C                     	;# 
  1061  019C                     	;# 
  1062  019D                     	;# 
  1063  019D                     	;# 
  1064  019D                     	;# 
  1065  019E                     	;# 
  1066  019E                     	;# 
  1067  019E                     	;# 
  1068  019F                     	;# 
  1069  019F                     	;# 
  1070  019F                     	;# 
  1071  019F                     	;# 
  1072  019F                     	;# 
  1073  020C                     	;# 
  1074  020D                     	;# 
  1075  020E                     	;# 
  1076  0211                     	;# 
  1077  0211                     	;# 
  1078  0212                     	;# 
  1079  0212                     	;# 
  1080  0213                     	;# 
  1081  0213                     	;# 
  1082  0214                     	;# 
  1083  0214                     	;# 
  1084  0215                     	;# 
  1085  0215                     	;# 
  1086  0215                     	;# 
  1087  0215                     	;# 
  1088  0216                     	;# 
  1089  0216                     	;# 
  1090  0217                     	;# 
  1091  0217                     	;# 
  1092  028C                     	;# 
  1093  028D                     	;# 
  1094  028E                     	;# 
  1095  0291                     	;# 
  1096  0291                     	;# 
  1097  0292                     	;# 
  1098  0293                     	;# 
  1099  0294                     	;# 
  1100  0298                     	;# 
  1101  0298                     	;# 
  1102  0299                     	;# 
  1103  029A                     	;# 
  1104  029B                     	;# 
  1105  029E                     	;# 
  1106  030C                     	;# 
  1107  030D                     	;# 
  1108  030E                     	;# 
  1109  038C                     	;# 
  1110  038D                     	;# 
  1111  038E                     	;# 
  1112  0391                     	;# 
  1113  0392                     	;# 
  1114  0393                     	;# 
  1115  0394                     	;# 
  1116  0395                     	;# 
  1117  0396                     	;# 
  1118  0397                     	;# 
  1119  0398                     	;# 
  1120  0399                     	;# 
  1121  040E                     	;# 
  1122  0413                     	;# 
  1123  0413                     	;# 
  1124  0414                     	;# 
  1125  0414                     	;# 
  1126  0415                     	;# 
  1127  0416                     	;# 
  1128  0417                     	;# 
  1129  0418                     	;# 
  1130  041A                     	;# 
  1131  041A                     	;# 
  1132  041B                     	;# 
  1133  041B                     	;# 
  1134  041C                     	;# 
  1135  041D                     	;# 
  1136  041E                     	;# 
  1137  041F                     	;# 
  1138  0493                     	;# 
  1139  0494                     	;# 
  1140  0495                     	;# 
  1141  0496                     	;# 
  1142  049A                     	;# 
  1143  049B                     	;# 
  1144  049C                     	;# 
  1145  049D                     	;# 
  1146  058C                     	;# 
  1147  058C                     	;# 
  1148  058D                     	;# 
  1149  058E                     	;# 
  1150  058E                     	;# 
  1151  058F                     	;# 
  1152  0590                     	;# 
  1153  0590                     	;# 
  1154  0591                     	;# 
  1155  0592                     	;# 
  1156  0592                     	;# 
  1157  0593                     	;# 
  1158  0594                     	;# 
  1159  0594                     	;# 
  1160  0595                     	;# 
  1161  0596                     	;# 
  1162  0596                     	;# 
  1163  0597                     	;# 
  1164  0598                     	;# 
  1165  0599                     	;# 
  1166  059A                     	;# 
  1167  059B                     	;# 
  1168  059B                     	;# 
  1169  059C                     	;# 
  1170  059D                     	;# 
  1171  060C                     	;# 
  1172  060C                     	;# 
  1173  060D                     	;# 
  1174  060E                     	;# 
  1175  060F                     	;# 
  1176  060F                     	;# 
  1177  0610                     	;# 
  1178  0611                     	;# 
  1179  0612                     	;# 
  1180  0613                     	;# 
  1181  0614                     	;# 
  1182  0617                     	;# 
  1183  0617                     	;# 
  1184  0618                     	;# 
  1185  0619                     	;# 
  1186  061A                     	;# 
  1187  061A                     	;# 
  1188  061B                     	;# 
  1189  061C                     	;# 
  1190  0691                     	;# 
  1191  0692                     	;# 
  1192  0693                     	;# 
  1193  0694                     	;# 
  1194  0695                     	;# 
  1195  0696                     	;# 
  1196  0697                     	;# 
  1197  0699                     	;# 
  1198  069A                     	;# 
  1199  0711                     	;# 
  1200  0712                     	;# 
  1201  0713                     	;# 
  1202  0714                     	;# 
  1203  0715                     	;# 
  1204  0718                     	;# 
  1205  0718                     	;# 
  1206  0719                     	;# 
  1207  071A                     	;# 
  1208  071A                     	;# 
  1209  071B                     	;# 
  1210  071C                     	;# 
  1211  071D                     	;# 
  1212  0791                     	;# 
  1213  0791                     	;# 
  1214  0792                     	;# 
  1215  0793                     	;# 
  1216  0793                     	;# 
  1217  0794                     	;# 
  1218  0795                     	;# 
  1219  0795                     	;# 
  1220  0796                     	;# 
  1221  0797                     	;# 
  1222  0797                     	;# 
  1223  0798                     	;# 
  1224  0799                     	;# 
  1225  079A                     	;# 
  1226  080C                     	;# 
  1227  080C                     	;# 
  1228  080D                     	;# 
  1229  080E                     	;# 
  1230  080E                     	;# 
  1231  080F                     	;# 
  1232  0810                     	;# 
  1233  0810                     	;# 
  1234  0811                     	;# 
  1235  0812                     	;# 
  1236  0812                     	;# 
  1237  0813                     	;# 
  1238  0814                     	;# 
  1239  0815                     	;# 
  1240  0816                     	;# 
  1241  0817                     	;# 
  1242  0818                     	;# 
  1243  0819                     	;# 
  1244  081A                     	;# 
  1245  081A                     	;# 
  1246  081B                     	;# 
  1247  081C                     	;# 
  1248  081C                     	;# 
  1249  081D                     	;# 
  1250  088C                     	;# 
  1251  088D                     	;# 
  1252  088E                     	;# 
  1253  088F                     	;# 
  1254  088F                     	;# 
  1255  0890                     	;# 
  1256  0891                     	;# 
  1257  0892                     	;# 
  1258  0893                     	;# 
  1259  0893                     	;# 
  1260  0894                     	;# 
  1261  0895                     	;# 
  1262  0896                     	;# 
  1263  0897                     	;# 
  1264  0897                     	;# 
  1265  0898                     	;# 
  1266  0899                     	;# 
  1267  0D8C                     	;# 
  1268  0D8C                     	;# 
  1269  0D8D                     	;# 
  1270  0D8E                     	;# 
  1271  0D8F                     	;# 
  1272  0D8F                     	;# 
  1273  0D90                     	;# 
  1274  0D91                     	;# 
  1275  0D92                     	;# 
  1276  0D92                     	;# 
  1277  0D93                     	;# 
  1278  0D94                     	;# 
  1279  0D95                     	;# 
  1280  0D95                     	;# 
  1281  0D96                     	;# 
  1282  0D97                     	;# 
  1283  0D98                     	;# 
  1284  0D99                     	;# 
  1285  0D9A                     	;# 
  1286  0D9B                     	;# 
  1287  0D9C                     	;# 
  1288  0D9D                     	;# 
  1289  0D9E                     	;# 
  1290  0D9E                     	;# 
  1291  0D9F                     	;# 
  1292  0DA0                     	;# 
  1293  0DA1                     	;# 
  1294  0DA1                     	;# 
  1295  0DA2                     	;# 
  1296  0DA3                     	;# 
  1297  0DA4                     	;# 
  1298  0DA4                     	;# 
  1299  0DA5                     	;# 
  1300  0DA6                     	;# 
  1301  0DA7                     	;# 
  1302  0DA7                     	;# 
  1303  0DA8                     	;# 
  1304  0DA9                     	;# 
  1305  0DAA                     	;# 
  1306  0DAB                     	;# 
  1307  0DAC                     	;# 
  1308  0DAD                     	;# 
  1309  0DAE                     	;# 
  1310  0DAF                     	;# 
  1311  0E0F                     	;# 
  1312  0E10                     	;# 
  1313  0E11                     	;# 
  1314  0E12                     	;# 
  1315  0E13                     	;# 
  1316  0E14                     	;# 
  1317  0E15                     	;# 
  1318  0E16                     	;# 
  1319  0E17                     	;# 
  1320  0E18                     	;# 
  1321  0E19                     	;# 
  1322  0E1A                     	;# 
  1323  0E1B                     	;# 
  1324  0E1C                     	;# 
  1325  0E1D                     	;# 
  1326  0E1E                     	;# 
  1327  0E1F                     	;# 
  1328  0E20                     	;# 
  1329  0E21                     	;# 
  1330  0E22                     	;# 
  1331  0E23                     	;# 
  1332  0E24                     	;# 
  1333  0E25                     	;# 
  1334  0E26                     	;# 
  1335  0E27                     	;# 
  1336  0E28                     	;# 
  1337  0E29                     	;# 
  1338  0E2A                     	;# 
  1339  0E2B                     	;# 
  1340  0E2C                     	;# 
  1341  0E2D                     	;# 
  1342  0E2E                     	;# 
  1343  0E90                     	;# 
  1344  0E91                     	;# 
  1345  0E92                     	;# 
  1346  0E94                     	;# 
  1347  0E95                     	;# 
  1348  0E9C                     	;# 
  1349  0E9D                     	;# 
  1350  0E9E                     	;# 
  1351  0E9F                     	;# 
  1352  0EA0                     	;# 
  1353  0EA1                     	;# 
  1354  0EA2                     	;# 
  1355  0EA3                     	;# 
  1356  0EA4                     	;# 
  1357  0EA5                     	;# 
  1358  0EA6                     	;# 
  1359  0EA7                     	;# 
  1360  0F0F                     	;# 
  1361  0F10                     	;# 
  1362  0F11                     	;# 
  1363  0F12                     	;# 
  1364  0F13                     	;# 
  1365  0F14                     	;# 
  1366  0F15                     	;# 
  1367  0F16                     	;# 
  1368  0F17                     	;# 
  1369  0F18                     	;# 
  1370  0F19                     	;# 
  1371  0F1A                     	;# 
  1372  0F1B                     	;# 
  1373  0F1C                     	;# 
  1374  0F1D                     	;# 
  1375  0F1E                     	;# 
  1376  0F1F                     	;# 
  1377  0F20                     	;# 
  1378  0F21                     	;# 
  1379  0F22                     	;# 
  1380  0F23                     	;# 
  1381  0F24                     	;# 
  1382  0F25                     	;# 
  1383  0F26                     	;# 
  1384  0F27                     	;# 
  1385  0F28                     	;# 
  1386  0F29                     	;# 
  1387  0F2A                     	;# 
  1388  0F2B                     	;# 
  1389  0F2C                     	;# 
  1390  0F2D                     	;# 
  1391  0F2E                     	;# 
  1392  0F2F                     	;# 
  1393  0F30                     	;# 
  1394  0F31                     	;# 
  1395  0F32                     	;# 
  1396  0F33                     	;# 
  1397  0F34                     	;# 
  1398  0F35                     	;# 
  1399  0F36                     	;# 
  1400  0F37                     	;# 
  1401  0FE4                     	;# 
  1402  0FE5                     	;# 
  1403  0FE6                     	;# 
  1404  0FE7                     	;# 
  1405  0FE8                     	;# 
  1406  0FE9                     	;# 
  1407  0FEA                     	;# 
  1408  0FEB                     	;# 
  1409  0FED                     	;# 
  1410  0FEE                     	;# 
  1411  0FEF                     	;# 
  1412  0000                     	;# 
  1413  0001                     	;# 
  1414  0002                     	;# 
  1415  0003                     	;# 
  1416  0004                     	;# 
  1417  0005                     	;# 
  1418  0006                     	;# 
  1419  0007                     	;# 
  1420  0008                     	;# 
  1421  0009                     	;# 
  1422  000A                     	;# 
  1423  000B                     	;# 
  1424  000C                     	;# 
  1425  000D                     	;# 
  1426  000E                     	;# 
  1427  0010                     	;# 
  1428  0011                     	;# 
  1429  0012                     	;# 
  1430  0013                     	;# 
  1431  0014                     	;# 
  1432  0015                     	;# 
  1433  0016                     	;# 
  1434  0016                     	;# 
  1435  0017                     	;# 
  1436  0018                     	;# 
  1437  0019                     	;# 
  1438  001A                     	;# 
  1439  001A                     	;# 
  1440  001B                     	;# 
  1441  001B                     	;# 
  1442  001C                     	;# 
  1443  001D                     	;# 
  1444  001E                     	;# 
  1445  001F                     	;# 
  1446  008C                     	;# 
  1447  008D                     	;# 
  1448  008E                     	;# 
  1449  0090                     	;# 
  1450  0091                     	;# 
  1451  0092                     	;# 
  1452  0093                     	;# 
  1453  0094                     	;# 
  1454  0095                     	;# 
  1455  0096                     	;# 
  1456  0098                     	;# 
  1457  0099                     	;# 
  1458  009A                     	;# 
  1459  009B                     	;# 
  1460  009B                     	;# 
  1461  009C                     	;# 
  1462  009D                     	;# 
  1463  009E                     	;# 
  1464  009F                     	;# 
  1465  010C                     	;# 
  1466  010D                     	;# 
  1467  010E                     	;# 
  1468  0111                     	;# 
  1469  0112                     	;# 
  1470  0113                     	;# 
  1471  0114                     	;# 
  1472  0115                     	;# 
  1473  0116                     	;# 
  1474  0117                     	;# 
  1475  0118                     	;# 
  1476  0119                     	;# 
  1477  011C                     	;# 
  1478  018C                     	;# 
  1479  018D                     	;# 
  1480  018E                     	;# 
  1481  0191                     	;# 
  1482  0191                     	;# 
  1483  0192                     	;# 
  1484  0193                     	;# 
  1485  0193                     	;# 
  1486  0194                     	;# 
  1487  0195                     	;# 
  1488  0196                     	;# 
  1489  0197                     	;# 
  1490  0199                     	;# 
  1491  0199                     	;# 
  1492  0199                     	;# 
  1493  019A                     	;# 
  1494  019A                     	;# 
  1495  019A                     	;# 
  1496  019B                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019C                     	;# 
  1502  019C                     	;# 
  1503  019C                     	;# 
  1504  019D                     	;# 
  1505  019D                     	;# 
  1506  019D                     	;# 
  1507  019E                     	;# 
  1508  019E                     	;# 
  1509  019E                     	;# 
  1510  019F                     	;# 
  1511  019F                     	;# 
  1512  019F                     	;# 
  1513  019F                     	;# 
  1514  019F                     	;# 
  1515  020C                     	;# 
  1516  020D                     	;# 
  1517  020E                     	;# 
  1518  0211                     	;# 
  1519  0211                     	;# 
  1520  0212                     	;# 
  1521  0212                     	;# 
  1522  0213                     	;# 
  1523  0213                     	;# 
  1524  0214                     	;# 
  1525  0214                     	;# 
  1526  0215                     	;# 
  1527  0215                     	;# 
  1528  0215                     	;# 
  1529  0215                     	;# 
  1530  0216                     	;# 
  1531  0216                     	;# 
  1532  0217                     	;# 
  1533  0217                     	;# 
  1534  028C                     	;# 
  1535  028D                     	;# 
  1536  028E                     	;# 
  1537  0291                     	;# 
  1538  0291                     	;# 
  1539  0292                     	;# 
  1540  0293                     	;# 
  1541  0294                     	;# 
  1542  0298                     	;# 
  1543  0298                     	;# 
  1544  0299                     	;# 
  1545  029A                     	;# 
  1546  029B                     	;# 
  1547  029E                     	;# 
  1548  030C                     	;# 
  1549  030D                     	;# 
  1550  030E                     	;# 
  1551  038C                     	;# 
  1552  038D                     	;# 
  1553  038E                     	;# 
  1554  0391                     	;# 
  1555  0392                     	;# 
  1556  0393                     	;# 
  1557  0394                     	;# 
  1558  0395                     	;# 
  1559  0396                     	;# 
  1560  0397                     	;# 
  1561  0398                     	;# 
  1562  0399                     	;# 
  1563  040E                     	;# 
  1564  0413                     	;# 
  1565  0413                     	;# 
  1566  0414                     	;# 
  1567  0414                     	;# 
  1568  0415                     	;# 
  1569  0416                     	;# 
  1570  0417                     	;# 
  1571  0418                     	;# 
  1572  041A                     	;# 
  1573  041A                     	;# 
  1574  041B                     	;# 
  1575  041B                     	;# 
  1576  041C                     	;# 
  1577  041D                     	;# 
  1578  041E                     	;# 
  1579  041F                     	;# 
  1580  0493                     	;# 
  1581  0494                     	;# 
  1582  0495                     	;# 
  1583  0496                     	;# 
  1584  049A                     	;# 
  1585  049B                     	;# 
  1586  049C                     	;# 
  1587  049D                     	;# 
  1588  058C                     	;# 
  1589  058C                     	;# 
  1590  058D                     	;# 
  1591  058E                     	;# 
  1592  058E                     	;# 
  1593  058F                     	;# 
  1594  0590                     	;# 
  1595  0590                     	;# 
  1596  0591                     	;# 
  1597  0592                     	;# 
  1598  0592                     	;# 
  1599  0593                     	;# 
  1600  0594                     	;# 
  1601  0594                     	;# 
  1602  0595                     	;# 
  1603  0596                     	;# 
  1604  0596                     	;# 
  1605  0597                     	;# 
  1606  0598                     	;# 
  1607  0599                     	;# 
  1608  059A                     	;# 
  1609  059B                     	;# 
  1610  059B                     	;# 
  1611  059C                     	;# 
  1612  059D                     	;# 
  1613  060C                     	;# 
  1614  060C                     	;# 
  1615  060D                     	;# 
  1616  060E                     	;# 
  1617  060F                     	;# 
  1618  060F                     	;# 
  1619  0610                     	;# 
  1620  0611                     	;# 
  1621  0612                     	;# 
  1622  0613                     	;# 
  1623  0614                     	;# 
  1624  0617                     	;# 
  1625  0617                     	;# 
  1626  0618                     	;# 
  1627  0619                     	;# 
  1628  061A                     	;# 
  1629  061A                     	;# 
  1630  061B                     	;# 
  1631  061C                     	;# 
  1632  0691                     	;# 
  1633  0692                     	;# 
  1634  0693                     	;# 
  1635  0694                     	;# 
  1636  0695                     	;# 
  1637  0696                     	;# 
  1638  0697                     	;# 
  1639  0699                     	;# 
  1640  069A                     	;# 
  1641  0711                     	;# 
  1642  0712                     	;# 
  1643  0713                     	;# 
  1644  0714                     	;# 
  1645  0715                     	;# 
  1646  0718                     	;# 
  1647  0718                     	;# 
  1648  0719                     	;# 
  1649  071A                     	;# 
  1650  071A                     	;# 
  1651  071B                     	;# 
  1652  071C                     	;# 
  1653  071D                     	;# 
  1654  0791                     	;# 
  1655  0791                     	;# 
  1656  0792                     	;# 
  1657  0793                     	;# 
  1658  0793                     	;# 
  1659  0794                     	;# 
  1660  0795                     	;# 
  1661  0795                     	;# 
  1662  0796                     	;# 
  1663  0797                     	;# 
  1664  0797                     	;# 
  1665  0798                     	;# 
  1666  0799                     	;# 
  1667  079A                     	;# 
  1668  080C                     	;# 
  1669  080C                     	;# 
  1670  080D                     	;# 
  1671  080E                     	;# 
  1672  080E                     	;# 
  1673  080F                     	;# 
  1674  0810                     	;# 
  1675  0810                     	;# 
  1676  0811                     	;# 
  1677  0812                     	;# 
  1678  0812                     	;# 
  1679  0813                     	;# 
  1680  0814                     	;# 
  1681  0815                     	;# 
  1682  0816                     	;# 
  1683  0817                     	;# 
  1684  0818                     	;# 
  1685  0819                     	;# 
  1686  081A                     	;# 
  1687  081A                     	;# 
  1688  081B                     	;# 
  1689  081C                     	;# 
  1690  081C                     	;# 
  1691  081D                     	;# 
  1692  088C                     	;# 
  1693  088D                     	;# 
  1694  088E                     	;# 
  1695  088F                     	;# 
  1696  088F                     	;# 
  1697  0890                     	;# 
  1698  0891                     	;# 
  1699  0892                     	;# 
  1700  0893                     	;# 
  1701  0893                     	;# 
  1702  0894                     	;# 
  1703  0895                     	;# 
  1704  0896                     	;# 
  1705  0897                     	;# 
  1706  0897                     	;# 
  1707  0898                     	;# 
  1708  0899                     	;# 
  1709  0D8C                     	;# 
  1710  0D8C                     	;# 
  1711  0D8D                     	;# 
  1712  0D8E                     	;# 
  1713  0D8F                     	;# 
  1714  0D8F                     	;# 
  1715  0D90                     	;# 
  1716  0D91                     	;# 
  1717  0D92                     	;# 
  1718  0D92                     	;# 
  1719  0D93                     	;# 
  1720  0D94                     	;# 
  1721  0D95                     	;# 
  1722  0D95                     	;# 
  1723  0D96                     	;# 
  1724  0D97                     	;# 
  1725  0D98                     	;# 
  1726  0D99                     	;# 
  1727  0D9A                     	;# 
  1728  0D9B                     	;# 
  1729  0D9C                     	;# 
  1730  0D9D                     	;# 
  1731  0D9E                     	;# 
  1732  0D9E                     	;# 
  1733  0D9F                     	;# 
  1734  0DA0                     	;# 
  1735  0DA1                     	;# 
  1736  0DA1                     	;# 
  1737  0DA2                     	;# 
  1738  0DA3                     	;# 
  1739  0DA4                     	;# 
  1740  0DA4                     	;# 
  1741  0DA5                     	;# 
  1742  0DA6                     	;# 
  1743  0DA7                     	;# 
  1744  0DA7                     	;# 
  1745  0DA8                     	;# 
  1746  0DA9                     	;# 
  1747  0DAA                     	;# 
  1748  0DAB                     	;# 
  1749  0DAC                     	;# 
  1750  0DAD                     	;# 
  1751  0DAE                     	;# 
  1752  0DAF                     	;# 
  1753  0E0F                     	;# 
  1754  0E10                     	;# 
  1755  0E11                     	;# 
  1756  0E12                     	;# 
  1757  0E13                     	;# 
  1758  0E14                     	;# 
  1759  0E15                     	;# 
  1760  0E16                     	;# 
  1761  0E17                     	;# 
  1762  0E18                     	;# 
  1763  0E19                     	;# 
  1764  0E1A                     	;# 
  1765  0E1B                     	;# 
  1766  0E1C                     	;# 
  1767  0E1D                     	;# 
  1768  0E1E                     	;# 
  1769  0E1F                     	;# 
  1770  0E20                     	;# 
  1771  0E21                     	;# 
  1772  0E22                     	;# 
  1773  0E23                     	;# 
  1774  0E24                     	;# 
  1775  0E25                     	;# 
  1776  0E26                     	;# 
  1777  0E27                     	;# 
  1778  0E28                     	;# 
  1779  0E29                     	;# 
  1780  0E2A                     	;# 
  1781  0E2B                     	;# 
  1782  0E2C                     	;# 
  1783  0E2D                     	;# 
  1784  0E2E                     	;# 
  1785  0E90                     	;# 
  1786  0E91                     	;# 
  1787  0E92                     	;# 
  1788  0E94                     	;# 
  1789  0E95                     	;# 
  1790  0E9C                     	;# 
  1791  0E9D                     	;# 
  1792  0E9E                     	;# 
  1793  0E9F                     	;# 
  1794  0EA0                     	;# 
  1795  0EA1                     	;# 
  1796  0EA2                     	;# 
  1797  0EA3                     	;# 
  1798  0EA4                     	;# 
  1799  0EA5                     	;# 
  1800  0EA6                     	;# 
  1801  0EA7                     	;# 
  1802  0F0F                     	;# 
  1803  0F10                     	;# 
  1804  0F11                     	;# 
  1805  0F12                     	;# 
  1806  0F13                     	;# 
  1807  0F14                     	;# 
  1808  0F15                     	;# 
  1809  0F16                     	;# 
  1810  0F17                     	;# 
  1811  0F18                     	;# 
  1812  0F19                     	;# 
  1813  0F1A                     	;# 
  1814  0F1B                     	;# 
  1815  0F1C                     	;# 
  1816  0F1D                     	;# 
  1817  0F1E                     	;# 
  1818  0F1F                     	;# 
  1819  0F20                     	;# 
  1820  0F21                     	;# 
  1821  0F22                     	;# 
  1822  0F23                     	;# 
  1823  0F24                     	;# 
  1824  0F25                     	;# 
  1825  0F26                     	;# 
  1826  0F27                     	;# 
  1827  0F28                     	;# 
  1828  0F29                     	;# 
  1829  0F2A                     	;# 
  1830  0F2B                     	;# 
  1831  0F2C                     	;# 
  1832  0F2D                     	;# 
  1833  0F2E                     	;# 
  1834  0F2F                     	;# 
  1835  0F30                     	;# 
  1836  0F31                     	;# 
  1837  0F32                     	;# 
  1838  0F33                     	;# 
  1839  0F34                     	;# 
  1840  0F35                     	;# 
  1841  0F36                     	;# 
  1842  0F37                     	;# 
  1843  0FE4                     	;# 
  1844  0FE5                     	;# 
  1845  0FE6                     	;# 
  1846  0FE7                     	;# 
  1847  0FE8                     	;# 
  1848  0FE9                     	;# 
  1849  0FEA                     	;# 
  1850  0FEB                     	;# 
  1851  0FED                     	;# 
  1852  0FEE                     	;# 
  1853  0FEF                     	;# 
  1854  0000                     	;# 
  1855  0001                     	;# 
  1856  0002                     	;# 
  1857  0003                     	;# 
  1858  0004                     	;# 
  1859  0005                     	;# 
  1860  0006                     	;# 
  1861  0007                     	;# 
  1862  0008                     	;# 
  1863  0009                     	;# 
  1864  000A                     	;# 
  1865  000B                     	;# 
  1866  000C                     	;# 
  1867  000D                     	;# 
  1868  000E                     	;# 
  1869  0010                     	;# 
  1870  0011                     	;# 
  1871  0012                     	;# 
  1872  0013                     	;# 
  1873  0014                     	;# 
  1874  0015                     	;# 
  1875  0016                     	;# 
  1876  0016                     	;# 
  1877  0017                     	;# 
  1878  0018                     	;# 
  1879  0019                     	;# 
  1880  001A                     	;# 
  1881  001A                     	;# 
  1882  001B                     	;# 
  1883  001B                     	;# 
  1884  001C                     	;# 
  1885  001D                     	;# 
  1886  001E                     	;# 
  1887  001F                     	;# 
  1888  008C                     	;# 
  1889  008D                     	;# 
  1890  008E                     	;# 
  1891  0090                     	;# 
  1892  0091                     	;# 
  1893  0092                     	;# 
  1894  0093                     	;# 
  1895  0094                     	;# 
  1896  0095                     	;# 
  1897  0096                     	;# 
  1898  0098                     	;# 
  1899  0099                     	;# 
  1900  009A                     	;# 
  1901  009B                     	;# 
  1902  009B                     	;# 
  1903  009C                     	;# 
  1904  009D                     	;# 
  1905  009E                     	;# 
  1906  009F                     	;# 
  1907  010C                     	;# 
  1908  010D                     	;# 
  1909  010E                     	;# 
  1910  0111                     	;# 
  1911  0112                     	;# 
  1912  0113                     	;# 
  1913  0114                     	;# 
  1914  0115                     	;# 
  1915  0116                     	;# 
  1916  0117                     	;# 
  1917  0118                     	;# 
  1918  0119                     	;# 
  1919  011C                     	;# 
  1920  018C                     	;# 
  1921  018D                     	;# 
  1922  018E                     	;# 
  1923  0191                     	;# 
  1924  0191                     	;# 
  1925  0192                     	;# 
  1926  0193                     	;# 
  1927  0193                     	;# 
  1928  0194                     	;# 
  1929  0195                     	;# 
  1930  0196                     	;# 
  1931  0197                     	;# 
  1932  0199                     	;# 
  1933  0199                     	;# 
  1934  0199                     	;# 
  1935  019A                     	;# 
  1936  019A                     	;# 
  1937  019A                     	;# 
  1938  019B                     	;# 
  1939  019B                     	;# 
  1940  019B                     	;# 
  1941  019B                     	;# 
  1942  019B                     	;# 
  1943  019C                     	;# 
  1944  019C                     	;# 
  1945  019C                     	;# 
  1946  019D                     	;# 
  1947  019D                     	;# 
  1948  019D                     	;# 
  1949  019E                     	;# 
  1950  019E                     	;# 
  1951  019E                     	;# 
  1952  019F                     	;# 
  1953  019F                     	;# 
  1954  019F                     	;# 
  1955  019F                     	;# 
  1956  019F                     	;# 
  1957  020C                     	;# 
  1958  020D                     	;# 
  1959  020E                     	;# 
  1960  0211                     	;# 
  1961  0211                     	;# 
  1962  0212                     	;# 
  1963  0212                     	;# 
  1964  0213                     	;# 
  1965  0213                     	;# 
  1966  0214                     	;# 
  1967  0214                     	;# 
  1968  0215                     	;# 
  1969  0215                     	;# 
  1970  0215                     	;# 
  1971  0215                     	;# 
  1972  0216                     	;# 
  1973  0216                     	;# 
  1974  0217                     	;# 
  1975  0217                     	;# 
  1976  028C                     	;# 
  1977  028D                     	;# 
  1978  028E                     	;# 
  1979  0291                     	;# 
  1980  0291                     	;# 
  1981  0292                     	;# 
  1982  0293                     	;# 
  1983  0294                     	;# 
  1984  0298                     	;# 
  1985  0298                     	;# 
  1986  0299                     	;# 
  1987  029A                     	;# 
  1988  029B                     	;# 
  1989  029E                     	;# 
  1990  030C                     	;# 
  1991  030D                     	;# 
  1992  030E                     	;# 
  1993  038C                     	;# 
  1994  038D                     	;# 
  1995  038E                     	;# 
  1996  0391                     	;# 
  1997  0392                     	;# 
  1998  0393                     	;# 
  1999  0394                     	;# 
  2000  0395                     	;# 
  2001  0396                     	;# 
  2002  0397                     	;# 
  2003  0398                     	;# 
  2004  0399                     	;# 
  2005  040E                     	;# 
  2006  0413                     	;# 
  2007  0413                     	;# 
  2008  0414                     	;# 
  2009  0414                     	;# 
  2010  0415                     	;# 
  2011  0416                     	;# 
  2012  0417                     	;# 
  2013  0418                     	;# 
  2014  041A                     	;# 
  2015  041A                     	;# 
  2016  041B                     	;# 
  2017  041B                     	;# 
  2018  041C                     	;# 
  2019  041D                     	;# 
  2020  041E                     	;# 
  2021  041F                     	;# 
  2022  0493                     	;# 
  2023  0494                     	;# 
  2024  0495                     	;# 
  2025  0496                     	;# 
  2026  049A                     	;# 
  2027  049B                     	;# 
  2028  049C                     	;# 
  2029  049D                     	;# 
  2030  058C                     	;# 
  2031  058C                     	;# 
  2032  058D                     	;# 
  2033  058E                     	;# 
  2034  058E                     	;# 
  2035  058F                     	;# 
  2036  0590                     	;# 
  2037  0590                     	;# 
  2038  0591                     	;# 
  2039  0592                     	;# 
  2040  0592                     	;# 
  2041  0593                     	;# 
  2042  0594                     	;# 
  2043  0594                     	;# 
  2044  0595                     	;# 
  2045  0596                     	;# 
  2046  0596                     	;# 
  2047  0597                     	;# 
  2048  0598                     	;# 
  2049  0599                     	;# 
  2050  059A                     	;# 
  2051  059B                     	;# 
  2052  059B                     	;# 
  2053  059C                     	;# 
  2054  059D                     	;# 
  2055  060C                     	;# 
  2056  060C                     	;# 
  2057  060D                     	;# 
  2058  060E                     	;# 
  2059  060F                     	;# 
  2060  060F                     	;# 
  2061  0610                     	;# 
  2062  0611                     	;# 
  2063  0612                     	;# 
  2064  0613                     	;# 
  2065  0614                     	;# 
  2066  0617                     	;# 
  2067  0617                     	;# 
  2068  0618                     	;# 
  2069  0619                     	;# 
  2070  061A                     	;# 
  2071  061A                     	;# 
  2072  061B                     	;# 
  2073  061C                     	;# 
  2074  0691                     	;# 
  2075  0692                     	;# 
  2076  0693                     	;# 
  2077  0694                     	;# 
  2078  0695                     	;# 
  2079  0696                     	;# 
  2080  0697                     	;# 
  2081  0699                     	;# 
  2082  069A                     	;# 
  2083  0711                     	;# 
  2084  0712                     	;# 
  2085  0713                     	;# 
  2086  0714                     	;# 
  2087  0715                     	;# 
  2088  0718                     	;# 
  2089  0718                     	;# 
  2090  0719                     	;# 
  2091  071A                     	;# 
  2092  071A                     	;# 
  2093  071B                     	;# 
  2094  071C                     	;# 
  2095  071D                     	;# 
  2096  0791                     	;# 
  2097  0791                     	;# 
  2098  0792                     	;# 
  2099  0793                     	;# 
  2100  0793                     	;# 
  2101  0794                     	;# 
  2102  0795                     	;# 
  2103  0795                     	;# 
  2104  0796                     	;# 
  2105  0797                     	;# 
  2106  0797                     	;# 
  2107  0798                     	;# 
  2108  0799                     	;# 
  2109  079A                     	;# 
  2110  080C                     	;# 
  2111  080C                     	;# 
  2112  080D                     	;# 
  2113  080E                     	;# 
  2114  080E                     	;# 
  2115  080F                     	;# 
  2116  0810                     	;# 
  2117  0810                     	;# 
  2118  0811                     	;# 
  2119  0812                     	;# 
  2120  0812                     	;# 
  2121  0813                     	;# 
  2122  0814                     	;# 
  2123  0815                     	;# 
  2124  0816                     	;# 
  2125  0817                     	;# 
  2126  0818                     	;# 
  2127  0819                     	;# 
  2128  081A                     	;# 
  2129  081A                     	;# 
  2130  081B                     	;# 
  2131  081C                     	;# 
  2132  081C                     	;# 
  2133  081D                     	;# 
  2134  088C                     	;# 
  2135  088D                     	;# 
  2136  088E                     	;# 
  2137  088F                     	;# 
  2138  088F                     	;# 
  2139  0890                     	;# 
  2140  0891                     	;# 
  2141  0892                     	;# 
  2142  0893                     	;# 
  2143  0893                     	;# 
  2144  0894                     	;# 
  2145  0895                     	;# 
  2146  0896                     	;# 
  2147  0897                     	;# 
  2148  0897                     	;# 
  2149  0898                     	;# 
  2150  0899                     	;# 
  2151  0D8C                     	;# 
  2152  0D8C                     	;# 
  2153  0D8D                     	;# 
  2154  0D8E                     	;# 
  2155  0D8F                     	;# 
  2156  0D8F                     	;# 
  2157  0D90                     	;# 
  2158  0D91                     	;# 
  2159  0D92                     	;# 
  2160  0D92                     	;# 
  2161  0D93                     	;# 
  2162  0D94                     	;# 
  2163  0D95                     	;# 
  2164  0D95                     	;# 
  2165  0D96                     	;# 
  2166  0D97                     	;# 
  2167  0D98                     	;# 
  2168  0D99                     	;# 
  2169  0D9A                     	;# 
  2170  0D9B                     	;# 
  2171  0D9C                     	;# 
  2172  0D9D                     	;# 
  2173  0D9E                     	;# 
  2174  0D9E                     	;# 
  2175  0D9F                     	;# 
  2176  0DA0                     	;# 
  2177  0DA1                     	;# 
  2178  0DA1                     	;# 
  2179  0DA2                     	;# 
  2180  0DA3                     	;# 
  2181  0DA4                     	;# 
  2182  0DA4                     	;# 
  2183  0DA5                     	;# 
  2184  0DA6                     	;# 
  2185  0DA7                     	;# 
  2186  0DA7                     	;# 
  2187  0DA8                     	;# 
  2188  0DA9                     	;# 
  2189  0DAA                     	;# 
  2190  0DAB                     	;# 
  2191  0DAC                     	;# 
  2192  0DAD                     	;# 
  2193  0DAE                     	;# 
  2194  0DAF                     	;# 
  2195  0E0F                     	;# 
  2196  0E10                     	;# 
  2197  0E11                     	;# 
  2198  0E12                     	;# 
  2199  0E13                     	;# 
  2200  0E14                     	;# 
  2201  0E15                     	;# 
  2202  0E16                     	;# 
  2203  0E17                     	;# 
  2204  0E18                     	;# 
  2205  0E19                     	;# 
  2206  0E1A                     	;# 
  2207  0E1B                     	;# 
  2208  0E1C                     	;# 
  2209  0E1D                     	;# 
  2210  0E1E                     	;# 
  2211  0E1F                     	;# 
  2212  0E20                     	;# 
  2213  0E21                     	;# 
  2214  0E22                     	;# 
  2215  0E23                     	;# 
  2216  0E24                     	;# 
  2217  0E25                     	;# 
  2218  0E26                     	;# 
  2219  0E27                     	;# 
  2220  0E28                     	;# 
  2221  0E29                     	;# 
  2222  0E2A                     	;# 
  2223  0E2B                     	;# 
  2224  0E2C                     	;# 
  2225  0E2D                     	;# 
  2226  0E2E                     	;# 
  2227  0E90                     	;# 
  2228  0E91                     	;# 
  2229  0E92                     	;# 
  2230  0E94                     	;# 
  2231  0E95                     	;# 
  2232  0E9C                     	;# 
  2233  0E9D                     	;# 
  2234  0E9E                     	;# 
  2235  0E9F                     	;# 
  2236  0EA0                     	;# 
  2237  0EA1                     	;# 
  2238  0EA2                     	;# 
  2239  0EA3                     	;# 
  2240  0EA4                     	;# 
  2241  0EA5                     	;# 
  2242  0EA6                     	;# 
  2243  0EA7                     	;# 
  2244  0F0F                     	;# 
  2245  0F10                     	;# 
  2246  0F11                     	;# 
  2247  0F12                     	;# 
  2248  0F13                     	;# 
  2249  0F14                     	;# 
  2250  0F15                     	;# 
  2251  0F16                     	;# 
  2252  0F17                     	;# 
  2253  0F18                     	;# 
  2254  0F19                     	;# 
  2255  0F1A                     	;# 
  2256  0F1B                     	;# 
  2257  0F1C                     	;# 
  2258  0F1D                     	;# 
  2259  0F1E                     	;# 
  2260  0F1F                     	;# 
  2261  0F20                     	;# 
  2262  0F21                     	;# 
  2263  0F22                     	;# 
  2264  0F23                     	;# 
  2265  0F24                     	;# 
  2266  0F25                     	;# 
  2267  0F26                     	;# 
  2268  0F27                     	;# 
  2269  0F28                     	;# 
  2270  0F29                     	;# 
  2271  0F2A                     	;# 
  2272  0F2B                     	;# 
  2273  0F2C                     	;# 
  2274  0F2D                     	;# 
  2275  0F2E                     	;# 
  2276  0F2F                     	;# 
  2277  0F30                     	;# 
  2278  0F31                     	;# 
  2279  0F32                     	;# 
  2280  0F33                     	;# 
  2281  0F34                     	;# 
  2282  0F35                     	;# 
  2283  0F36                     	;# 
  2284  0F37                     	;# 
  2285  0FE4                     	;# 
  2286  0FE5                     	;# 
  2287  0FE6                     	;# 
  2288  0FE7                     	;# 
  2289  0FE8                     	;# 
  2290  0FE9                     	;# 
  2291  0FEA                     	;# 
  2292  0FEB                     	;# 
  2293  0FED                     	;# 
  2294  0FEE                     	;# 
  2295  0FEF                     	;# 
  2296  0000                     	;# 
  2297  0001                     	;# 
  2298  0002                     	;# 
  2299  0003                     	;# 
  2300  0004                     	;# 
  2301  0005                     	;# 
  2302  0006                     	;# 
  2303  0007                     	;# 
  2304  0008                     	;# 
  2305  0009                     	;# 
  2306  000A                     	;# 
  2307  000B                     	;# 
  2308  000C                     	;# 
  2309  000D                     	;# 
  2310  000E                     	;# 
  2311  0010                     	;# 
  2312  0011                     	;# 
  2313  0012                     	;# 
  2314  0013                     	;# 
  2315  0014                     	;# 
  2316  0015                     	;# 
  2317  0016                     	;# 
  2318  0016                     	;# 
  2319  0017                     	;# 
  2320  0018                     	;# 
  2321  0019                     	;# 
  2322  001A                     	;# 
  2323  001A                     	;# 
  2324  001B                     	;# 
  2325  001B                     	;# 
  2326  001C                     	;# 
  2327  001D                     	;# 
  2328  001E                     	;# 
  2329  001F                     	;# 
  2330  008C                     	;# 
  2331  008D                     	;# 
  2332  008E                     	;# 
  2333  0090                     	;# 
  2334  0091                     	;# 
  2335  0092                     	;# 
  2336  0093                     	;# 
  2337  0094                     	;# 
  2338  0095                     	;# 
  2339  0096                     	;# 
  2340  0098                     	;# 
  2341  0099                     	;# 
  2342  009A                     	;# 
  2343  009B                     	;# 
  2344  009B                     	;# 
  2345  009C                     	;# 
  2346  009D                     	;# 
  2347  009E                     	;# 
  2348  009F                     	;# 
  2349  010C                     	;# 
  2350  010D                     	;# 
  2351  010E                     	;# 
  2352  0111                     	;# 
  2353  0112                     	;# 
  2354  0113                     	;# 
  2355  0114                     	;# 
  2356  0115                     	;# 
  2357  0116                     	;# 
  2358  0117                     	;# 
  2359  0118                     	;# 
  2360  0119                     	;# 
  2361  011C                     	;# 
  2362  018C                     	;# 
  2363  018D                     	;# 
  2364  018E                     	;# 
  2365  0191                     	;# 
  2366  0191                     	;# 
  2367  0192                     	;# 
  2368  0193                     	;# 
  2369  0193                     	;# 
  2370  0194                     	;# 
  2371  0195                     	;# 
  2372  0196                     	;# 
  2373  0197                     	;# 
  2374  0199                     	;# 
  2375  0199                     	;# 
  2376  0199                     	;# 
  2377  019A                     	;# 
  2378  019A                     	;# 
  2379  019A                     	;# 
  2380  019B                     	;# 
  2381  019B                     	;# 
  2382  019B                     	;# 
  2383  019B                     	;# 
  2384  019B                     	;# 
  2385  019C                     	;# 
  2386  019C                     	;# 
  2387  019C                     	;# 
  2388  019D                     	;# 
  2389  019D                     	;# 
  2390  019D                     	;# 
  2391  019E                     	;# 
  2392  019E                     	;# 
  2393  019E                     	;# 
  2394  019F                     	;# 
  2395  019F                     	;# 
  2396  019F                     	;# 
  2397  019F                     	;# 
  2398  019F                     	;# 
  2399  020C                     	;# 
  2400  020D                     	;# 
  2401  020E                     	;# 
  2402  0211                     	;# 
  2403  0211                     	;# 
  2404  0212                     	;# 
  2405  0212                     	;# 
  2406  0213                     	;# 
  2407  0213                     	;# 
  2408  0214                     	;# 
  2409  0214                     	;# 
  2410  0215                     	;# 
  2411  0215                     	;# 
  2412  0215                     	;# 
  2413  0215                     	;# 
  2414  0216                     	;# 
  2415  0216                     	;# 
  2416  0217                     	;# 
  2417  0217                     	;# 
  2418  028C                     	;# 
  2419  028D                     	;# 
  2420  028E                     	;# 
  2421  0291                     	;# 
  2422  0291                     	;# 
  2423  0292                     	;# 
  2424  0293                     	;# 
  2425  0294                     	;# 
  2426  0298                     	;# 
  2427  0298                     	;# 
  2428  0299                     	;# 
  2429  029A                     	;# 
  2430  029B                     	;# 
  2431  029E                     	;# 
  2432  030C                     	;# 
  2433  030D                     	;# 
  2434  030E                     	;# 
  2435  038C                     	;# 
  2436  038D                     	;# 
  2437  038E                     	;# 
  2438  0391                     	;# 
  2439  0392                     	;# 
  2440  0393                     	;# 
  2441  0394                     	;# 
  2442  0395                     	;# 
  2443  0396                     	;# 
  2444  0397                     	;# 
  2445  0398                     	;# 
  2446  0399                     	;# 
  2447  040E                     	;# 
  2448  0413                     	;# 
  2449  0413                     	;# 
  2450  0414                     	;# 
  2451  0414                     	;# 
  2452  0415                     	;# 
  2453  0416                     	;# 
  2454  0417                     	;# 
  2455  0418                     	;# 
  2456  041A                     	;# 
  2457  041A                     	;# 
  2458  041B                     	;# 
  2459  041B                     	;# 
  2460  041C                     	;# 
  2461  041D                     	;# 
  2462  041E                     	;# 
  2463  041F                     	;# 
  2464  0493                     	;# 
  2465  0494                     	;# 
  2466  0495                     	;# 
  2467  0496                     	;# 
  2468  049A                     	;# 
  2469  049B                     	;# 
  2470  049C                     	;# 
  2471  049D                     	;# 
  2472  058C                     	;# 
  2473  058C                     	;# 
  2474  058D                     	;# 
  2475  058E                     	;# 
  2476  058E                     	;# 
  2477  058F                     	;# 
  2478  0590                     	;# 
  2479  0590                     	;# 
  2480  0591                     	;# 
  2481  0592                     	;# 
  2482  0592                     	;# 
  2483  0593                     	;# 
  2484  0594                     	;# 
  2485  0594                     	;# 
  2486  0595                     	;# 
  2487  0596                     	;# 
  2488  0596                     	;# 
  2489  0597                     	;# 
  2490  0598                     	;# 
  2491  0599                     	;# 
  2492  059A                     	;# 
  2493  059B                     	;# 
  2494  059B                     	;# 
  2495  059C                     	;# 
  2496  059D                     	;# 
  2497  060C                     	;# 
  2498  060C                     	;# 
  2499  060D                     	;# 
  2500  060E                     	;# 
  2501  060F                     	;# 
  2502  060F                     	;# 
  2503  0610                     	;# 
  2504  0611                     	;# 
  2505  0612                     	;# 
  2506  0613                     	;# 
  2507  0614                     	;# 
  2508  0617                     	;# 
  2509  0617                     	;# 
  2510  0618                     	;# 
  2511  0619                     	;# 
  2512  061A                     	;# 
  2513  061A                     	;# 
  2514  061B                     	;# 
  2515  061C                     	;# 
  2516  0691                     	;# 
  2517  0692                     	;# 
  2518  0693                     	;# 
  2519  0694                     	;# 
  2520  0695                     	;# 
  2521  0696                     	;# 
  2522  0697                     	;# 
  2523  0699                     	;# 
  2524  069A                     	;# 
  2525  0711                     	;# 
  2526  0712                     	;# 
  2527  0713                     	;# 
  2528  0714                     	;# 
  2529  0715                     	;# 
  2530  0718                     	;# 
  2531  0718                     	;# 
  2532  0719                     	;# 
  2533  071A                     	;# 
  2534  071A                     	;# 
  2535  071B                     	;# 
  2536  071C                     	;# 
  2537  071D                     	;# 
  2538  0791                     	;# 
  2539  0791                     	;# 
  2540  0792                     	;# 
  2541  0793                     	;# 
  2542  0793                     	;# 
  2543  0794                     	;# 
  2544  0795                     	;# 
  2545  0795                     	;# 
  2546  0796                     	;# 
  2547  0797                     	;# 
  2548  0797                     	;# 
  2549  0798                     	;# 
  2550  0799                     	;# 
  2551  079A                     	;# 
  2552  080C                     	;# 
  2553  080C                     	;# 
  2554  080D                     	;# 
  2555  080E                     	;# 
  2556  080E                     	;# 
  2557  080F                     	;# 
  2558  0810                     	;# 
  2559  0810                     	;# 
  2560  0811                     	;# 
  2561  0812                     	;# 
  2562  0812                     	;# 
  2563  0813                     	;# 
  2564  0814                     	;# 
  2565  0815                     	;# 
  2566  0816                     	;# 
  2567  0817                     	;# 
  2568  0818                     	;# 
  2569  0819                     	;# 
  2570  081A                     	;# 
  2571  081A                     	;# 
  2572  081B                     	;# 
  2573  081C                     	;# 
  2574  081C                     	;# 
  2575  081D                     	;# 
  2576  088C                     	;# 
  2577  088D                     	;# 
  2578  088E                     	;# 
  2579  088F                     	;# 
  2580  088F                     	;# 
  2581  0890                     	;# 
  2582  0891                     	;# 
  2583  0892                     	;# 
  2584  0893                     	;# 
  2585  0893                     	;# 
  2586  0894                     	;# 
  2587  0895                     	;# 
  2588  0896                     	;# 
  2589  0897                     	;# 
  2590  0897                     	;# 
  2591  0898                     	;# 
  2592  0899                     	;# 
  2593  0D8C                     	;# 
  2594  0D8C                     	;# 
  2595  0D8D                     	;# 
  2596  0D8E                     	;# 
  2597  0D8F                     	;# 
  2598  0D8F                     	;# 
  2599  0D90                     	;# 
  2600  0D91                     	;# 
  2601  0D92                     	;# 
  2602  0D92                     	;# 
  2603  0D93                     	;# 
  2604  0D94                     	;# 
  2605  0D95                     	;# 
  2606  0D95                     	;# 
  2607  0D96                     	;# 
  2608  0D97                     	;# 
  2609  0D98                     	;# 
  2610  0D99                     	;# 
  2611  0D9A                     	;# 
  2612  0D9B                     	;# 
  2613  0D9C                     	;# 
  2614  0D9D                     	;# 
  2615  0D9E                     	;# 
  2616  0D9E                     	;# 
  2617  0D9F                     	;# 
  2618  0DA0                     	;# 
  2619  0DA1                     	;# 
  2620  0DA1                     	;# 
  2621  0DA2                     	;# 
  2622  0DA3                     	;# 
  2623  0DA4                     	;# 
  2624  0DA4                     	;# 
  2625  0DA5                     	;# 
  2626  0DA6                     	;# 
  2627  0DA7                     	;# 
  2628  0DA7                     	;# 
  2629  0DA8                     	;# 
  2630  0DA9                     	;# 
  2631  0DAA                     	;# 
  2632  0DAB                     	;# 
  2633  0DAC                     	;# 
  2634  0DAD                     	;# 
  2635  0DAE                     	;# 
  2636  0DAF                     	;# 
  2637  0E0F                     	;# 
  2638  0E10                     	;# 
  2639  0E11                     	;# 
  2640  0E12                     	;# 
  2641  0E13                     	;# 
  2642  0E14                     	;# 
  2643  0E15                     	;# 
  2644  0E16                     	;# 
  2645  0E17                     	;# 
  2646  0E18                     	;# 
  2647  0E19                     	;# 
  2648  0E1A                     	;# 
  2649  0E1B                     	;# 
  2650  0E1C                     	;# 
  2651  0E1D                     	;# 
  2652  0E1E                     	;# 
  2653  0E1F                     	;# 
  2654  0E20                     	;# 
  2655  0E21                     	;# 
  2656  0E22                     	;# 
  2657  0E23                     	;# 
  2658  0E24                     	;# 
  2659  0E25                     	;# 
  2660  0E26                     	;# 
  2661  0E27                     	;# 
  2662  0E28                     	;# 
  2663  0E29                     	;# 
  2664  0E2A                     	;# 
  2665  0E2B                     	;# 
  2666  0E2C                     	;# 
  2667  0E2D                     	;# 
  2668  0E2E                     	;# 
  2669  0E90                     	;# 
  2670  0E91                     	;# 
  2671  0E92                     	;# 
  2672  0E94                     	;# 
  2673  0E95                     	;# 
  2674  0E9C                     	;# 
  2675  0E9D                     	;# 
  2676  0E9E                     	;# 
  2677  0E9F                     	;# 
  2678  0EA0                     	;# 
  2679  0EA1                     	;# 
  2680  0EA2                     	;# 
  2681  0EA3                     	;# 
  2682  0EA4                     	;# 
  2683  0EA5                     	;# 
  2684  0EA6                     	;# 
  2685  0EA7                     	;# 
  2686  0F0F                     	;# 
  2687  0F10                     	;# 
  2688  0F11                     	;# 
  2689  0F12                     	;# 
  2690  0F13                     	;# 
  2691  0F14                     	;# 
  2692  0F15                     	;# 
  2693  0F16                     	;# 
  2694  0F17                     	;# 
  2695  0F18                     	;# 
  2696  0F19                     	;# 
  2697  0F1A                     	;# 
  2698  0F1B                     	;# 
  2699  0F1C                     	;# 
  2700  0F1D                     	;# 
  2701  0F1E                     	;# 
  2702  0F1F                     	;# 
  2703  0F20                     	;# 
  2704  0F21                     	;# 
  2705  0F22                     	;# 
  2706  0F23                     	;# 
  2707  0F24                     	;# 
  2708  0F25                     	;# 
  2709  0F26                     	;# 
  2710  0F27                     	;# 
  2711  0F28                     	;# 
  2712  0F29                     	;# 
  2713  0F2A                     	;# 
  2714  0F2B                     	;# 
  2715  0F2C                     	;# 
  2716  0F2D                     	;# 
  2717  0F2E                     	;# 
  2718  0F2F                     	;# 
  2719  0F30                     	;# 
  2720  0F31                     	;# 
  2721  0F32                     	;# 
  2722  0F33                     	;# 
  2723  0F34                     	;# 
  2724  0F35                     	;# 
  2725  0F36                     	;# 
  2726  0F37                     	;# 
  2727  0FE4                     	;# 
  2728  0FE5                     	;# 
  2729  0FE6                     	;# 
  2730  0FE7                     	;# 
  2731  0FE8                     	;# 
  2732  0FE9                     	;# 
  2733  0FEA                     	;# 
  2734  0FEB                     	;# 
  2735  0FED                     	;# 
  2736  0FEE                     	;# 
  2737  0FEF                     	;# 
  2738  0000                     	;# 
  2739  0001                     	;# 
  2740  0002                     	;# 
  2741  0003                     	;# 
  2742  0004                     	;# 
  2743  0005                     	;# 
  2744  0006                     	;# 
  2745  0007                     	;# 
  2746  0008                     	;# 
  2747  0009                     	;# 
  2748  000A                     	;# 
  2749  000B                     	;# 
  2750  000C                     	;# 
  2751  000D                     	;# 
  2752  000E                     	;# 
  2753  0010                     	;# 
  2754  0011                     	;# 
  2755  0012                     	;# 
  2756  0013                     	;# 
  2757  0014                     	;# 
  2758  0015                     	;# 
  2759  0016                     	;# 
  2760  0016                     	;# 
  2761  0017                     	;# 
  2762  0018                     	;# 
  2763  0019                     	;# 
  2764  001A                     	;# 
  2765  001A                     	;# 
  2766  001B                     	;# 
  2767  001B                     	;# 
  2768  001C                     	;# 
  2769  001D                     	;# 
  2770  001E                     	;# 
  2771  001F                     	;# 
  2772  008C                     	;# 
  2773  008D                     	;# 
  2774  008E                     	;# 
  2775  0090                     	;# 
  2776  0091                     	;# 
  2777  0092                     	;# 
  2778  0093                     	;# 
  2779  0094                     	;# 
  2780  0095                     	;# 
  2781  0096                     	;# 
  2782  0098                     	;# 
  2783  0099                     	;# 
  2784  009A                     	;# 
  2785  009B                     	;# 
  2786  009B                     	;# 
  2787  009C                     	;# 
  2788  009D                     	;# 
  2789  009E                     	;# 
  2790  009F                     	;# 
  2791  010C                     	;# 
  2792  010D                     	;# 
  2793  010E                     	;# 
  2794  0111                     	;# 
  2795  0112                     	;# 
  2796  0113                     	;# 
  2797  0114                     	;# 
  2798  0115                     	;# 
  2799  0116                     	;# 
  2800  0117                     	;# 
  2801  0118                     	;# 
  2802  0119                     	;# 
  2803  011C                     	;# 
  2804  018C                     	;# 
  2805  018D                     	;# 
  2806  018E                     	;# 
  2807  0191                     	;# 
  2808  0191                     	;# 
  2809  0192                     	;# 
  2810  0193                     	;# 
  2811  0193                     	;# 
  2812  0194                     	;# 
  2813  0195                     	;# 
  2814  0196                     	;# 
  2815  0197                     	;# 
  2816  0199                     	;# 
  2817  0199                     	;# 
  2818  0199                     	;# 
  2819  019A                     	;# 
  2820  019A                     	;# 
  2821  019A                     	;# 
  2822  019B                     	;# 
  2823  019B                     	;# 
  2824  019B                     	;# 
  2825  019B                     	;# 
  2826  019B                     	;# 
  2827  019C                     	;# 
  2828  019C                     	;# 
  2829  019C                     	;# 
  2830  019D                     	;# 
  2831  019D                     	;# 
  2832  019D                     	;# 
  2833  019E                     	;# 
  2834  019E                     	;# 
  2835  019E                     	;# 
  2836  019F                     	;# 
  2837  019F                     	;# 
  2838  019F                     	;# 
  2839  019F                     	;# 
  2840  019F                     	;# 
  2841  020C                     	;# 
  2842  020D                     	;# 
  2843  020E                     	;# 
  2844  0211                     	;# 
  2845  0211                     	;# 
  2846  0212                     	;# 
  2847  0212                     	;# 
  2848  0213                     	;# 
  2849  0213                     	;# 
  2850  0214                     	;# 
  2851  0214                     	;# 
  2852  0215                     	;# 
  2853  0215                     	;# 
  2854  0215                     	;# 
  2855  0215                     	;# 
  2856  0216                     	;# 
  2857  0216                     	;# 
  2858  0217                     	;# 
  2859  0217                     	;# 
  2860  028C                     	;# 
  2861  028D                     	;# 
  2862  028E                     	;# 
  2863  0291                     	;# 
  2864  0291                     	;# 
  2865  0292                     	;# 
  2866  0293                     	;# 
  2867  0294                     	;# 
  2868  0298                     	;# 
  2869  0298                     	;# 
  2870  0299                     	;# 
  2871  029A                     	;# 
  2872  029B                     	;# 
  2873  029E                     	;# 
  2874  030C                     	;# 
  2875  030D                     	;# 
  2876  030E                     	;# 
  2877  038C                     	;# 
  2878  038D                     	;# 
  2879  038E                     	;# 
  2880  0391                     	;# 
  2881  0392                     	;# 
  2882  0393                     	;# 
  2883  0394                     	;# 
  2884  0395                     	;# 
  2885  0396                     	;# 
  2886  0397                     	;# 
  2887  0398                     	;# 
  2888  0399                     	;# 
  2889  040E                     	;# 
  2890  0413                     	;# 
  2891  0413                     	;# 
  2892  0414                     	;# 
  2893  0414                     	;# 
  2894  0415                     	;# 
  2895  0416                     	;# 
  2896  0417                     	;# 
  2897  0418                     	;# 
  2898  041A                     	;# 
  2899  041A                     	;# 
  2900  041B                     	;# 
  2901  041B                     	;# 
  2902  041C                     	;# 
  2903  041D                     	;# 
  2904  041E                     	;# 
  2905  041F                     	;# 
  2906  0493                     	;# 
  2907  0494                     	;# 
  2908  0495                     	;# 
  2909  0496                     	;# 
  2910  049A                     	;# 
  2911  049B                     	;# 
  2912  049C                     	;# 
  2913  049D                     	;# 
  2914  058C                     	;# 
  2915  058C                     	;# 
  2916  058D                     	;# 
  2917  058E                     	;# 
  2918  058E                     	;# 
  2919  058F                     	;# 
  2920  0590                     	;# 
  2921  0590                     	;# 
  2922  0591                     	;# 
  2923  0592                     	;# 
  2924  0592                     	;# 
  2925  0593                     	;# 
  2926  0594                     	;# 
  2927  0594                     	;# 
  2928  0595                     	;# 
  2929  0596                     	;# 
  2930  0596                     	;# 
  2931  0597                     	;# 
  2932  0598                     	;# 
  2933  0599                     	;# 
  2934  059A                     	;# 
  2935  059B                     	;# 
  2936  059B                     	;# 
  2937  059C                     	;# 
  2938  059D                     	;# 
  2939  060C                     	;# 
  2940  060C                     	;# 
  2941  060D                     	;# 
  2942  060E                     	;# 
  2943  060F                     	;# 
  2944  060F                     	;# 
  2945  0610                     	;# 
  2946  0611                     	;# 
  2947  0612                     	;# 
  2948  0613                     	;# 
  2949  0614                     	;# 
  2950  0617                     	;# 
  2951  0617                     	;# 
  2952  0618                     	;# 
  2953  0619                     	;# 
  2954  061A                     	;# 
  2955  061A                     	;# 
  2956  061B                     	;# 
  2957  061C                     	;# 
  2958  0691                     	;# 
  2959  0692                     	;# 
  2960  0693                     	;# 
  2961  0694                     	;# 
  2962  0695                     	;# 
  2963  0696                     	;# 
  2964  0697                     	;# 
  2965  0699                     	;# 
  2966  069A                     	;# 
  2967  0711                     	;# 
  2968  0712                     	;# 
  2969  0713                     	;# 
  2970  0714                     	;# 
  2971  0715                     	;# 
  2972  0718                     	;# 
  2973  0718                     	;# 
  2974  0719                     	;# 
  2975  071A                     	;# 
  2976  071A                     	;# 
  2977  071B                     	;# 
  2978  071C                     	;# 
  2979  071D                     	;# 
  2980  0791                     	;# 
  2981  0791                     	;# 
  2982  0792                     	;# 
  2983  0793                     	;# 
  2984  0793                     	;# 
  2985  0794                     	;# 
  2986  0795                     	;# 
  2987  0795                     	;# 
  2988  0796                     	;# 
  2989  0797                     	;# 
  2990  0797                     	;# 
  2991  0798                     	;# 
  2992  0799                     	;# 
  2993  079A                     	;# 
  2994  080C                     	;# 
  2995  080C                     	;# 
  2996  080D                     	;# 
  2997  080E                     	;# 
  2998  080E                     	;# 
  2999  080F                     	;# 
  3000  0810                     	;# 
  3001  0810                     	;# 
  3002  0811                     	;# 
  3003  0812                     	;# 
  3004  0812                     	;# 
  3005  0813                     	;# 
  3006  0814                     	;# 
  3007  0815                     	;# 
  3008  0816                     	;# 
  3009  0817                     	;# 
  3010  0818                     	;# 
  3011  0819                     	;# 
  3012  081A                     	;# 
  3013  081A                     	;# 
  3014  081B                     	;# 
  3015  081C                     	;# 
  3016  081C                     	;# 
  3017  081D                     	;# 
  3018  088C                     	;# 
  3019  088D                     	;# 
  3020  088E                     	;# 
  3021  088F                     	;# 
  3022  088F                     	;# 
  3023  0890                     	;# 
  3024  0891                     	;# 
  3025  0892                     	;# 
  3026  0893                     	;# 
  3027  0893                     	;# 
  3028  0894                     	;# 
  3029  0895                     	;# 
  3030  0896                     	;# 
  3031  0897                     	;# 
  3032  0897                     	;# 
  3033  0898                     	;# 
  3034  0899                     	;# 
  3035  0D8C                     	;# 
  3036  0D8C                     	;# 
  3037  0D8D                     	;# 
  3038  0D8E                     	;# 
  3039  0D8F                     	;# 
  3040  0D8F                     	;# 
  3041  0D90                     	;# 
  3042  0D91                     	;# 
  3043  0D92                     	;# 
  3044  0D92                     	;# 
  3045  0D93                     	;# 
  3046  0D94                     	;# 
  3047  0D95                     	;# 
  3048  0D95                     	;# 
  3049  0D96                     	;# 
  3050  0D97                     	;# 
  3051  0D98                     	;# 
  3052  0D99                     	;# 
  3053  0D9A                     	;# 
  3054  0D9B                     	;# 
  3055  0D9C                     	;# 
  3056  0D9D                     	;# 
  3057  0D9E                     	;# 
  3058  0D9E                     	;# 
  3059  0D9F                     	;# 
  3060  0DA0                     	;# 
  3061  0DA1                     	;# 
  3062  0DA1                     	;# 
  3063  0DA2                     	;# 
  3064  0DA3                     	;# 
  3065  0DA4                     	;# 
  3066  0DA4                     	;# 
  3067  0DA5                     	;# 
  3068  0DA6                     	;# 
  3069  0DA7                     	;# 
  3070  0DA7                     	;# 
  3071  0DA8                     	;# 
  3072  0DA9                     	;# 
  3073  0DAA                     	;# 
  3074  0DAB                     	;# 
  3075  0DAC                     	;# 
  3076  0DAD                     	;# 
  3077  0DAE                     	;# 
  3078  0DAF                     	;# 
  3079  0E0F                     	;# 
  3080  0E10                     	;# 
  3081  0E11                     	;# 
  3082  0E12                     	;# 
  3083  0E13                     	;# 
  3084  0E14                     	;# 
  3085  0E15                     	;# 
  3086  0E16                     	;# 
  3087  0E17                     	;# 
  3088  0E18                     	;# 
  3089  0E19                     	;# 
  3090  0E1A                     	;# 
  3091  0E1B                     	;# 
  3092  0E1C                     	;# 
  3093  0E1D                     	;# 
  3094  0E1E                     	;# 
  3095  0E1F                     	;# 
  3096  0E20                     	;# 
  3097  0E21                     	;# 
  3098  0E22                     	;# 
  3099  0E23                     	;# 
  3100  0E24                     	;# 
  3101  0E25                     	;# 
  3102  0E26                     	;# 
  3103  0E27                     	;# 
  3104  0E28                     	;# 
  3105  0E29                     	;# 
  3106  0E2A                     	;# 
  3107  0E2B                     	;# 
  3108  0E2C                     	;# 
  3109  0E2D                     	;# 
  3110  0E2E                     	;# 
  3111  0E90                     	;# 
  3112  0E91                     	;# 
  3113  0E92                     	;# 
  3114  0E94                     	;# 
  3115  0E95                     	;# 
  3116  0E9C                     	;# 
  3117  0E9D                     	;# 
  3118  0E9E                     	;# 
  3119  0E9F                     	;# 
  3120  0EA0                     	;# 
  3121  0EA1                     	;# 
  3122  0EA2                     	;# 
  3123  0EA3                     	;# 
  3124  0EA4                     	;# 
  3125  0EA5                     	;# 
  3126  0EA6                     	;# 
  3127  0EA7                     	;# 
  3128  0F0F                     	;# 
  3129  0F10                     	;# 
  3130  0F11                     	;# 
  3131  0F12                     	;# 
  3132  0F13                     	;# 
  3133  0F14                     	;# 
  3134  0F15                     	;# 
  3135  0F16                     	;# 
  3136  0F17                     	;# 
  3137  0F18                     	;# 
  3138  0F19                     	;# 
  3139  0F1A                     	;# 
  3140  0F1B                     	;# 
  3141  0F1C                     	;# 
  3142  0F1D                     	;# 
  3143  0F1E                     	;# 
  3144  0F1F                     	;# 
  3145  0F20                     	;# 
  3146  0F21                     	;# 
  3147  0F22                     	;# 
  3148  0F23                     	;# 
  3149  0F24                     	;# 
  3150  0F25                     	;# 
  3151  0F26                     	;# 
  3152  0F27                     	;# 
  3153  0F28                     	;# 
  3154  0F29                     	;# 
  3155  0F2A                     	;# 
  3156  0F2B                     	;# 
  3157  0F2C                     	;# 
  3158  0F2D                     	;# 
  3159  0F2E                     	;# 
  3160  0F2F                     	;# 
  3161  0F30                     	;# 
  3162  0F31                     	;# 
  3163  0F32                     	;# 
  3164  0F33                     	;# 
  3165  0F34                     	;# 
  3166  0F35                     	;# 
  3167  0F36                     	;# 
  3168  0F37                     	;# 
  3169  0FE4                     	;# 
  3170  0FE5                     	;# 
  3171  0FE6                     	;# 
  3172  0FE7                     	;# 
  3173  0FE8                     	;# 
  3174  0FE9                     	;# 
  3175  0FEA                     	;# 
  3176  0FEB                     	;# 
  3177  0FED                     	;# 
  3178  0FEE                     	;# 
  3179  0FEF                     	;# 
  3180                           
  3181 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3182  0000                     
  3183 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3184  0000                     
  3185 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3186  0000                     
  3187                           	psect	nvBANK1
  3188  00D9                     __pnvBANK1:	
  3189  00D9                     _EUSART_ErrorHandler:	
  3190  00D9                     	ds	2
  3191  00DB                     _EUSART_OverrunErrorHandler:	
  3192  00DB                     	ds	2
  3193  00DD                     _EUSART_FramingErrorHandler:	
  3194  00DD                     	ds	2
  3195  001B                     _PR2	set	27
  3196  001A                     _TMR2	set	26
  3197  001C                     _T2CONbits	set	28
  3198  001F                     _T2RSTbits	set	31
  3199  001D                     _T2HLTbits	set	29
  3200  001C                     _T2CON	set	28
  3201  001A                     _T2TMR	set	26
  3202  001B                     _T2PR	set	27
  3203  001F                     _T2RST	set	31
  3204  001D                     _T2HLT	set	29
  3205  001E                     _T2CLKCON	set	30
  3206  0010                     _PIR1bits	set	16
  3207  009D                     _ADCON0bits	set	157
  3208  009D                     _ADCON0	set	157
  3209  009C                     _ADRESH	set	156
  3210  009B                     _ADRESL	set	155
  3211  009F                     _ADCON2	set	159
  3212  009E                     _ADCON1	set	158
  3213  0098                     _OSCTUNE	set	152
  3214  0099                     _OSCCON	set	153
  3215  0095                     _OPTION_REGbits	set	149
  3216  008E                     _TRISC	set	142
  3217  008D                     _TRISB	set	141
  3218  008C                     _TRISA	set	140
  3219  010D                     _LATBbits	set	269
  3220  0116                     _BORCON	set	278
  3221  010E                     _LATC	set	270
  3222  010D                     _LATB	set	269
  3223  010C                     _LATA	set	268
  3224  019A                     _TX1REG	set	410
  3225  0199                     _RC1REG	set	409
  3226  019D                     _RC1STAbits	set	413
  3227  019E                     _TX1STAbits	set	414
  3228  019C                     _SPBRGH	set	412
  3229  019B                     _SPBRGL	set	411
  3230  019E                     _TX1STA	set	414
  3231  019D                     _RC1STA	set	413
  3232  019F                     _BAUD1CON	set	415
  3233  018C                     _ANSELA	set	396
  3234  018D                     _ANSELB	set	397
  3235  018E                     _ANSELC	set	398
  3236  020E                     _WPUC	set	526
  3237  020C                     _WPUA	set	524
  3238  020D                     _WPUB	set	525
  3239  029E                     _CCPTMRSbits	set	670
  3240  028E                     _ODCONC	set	654
  3241  028D                     _ODCONB	set	653
  3242  028C                     _ODCONA	set	652
  3243  030E                     _SLRCONC	set	782
  3244  030D                     _SLRCONB	set	781
  3245  030C                     _SLRCONA	set	780
  3246  038E                     _INLVLC	set	910
  3247  038D                     _INLVLB	set	909
  3248  038C                     _INLVLA	set	908
  3249  0617                     _PWM3DCL	set	1559
  3250  0618                     _PWM3DCH	set	1560
  3251  0619                     _PWM3CON	set	1561
  3252  0E24                     _RXPPS	set	3620
  3253  0E9C                     _RB4PPS	set	3740
  3254  0E9F                     _RB7PPS	set	3743
  3255                           
  3256                           	psect	stringtext1
  3257  0800                     __pstringtext1:	
  3258  0800                     STR_2:	
  3259  0800  3425               	retlw	37	;'%'
  3260  0801  3469               	retlw	105	;'i'
  3261  0802  340A               	retlw	10
  3262  0803  3400               	retlw	0
  3263                           
  3264                           	psect	stringtext2
  3265  0000                     __pstringtext2:	
  3266  0803                     
  3267                           ; #config settings
  3268  0000                     
  3269                           	psect	cinit
  3270  07F6                     start_initialization:	
  3271  07F6                     __initialization:	
  3272                           
  3273                           ; Clear objects allocated to BANK1
  3274  07F6  30A0               	movlw	low __pbssBANK1
  3275  07F7  0084               	movwf	4
  3276  07F8  3000               	movlw	high __pbssBANK1
  3277  07F9  0085               	movwf	5
  3278  07FA  3039               	movlw	57
  3279  07FB  3180  204C         	fcall	clear_ram0
  3280  07FD                     end_of_initialization:	
  3281                           ;End of C runtime variable initialization code
  3282                           
  3283  07FD                     __end_of__initialization:	
  3284  07FD  0020               	movlb	0
  3285  07FE  3183  2B04         	ljmp	_main	;jump to C main() function
  3286                           
  3287                           	psect	bssBANK1
  3288  00A0                     __pbssBANK1:	
  3289  00A0                     read_input@F10251:	
  3290  00A0                     	ds	4
  3291  00A4                     _nout:	
  3292  00A4                     	ds	2
  3293  00A6                     _width:	
  3294  00A6                     	ds	2
  3295  00A8                     _prec:	
  3296  00A8                     	ds	2
  3297  00AA                     _flags:	
  3298  00AA                     	ds	2
  3299  00AC                     _adc:	
  3300  00AC                     	ds	2
  3301  00AE                     _num:	
  3302  00AE                     	ds	2
  3303  00B0                     _count:	
  3304  00B0                     	ds	2
  3305  00B2                     _ADC_InterruptHandler:	
  3306  00B2                     	ds	2
  3307  00B4                     _eusartRxLastError:	
  3308  00B4                     	ds	1
  3309  00B5                     _dbuf:	
  3310  00B5                     	ds	32
  3311  00D5                     _s:	
  3312  00D5                     	ds	4
  3313                           
  3314                           	psect	clrtext
  3315  004C                     clear_ram0:	
  3316                           ;	Called with FSR0 containing the base address, and
  3317                           ;	WREG with the size to clear
  3318                           
  3319  004C  0064               	clrwdt	;clear the watchdog before getting into this loop
  3320  004D                     clrloop0:	
  3321  004D  0180               	clrf	0	;clear RAM location pointed to by FSR
  3322  004E  3101               	addfsr 0,1
  3323  004F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3324  0050  284D               	goto	clrloop0	;have we reached the end yet?
  3325  0051  3400               	retlw	0	;all done for this memory range, return
  3326                           
  3327                           	psect	cstackBANK1
  3328  00DF                     __pcstackBANK1:	
  3329  00DF                     main@count:	
  3330                           
  3331                           ; 2 bytes @ 0x0
  3332  00DF                     	ds	2
  3333                           
  3334                           	psect	cstackCOMMON
  3335  0070                     __pcstackCOMMON:	
  3336  0070                     ?_EUSART_SetFramingErrorHandler:	
  3337  0070                     ?_EUSART_SetOverrunErrorHandler:	
  3338                           ; 1 bytes @ 0x0
  3339                           
  3340  0070                     ?_EUSART_SetErrorHandler:	
  3341                           ; 1 bytes @ 0x0
  3342                           
  3343  0070                     ?_OSCILLATOR_Initialize:	
  3344                           ; 1 bytes @ 0x0
  3345                           
  3346  0070                     ??_OSCILLATOR_Initialize:	
  3347                           ; 1 bytes @ 0x0
  3348                           
  3349  0070                     ?_PWM3_Initialize:	
  3350                           ; 1 bytes @ 0x0
  3351                           
  3352  0070                     ??_PWM3_Initialize:	
  3353                           ; 1 bytes @ 0x0
  3354                           
  3355  0070                     ?_TMR2_Initialize:	
  3356                           ; 1 bytes @ 0x0
  3357                           
  3358  0070                     ??_TMR2_Initialize:	
  3359                           ; 1 bytes @ 0x0
  3360                           
  3361  0070                     ?_ADC_Initialize:	
  3362                           ; 1 bytes @ 0x0
  3363                           
  3364  0070                     ??_ADC_Initialize:	
  3365                           ; 1 bytes @ 0x0
  3366                           
  3367  0070                     ?_strcpy:	
  3368                           ; 1 bytes @ 0x0
  3369                           
  3370  0070                     ?_PIN_MANAGER_Initialize:	
  3371                           ; 1 bytes @ 0x0
  3372                           
  3373  0070                     ??_PIN_MANAGER_Initialize:	
  3374                           ; 1 bytes @ 0x0
  3375                           
  3376  0070                     ?_EUSART_Initialize:	
  3377                           ; 1 bytes @ 0x0
  3378                           
  3379  0070                     ?_EUSART_is_rx_ready:	
  3380                           ; 1 bytes @ 0x0
  3381                           
  3382  0070                     ??_EUSART_is_rx_ready:	
  3383                           ; 1 bytes @ 0x0
  3384                           
  3385  0070                     ?_EUSART_Read:	
  3386                           ; 1 bytes @ 0x0
  3387                           
  3388  0070                     ??_EUSART_Read:	
  3389                           ; 1 bytes @ 0x0
  3390                           
  3391  0070                     ?_EUSART_Write:	
  3392                           ; 1 bytes @ 0x0
  3393                           
  3394  0070                     ??_EUSART_Write:	
  3395                           ; 1 bytes @ 0x0
  3396                           
  3397  0070                     ?_putch:	
  3398                           ; 1 bytes @ 0x0
  3399                           
  3400  0070                     ?_SYSTEM_Initialize:	
  3401                           ; 1 bytes @ 0x0
  3402                           
  3403  0070                     ?_PWM3_LoadDutyValue:	
  3404                           ; 1 bytes @ 0x0
  3405                           
  3406  0070                     ?_ADC_SelectChannel:	
  3407                           ; 1 bytes @ 0x0
  3408                           
  3409  0070                     ??_ADC_SelectChannel:	
  3410                           ; 1 bytes @ 0x0
  3411                           
  3412  0070                     ?_ADC_StartConversion:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415  0070                     ??_ADC_StartConversion:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418  0070                     ?_clear:	
  3419                           ; 1 bytes @ 0x0
  3420                           
  3421  0070                     ?_main:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424  0070                     ??___aodiv:	
  3425                           ; 1 bytes @ 0x0
  3426                           
  3427  0070                     ??___aomod:	
  3428                           ; 1 bytes @ 0x0
  3429                           
  3430  0070                     ?_strlen:	
  3431                           ; 1 bytes @ 0x0
  3432                           
  3433  0070                     ?_isspace:	
  3434                           ; 2 bytes @ 0x0
  3435                           
  3436  0070                     ?_isdigit:	
  3437                           ; 2 bytes @ 0x0
  3438                           
  3439  0070                     ?_ADC_GetConversionResult:	
  3440                           ; 2 bytes @ 0x0
  3441                           
  3442  0070                     ?_read_input:	
  3443                           ; 2 bytes @ 0x0
  3444                           
  3445  0070                     ?___wmul:	
  3446                           ; 2 bytes @ 0x0
  3447                           
  3448  0070                     EUSART_Write@txData:	
  3449                           ; 2 bytes @ 0x0
  3450                           
  3451  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3452                           ; 1 bytes @ 0x0
  3453                           
  3454  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3455                           ; 2 bytes @ 0x0
  3456                           
  3457  0070                     EUSART_SetErrorHandler@interruptHandler:	
  3458                           ; 2 bytes @ 0x0
  3459                           
  3460  0070                     PWM3_LoadDutyValue@dutyValue:	
  3461                           ; 2 bytes @ 0x0
  3462                           
  3463  0070                     ___wmul@multiplier:	
  3464                           ; 2 bytes @ 0x0
  3465                           
  3466  0070                     isdigit@c:	
  3467                           ; 2 bytes @ 0x0
  3468                           
  3469  0070                     isspace@c:	
  3470                           ; 2 bytes @ 0x0
  3471                           
  3472  0070                     strcpy@src:	
  3473                           ; 2 bytes @ 0x0
  3474                           
  3475                           
  3476                           ; 2 bytes @ 0x0
  3477  0070                     	ds	1
  3478  0071                     ??_putch:	
  3479  0071                     putch@txData:	
  3480                           ; 1 bytes @ 0x1
  3481                           
  3482  0071                     ADC_SelectChannel@channel:	
  3483                           ; 1 bytes @ 0x1
  3484                           
  3485  0071                     ___aodiv@counter:	
  3486                           ; 1 bytes @ 0x1
  3487                           
  3488  0071                     ___aomod@counter:	
  3489                           ; 1 bytes @ 0x1
  3490                           
  3491                           
  3492                           ; 1 bytes @ 0x1
  3493  0071                     	ds	1
  3494  0072                     ??_EUSART_SetFramingErrorHandler:	
  3495  0072                     ??_EUSART_SetOverrunErrorHandler:	
  3496                           ; 1 bytes @ 0x2
  3497                           
  3498  0072                     ??_EUSART_SetErrorHandler:	
  3499                           ; 1 bytes @ 0x2
  3500                           
  3501  0072                     ??_strcpy:	
  3502                           ; 1 bytes @ 0x2
  3503                           
  3504  0072                     ??_strlen:	
  3505                           ; 1 bytes @ 0x2
  3506                           
  3507  0072                     ??_isspace:	
  3508                           ; 1 bytes @ 0x2
  3509                           
  3510  0072                     ??_isdigit:	
  3511                           ; 1 bytes @ 0x2
  3512                           
  3513  0072                     ??_EUSART_Initialize:	
  3514                           ; 1 bytes @ 0x2
  3515                           
  3516  0072                     ??_SYSTEM_Initialize:	
  3517                           ; 1 bytes @ 0x2
  3518                           
  3519  0072                     ??_PWM3_LoadDutyValue:	
  3520                           ; 1 bytes @ 0x2
  3521                           
  3522  0072                     ??_ADC_GetConversionResult:	
  3523                           ; 1 bytes @ 0x2
  3524                           
  3525  0072                     ?_fputc:	
  3526                           ; 1 bytes @ 0x2
  3527                           
  3528  0072                     ___aodiv@sign:	
  3529                           ; 2 bytes @ 0x2
  3530                           
  3531  0072                     ___aomod@sign:	
  3532                           ; 1 bytes @ 0x2
  3533                           
  3534  0072                     ___wmul@multiplicand:	
  3535                           ; 1 bytes @ 0x2
  3536                           
  3537  0072                     fputc@c:	
  3538                           ; 2 bytes @ 0x2
  3539                           
  3540                           
  3541                           ; 2 bytes @ 0x2
  3542  0072                     	ds	1
  3543  0073                     ?_abs:	
  3544  0073                     strlen@a:	
  3545                           ; 2 bytes @ 0x3
  3546                           
  3547  0073                     abs@a:	
  3548                           ; 1 bytes @ 0x3
  3549                           
  3550  0073                     ___aodiv@quotient:	
  3551                           ; 2 bytes @ 0x3
  3552                           
  3553                           
  3554                           ; 8 bytes @ 0x3
  3555  0073                     	ds	1
  3556  0074                     ??___wmul:	
  3557  0074                     _isspace$1119:	
  3558                           ; 1 bytes @ 0x4
  3559                           
  3560  0074                     fputc@fp:	
  3561                           ; 1 bytes @ 0x4
  3562                           
  3563  0074                     strlen@s:	
  3564                           ; 1 bytes @ 0x4
  3565                           
  3566  0074                     ___wmul@product:	
  3567                           ; 1 bytes @ 0x4
  3568                           
  3569  0074                     strcpy@s:	
  3570                           ; 2 bytes @ 0x4
  3571                           
  3572                           
  3573                           ; 2 bytes @ 0x4
  3574  0074                     	ds	1
  3575  0075                     ??_fputc:	
  3576  0075                     ??_abs:	
  3577                           ; 1 bytes @ 0x5
  3578                           
  3579                           
  3580                           ; 1 bytes @ 0x5
  3581  0075                     	ds	1
  3582  0076                     ?_atoi:	
  3583  0076                     strcpy@d:	
  3584                           ; 2 bytes @ 0x6
  3585                           
  3586                           
  3587                           ; 1 bytes @ 0x6
  3588  0076                     	ds	1
  3589  0077                     strcpy@dest:	
  3590                           
  3591                           ; 1 bytes @ 0x7
  3592  0077                     	ds	1
  3593  0078                     ??_atoi:	
  3594  0078                     ??_clear:	
  3595                           ; 1 bytes @ 0x8
  3596                           
  3597  0078                     clear@str:	
  3598                           ; 1 bytes @ 0x8
  3599                           
  3600                           
  3601                           ; 1 bytes @ 0x8
  3602  0078                     	ds	1
  3603  0079                     ??_read_input:	
  3604                           
  3605                           ; 1 bytes @ 0x9
  3606  0079                     	ds	1
  3607  007A                     ?_fputs:	
  3608  007A                     fputs@fp:	
  3609                           ; 2 bytes @ 0xA
  3610                           
  3611                           
  3612                           ; 1 bytes @ 0xA
  3613  007A                     	ds	1
  3614  007B                     ??_fputs:	
  3615                           
  3616                           ; 1 bytes @ 0xB
  3617  007B                     	ds	3
  3618                           
  3619                           	psect	cstackBANK0
  3620  0020                     __pcstackBANK0:	
  3621  0020                     ?___aodiv:	
  3622  0020                     ?___aomod:	
  3623                           ; 8 bytes @ 0x0
  3624                           
  3625  0020                     fputs@c:	
  3626                           ; 8 bytes @ 0x0
  3627                           
  3628  0020                     atoi@neg:	
  3629                           ; 1 bytes @ 0x0
  3630                           
  3631  0020                     read_input@buffer:	
  3632                           ; 2 bytes @ 0x0
  3633                           
  3634  0020                     ___aodiv@divisor:	
  3635                           ; 4 bytes @ 0x0
  3636                           
  3637  0020                     ___aomod@divisor:	
  3638                           ; 8 bytes @ 0x0
  3639                           
  3640                           
  3641                           ; 8 bytes @ 0x0
  3642  0020                     	ds	1
  3643  0021                     fputs@i:	
  3644                           
  3645                           ; 2 bytes @ 0x1
  3646  0021                     	ds	1
  3647  0022                     _atoi$1101:	
  3648                           
  3649                           ; 2 bytes @ 0x2
  3650  0022                     	ds	1
  3651  0023                     fputs@s:	
  3652                           
  3653                           ; 1 bytes @ 0x3
  3654  0023                     	ds	1
  3655  0024                     ?_pad:	
  3656  0024                     pad@buf:	
  3657                           ; 2 bytes @ 0x4
  3658                           
  3659  0024                     read_input@index:	
  3660                           ; 1 bytes @ 0x4
  3661                           
  3662  0024                     _atoi$1103:	
  3663                           ; 2 bytes @ 0x4
  3664                           
  3665                           
  3666                           ; 2 bytes @ 0x4
  3667  0024                     	ds	1
  3668  0025                     pad@p:	
  3669                           
  3670                           ; 2 bytes @ 0x5
  3671  0025                     	ds	1
  3672  0026                     _atoi$1102:	
  3673  0026                     read_input@i:	
  3674                           ; 1 bytes @ 0x6
  3675                           
  3676                           
  3677                           ; 2 bytes @ 0x6
  3678  0026                     	ds	1
  3679  0027                     ??_pad:	
  3680  0027                     atoi@n:	
  3681                           ; 1 bytes @ 0x7
  3682                           
  3683                           
  3684                           ; 2 bytes @ 0x7
  3685  0027                     	ds	1
  3686  0028                     read_input@temp:	
  3687  0028                     pad@i:	
  3688                           ; 1 bytes @ 0x8
  3689                           
  3690  0028                     ___aodiv@dividend:	
  3691                           ; 2 bytes @ 0x8
  3692                           
  3693  0028                     ___aomod@dividend:	
  3694                           ; 8 bytes @ 0x8
  3695                           
  3696                           
  3697                           ; 8 bytes @ 0x8
  3698  0028                     	ds	1
  3699  0029                     read_input@str:	
  3700  0029                     atoi@s:	
  3701                           ; 1 bytes @ 0x9
  3702                           
  3703                           
  3704                           ; 1 bytes @ 0x9
  3705  0029                     	ds	1
  3706  002A                     pad@w:	
  3707                           
  3708                           ; 2 bytes @ 0xA
  3709  002A                     	ds	2
  3710  002C                     pad@fp:	
  3711                           
  3712                           ; 1 bytes @ 0xC
  3713  002C                     	ds	4
  3714  0030                     ?_dtoa:	
  3715  0030                     dtoa@d:	
  3716                           ; 2 bytes @ 0x10
  3717                           
  3718                           
  3719                           ; 8 bytes @ 0x10
  3720  0030                     	ds	8
  3721  0038                     ??_dtoa:	
  3722                           
  3723                           ; 1 bytes @ 0x18
  3724  0038                     	ds	3
  3725  003B                     _dtoa$788:	
  3726                           
  3727                           ; 2 bytes @ 0x1B
  3728  003B                     	ds	2
  3729  003D                     dtoa@p:	
  3730                           
  3731                           ; 2 bytes @ 0x1D
  3732  003D                     	ds	2
  3733  003F                     dtoa@fp:	
  3734                           
  3735                           ; 1 bytes @ 0x1F
  3736  003F                     	ds	1
  3737  0040                     dtoa@w:	
  3738                           
  3739                           ; 2 bytes @ 0x20
  3740  0040                     	ds	2
  3741  0042                     dtoa@s:	
  3742                           
  3743                           ; 2 bytes @ 0x22
  3744  0042                     	ds	2
  3745  0044                     dtoa@n:	
  3746                           
  3747                           ; 8 bytes @ 0x24
  3748  0044                     	ds	8
  3749  004C                     dtoa@i:	
  3750                           
  3751                           ; 2 bytes @ 0x2C
  3752  004C                     	ds	2
  3753  004E                     ?_vfpfcnvrt:	
  3754  004E                     vfpfcnvrt@fmt:	
  3755                           ; 2 bytes @ 0x2E
  3756                           
  3757                           
  3758                           ; 1 bytes @ 0x2E
  3759  004E                     	ds	1
  3760  004F                     vfpfcnvrt@ap:	
  3761                           
  3762                           ; 1 bytes @ 0x2F
  3763  004F                     	ds	1
  3764  0050                     ??_vfpfcnvrt:	
  3765                           
  3766                           ; 1 bytes @ 0x30
  3767  0050                     	ds	5
  3768  0055                     vfpfcnvrt@ll:	
  3769                           
  3770                           ; 8 bytes @ 0x35
  3771  0055                     	ds	8
  3772  005D                     vfpfcnvrt@fp:	
  3773                           
  3774                           ; 1 bytes @ 0x3D
  3775  005D                     	ds	1
  3776  005E                     ?_vfprintf:	
  3777  005E                     vfprintf@fmt:	
  3778                           ; 2 bytes @ 0x3E
  3779                           
  3780                           
  3781                           ; 2 bytes @ 0x3E
  3782  005E                     	ds	2
  3783  0060                     vfprintf@ap:	
  3784                           
  3785                           ; 1 bytes @ 0x40
  3786  0060                     	ds	1
  3787  0061                     ??_vfprintf:	
  3788                           
  3789                           ; 1 bytes @ 0x41
  3790  0061                     	ds	2
  3791  0063                     vfprintf@fp:	
  3792                           
  3793                           ; 1 bytes @ 0x43
  3794  0063                     	ds	1
  3795  0064                     vfprintf@cfmt:	
  3796                           
  3797                           ; 2 bytes @ 0x44
  3798  0064                     	ds	2
  3799  0066                     ?_printf:	
  3800  0066                     printf@fmt:	
  3801                           ; 2 bytes @ 0x46
  3802                           
  3803                           
  3804                           ; 2 bytes @ 0x46
  3805  0066                     	ds	4
  3806  006A                     ??_printf:	
  3807                           
  3808                           ; 1 bytes @ 0x4A
  3809  006A                     	ds	3
  3810  006D                     printf@ap:	
  3811                           
  3812                           ; 1 bytes @ 0x4D
  3813  006D                     	ds	1
  3814  006E                     ??_main:	
  3815                           
  3816                           ; 1 bytes @ 0x4E
  3817  006E                     	ds	2
  3818                           
  3819                           	psect	maintext
  3820  0304                     __pmaintext:	
  3821 ;;
  3822 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3823 ;;
  3824 ;; *************** function _main *****************
  3825 ;; Defined at:
  3826 ;;		line 45 in file "main.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;		None
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  count           2    0[BANK1 ] int 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : B1F/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3841 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3843 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3844 ;;Total ram usage:        4 bytes
  3845 ;; Hardware stack levels required when called:    9
  3846 ;; This function calls:
  3847 ;;		_ADC_GetConversionResult
  3848 ;;		_ADC_SelectChannel
  3849 ;;		_ADC_StartConversion
  3850 ;;		_PWM3_LoadDutyValue
  3851 ;;		_SYSTEM_Initialize
  3852 ;;		_atoi
  3853 ;;		_printf
  3854 ;;		_read_input
  3855 ;; This function is called by:
  3856 ;;		Startup code after reset
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           
  3861                           ;psect for function _main
  3862  0304                     _main:	
  3863                           
  3864                           ;main.c: 48:     SYSTEM_Initialize();
  3865                           
  3866                           ;incstack = 0
  3867                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3868  0304  3180  20B3  3183   	fcall	_SYSTEM_Initialize
  3869  0307  0022               	movlb	2	; select bank2
  3870  0308  168D               	bsf	13,5	;volatile
  3871  0309  130D               	bcf	13,6	;volatile
  3872  030A                     l2180:	
  3873                           
  3874                           ;main.c: 53:     {;main.c: 55:     read_input(s);
  3875  030A  30D5               	movlw	(low (_s| 0))& (0+255)
  3876  030B  3182  22A2  3183   	fcall	_read_input
  3877                           
  3878                           ;main.c: 57:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  3879  030E  3006               	movlw	6
  3880  030F  0020               	movlb	0	; select bank0
  3881  0310  00EF               	movwf	??_main+1
  3882  0311  3013               	movlw	19
  3883  0312  00EE               	movwf	??_main
  3884  0313  30AD               	movlw	173
  3885  0314                     u1577:	
  3886  0314  0B89               	decfsz	9,f
  3887  0315  2B14               	goto	u1577
  3888  0316  0BEE               	decfsz	??_main,f
  3889  0317  2B14               	goto	u1577
  3890  0318  0BEF               	decfsz	??_main+1,f
  3891  0319  2B14               	goto	u1577
  3892  031A  3200               	nop2
  3893                           
  3894                           ;main.c: 58:     num = atoi(s);
  3895  031B  30D5               	movlw	(low (_s| 0))& (0+255)
  3896  031C  3183  236D  3183   	fcall	_atoi
  3897  031F  0877               	movf	?_atoi+1,w
  3898  0320  0021               	movlb	1	; select bank1
  3899  0321  00AF               	movwf	(_num+1)^(0+128)
  3900  0322  0876               	movf	?_atoi,w
  3901  0323  00AE               	movwf	_num^(0+128)
  3902                           
  3903                           ;main.c: 61:     PWM3_LoadDutyValue(num);
  3904  0324  082F               	movf	(_num+1)^(0+128),w
  3905  0325  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  3906  0326  082E               	movf	_num^(0+128),w
  3907  0327  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  3908  0328  3180  20C5  3183   	fcall	_PWM3_LoadDutyValue
  3909                           
  3910                           ;main.c: 62:     count = 0;
  3911  032B  0021               	movlb	1	; select bank1
  3912  032C  01DF               	clrf	main@count^(0+128)
  3913  032D  01E0               	clrf	(main@count+1)^(0+128)
  3914  032E                     l2202:	
  3915                           ;main.c: 65:     while (count <=20){
  3916                           
  3917                           
  3918                           ;main.c: 65:     while (count <=20){
  3919  032E  0860               	movf	(main@count+1)^(0+128),w
  3920  032F  3A80               	xorlw	128
  3921  0330  0020               	movlb	0	; select bank0
  3922  0331  00EE               	movwf	??_main
  3923  0332  3080               	movlw	128
  3924  0333  026E               	subwf	??_main,w
  3925  0334  1D03               	skipz
  3926  0335  2B39               	goto	u1565
  3927  0336  3015               	movlw	21
  3928  0337  0021               	movlb	1	; select bank1
  3929  0338  025F               	subwf	main@count^(0+128),w
  3930  0339                     u1565:	
  3931  0339  1803               	btfsc	3,0
  3932  033A  2B0A               	goto	l2180
  3933                           
  3934                           ;main.c: 66:             ADC_SelectChannel(TACO);
  3935  033B  3005               	movlw	5
  3936  033C  3180  2095  3183   	fcall	_ADC_SelectChannel
  3937                           
  3938                           ;main.c: 67:             ADC_StartConversion();
  3939  033F  3180  2027  3183   	fcall	_ADC_StartConversion
  3940                           
  3941                           ;main.c: 68:             adc = ADC_GetConversionResult();
  3942  0342  3180  2034  3183   	fcall	_ADC_GetConversionResult
  3943  0345  0871               	movf	?_ADC_GetConversionResult+1,w
  3944  0346  0021               	movlb	1	; select bank1
  3945  0347  00AD               	movwf	(_adc+1)^(0+128)
  3946  0348  0870               	movf	?_ADC_GetConversionResult,w
  3947  0349  00AC               	movwf	_adc^(0+128)
  3948                           
  3949                           ;main.c: 69:             printf("%i\n",adc);
  3950  034A  3000               	movlw	low (STR_2| (0+32768))
  3951  034B  0020               	movlb	0	; select bank0
  3952  034C  00E6               	movwf	printf@fmt
  3953  034D  3088               	movlw	high (STR_2| (0+32768))
  3954  034E  00E7               	movwf	printf@fmt+1
  3955  034F  0021               	movlb	1	; select bank1
  3956  0350  082D               	movf	(_adc+1)^(0+128),w
  3957  0351  0020               	movlb	0	; select bank0
  3958  0352  00E9               	movwf	?_printf+3
  3959  0353  0021               	movlb	1	; select bank1
  3960  0354  082C               	movf	_adc^(0+128),w
  3961  0355  0020               	movlb	0	; select bank0
  3962  0356  00E8               	movwf	?_printf+2
  3963  0357  3180  20A2  3183   	fcall	_printf
  3964                           
  3965                           ;main.c: 70:             _delay((unsigned long)((200)*(4000000/4000.0)));
  3966  035A  3002               	movlw	2
  3967  035B  0020               	movlb	0	; select bank0
  3968  035C  00EF               	movwf	??_main+1
  3969  035D  3004               	movlw	4
  3970  035E  00EE               	movwf	??_main
  3971  035F  30BA               	movlw	186
  3972  0360                     u1587:	
  3973  0360  0B89               	decfsz	9,f
  3974  0361  2B60               	goto	u1587
  3975  0362  0BEE               	decfsz	??_main,f
  3976  0363  2B60               	goto	u1587
  3977  0364  0BEF               	decfsz	??_main+1,f
  3978  0365  2B60               	goto	u1587
  3979  0366  0000               	nop
  3980                           
  3981                           ;main.c: 71:             count++;
  3982  0367  3001               	movlw	1
  3983  0368  0021               	movlb	1	; select bank1
  3984  0369  07DF               	addwf	main@count^(0+128),f
  3985  036A  3000               	movlw	0
  3986  036B  3DE0               	addwfc	(main@count+1)^(0+128),f
  3987  036C  2B2E               	goto	l2202
  3988  036D                     __end_of_main:	
  3989                           
  3990                           	psect	text1
  3991  02A2                     __ptext1:	
  3992 ;; *************** function _read_input *****************
  3993 ;; Defined at:
  3994 ;;		line 8 in file "main.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  str             1    wreg     PTR unsigned char 
  3997 ;;		 -> s(4), 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  str             1    9[BANK0 ] PTR unsigned char 
  4000 ;;		 -> s(4), 
  4001 ;;  buffer          4    0[BANK0 ] unsigned char [4]
  4002 ;;  i               2    6[BANK0 ] int 
  4003 ;;  index           2    4[BANK0 ] int 
  4004 ;;  temp            1    8[BANK0 ] unsigned char 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  2  324[None  ] int 
  4007 ;; Registers used:
  4008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4015 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4016 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4017 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4018 ;;Total ram usage:       12 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    2
  4021 ;; This function calls:
  4022 ;;		_EUSART_Read
  4023 ;;		_EUSART_is_rx_ready
  4024 ;;		_clear
  4025 ;;		_strcpy
  4026 ;; This function is called by:
  4027 ;;		_main
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           
  4032                           ;psect for function _read_input
  4033  02A2                     _read_input:	
  4034                           
  4035                           ;incstack = 0
  4036                           ; Regs used in _read_input: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4037                           ;read_input@str stored from wreg
  4038  02A2  0020               	movlb	0	; select bank0
  4039  02A3  00A9               	movwf	read_input@str
  4040                           
  4041                           ;main.c: 9:     unsigned char temp;;main.c: 10:     int i = 0;
  4042  02A4  01A6               	clrf	read_input@i
  4043  02A5  01A7               	clrf	read_input@i+1
  4044                           
  4045                           ;main.c: 11:     int index = 0;
  4046  02A6  01A4               	clrf	read_input@index
  4047  02A7  01A5               	clrf	read_input@index+1
  4048                           
  4049                           ;main.c: 12:     char buffer[4]="";
  4050  02A8  3000               	movlw	0
  4051  02A9  00A3               	movwf	read_input@buffer+3
  4052  02AA  3000               	movlw	0
  4053  02AB  00A2               	movwf	read_input@buffer+2
  4054  02AC  3000               	movlw	0
  4055  02AD  00A1               	movwf	read_input@buffer+1
  4056  02AE  3000               	movlw	0
  4057  02AF  00A0               	movwf	read_input@buffer
  4058                           
  4059                           ;main.c: 13:     while (i < 4){
  4060  02B0  2ACD               	goto	l2106
  4061  02B1                     l2092:	
  4062                           ;main.c: 18:         switch(temp)
  4063                           
  4064                           
  4065                           ;main.c: 22:          {;main.c: 23:                 strcpy(str,buffer);
  4066  02B1  3020               	movlw	low read_input@buffer
  4067  02B2  00F0               	movwf	strcpy@src
  4068  02B3  3000               	movlw	high read_input@buffer
  4069  02B4  00F1               	movwf	strcpy@src+1
  4070  02B5  0829               	movf	read_input@str,w
  4071  02B6  3181  2157  3182   	fcall	_strcpy
  4072                           
  4073                           ;main.c: 24:                 clear(buffer);
  4074  02B9  3020               	movlw	(low (read_input@buffer| 0))& (0+255)
  4075  02BA  3180  206A         	fcall	_clear
  4076  02BC  0008               	return
  4077  02BD                     l2098:	
  4078                           
  4079                           ;main.c: 31:                 buffer[index++] = temp;
  4080  02BD  0828               	movf	read_input@temp,w
  4081  02BE  00F9               	movwf	??_read_input
  4082  02BF  0824               	movf	read_input@index,w
  4083  02C0  3E20               	addlw	(low (read_input@buffer| 0))& (0+255)
  4084  02C1  0086               	movwf	6
  4085  02C2  0187               	clrf	7
  4086  02C3  0879               	movf	??_read_input,w
  4087  02C4  0081               	movwf	1
  4088  02C5  3001               	movlw	1
  4089  02C6  07A4               	addwf	read_input@index,f
  4090  02C7  3000               	movlw	0
  4091  02C8  3DA5               	addwfc	read_input@index+1,f
  4092                           
  4093                           ;main.c: 32:                 i++;
  4094  02C9  3001               	movlw	1
  4095  02CA  07A6               	addwf	read_input@i,f
  4096  02CB  3000               	movlw	0
  4097  02CC  3DA7               	addwfc	read_input@i+1,f
  4098  02CD                     l2106:	
  4099                           ;main.c: 33:             };main.c: 34:         }
  4100                           
  4101                           
  4102                           ;main.c: 13:     while (i < 4){
  4103  02CD  0020               	movlb	0	; select bank0
  4104  02CE  0827               	movf	read_input@i+1,w
  4105  02CF  3A80               	xorlw	128
  4106  02D0  00F9               	movwf	??_read_input
  4107  02D1  3080               	movlw	128
  4108  02D2  0279               	subwf	??_read_input,w
  4109  02D3  1D03               	skipz
  4110  02D4  2AD7               	goto	u1485
  4111  02D5  3004               	movlw	4
  4112  02D6  0226               	subwf	read_input@i,w
  4113  02D7                     u1485:	
  4114  02D7  1803               	btfsc	3,0
  4115  02D8  2AF7               	goto	l2108
  4116                           
  4117                           ;main.c: 14:     if (EUSART_is_rx_ready())
  4118  02D9  3180  202F  3182   	fcall	_EUSART_is_rx_ready
  4119  02DC  3A00               	xorlw	0
  4120  02DD  1903               	skipnz
  4121  02DE  2ACD               	goto	l2106
  4122                           
  4123                           ;main.c: 15:     {;main.c: 17:         temp=EUSART_Read();
  4124  02DF  3180  2089  3182   	fcall	_EUSART_Read
  4125  02E2  00F9               	movwf	??_read_input
  4126  02E3  0879               	movf	??_read_input,w
  4127  02E4  0020               	movlb	0	; select bank0
  4128  02E5  00A8               	movwf	read_input@temp
  4129  02E6  0828               	movf	read_input@temp,w
  4130  02E7  00F9               	movwf	??_read_input
  4131  02E8  01FA               	clrf	??_read_input+1
  4132                           
  4133                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4134                           ; Switch size 1, requested type "simple"
  4135                           ; Number of cases is 1, Range of values is 0 to 0
  4136                           ; switch strategies available:
  4137                           ; Name         Instructions Cycles
  4138                           ; simple_byte            4     3 (average)
  4139                           ; direct_byte            8     6 (fixed)
  4140                           ; jumptable            260     6 (fixed)
  4141                           ;	Chosen strategy is simple_byte
  4142  02E9  087A               	movf	??_read_input+1,w
  4143  02EA  3A00               	xorlw	0	; case 0
  4144  02EB  1903               	skipnz
  4145  02EC  2AEE               	goto	l2244
  4146  02ED  2ABD               	goto	l2098
  4147  02EE                     l2244:	
  4148                           
  4149                           ; Switch size 1, requested type "simple"
  4150                           ; Number of cases is 2, Range of values is 10 to 59
  4151                           ; switch strategies available:
  4152                           ; Name         Instructions Cycles
  4153                           ; simple_byte            7     4 (average)
  4154                           ; direct_byte          109     9 (fixed)
  4155                           ; jumptable            263     9 (fixed)
  4156                           ;	Chosen strategy is simple_byte
  4157  02EE  0879               	movf	??_read_input,w
  4158  02EF  3A0A               	xorlw	10	; case 10
  4159  02F0  1903               	skipnz
  4160  02F1  2AB1               	goto	l2092
  4161  02F2  3A31               	xorlw	49	; case 59
  4162  02F3  1903               	skipnz
  4163  02F4  2AB1               	goto	l2092
  4164  02F5  2ABD               	goto	l2098
  4165  02F6  2ACD               	goto	l2106
  4166  02F7                     l2108:	
  4167                           
  4168                           ;main.c: 36:         strcpy(str,buffer);
  4169  02F7  3020               	movlw	low read_input@buffer
  4170  02F8  00F0               	movwf	strcpy@src
  4171  02F9  3000               	movlw	high read_input@buffer
  4172  02FA  00F1               	movwf	strcpy@src+1
  4173  02FB  0020               	movlb	0	; select bank0
  4174  02FC  0829               	movf	read_input@str,w
  4175  02FD  3181  2157  3182   	fcall	_strcpy
  4176                           
  4177                           ;main.c: 37:         clear(buffer);
  4178  0300  3020               	movlw	(low (read_input@buffer| 0))& (0+255)
  4179  0301  3180  206A         	fcall	_clear
  4180  0303  0008               	return
  4181  0304                     __end_of_read_input:	
  4182                           
  4183                           	psect	text2
  4184  006A                     __ptext2:	
  4185 ;; *************** function _clear *****************
  4186 ;; Defined at:
  4187 ;;		line 5 in file "main.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  str             1    wreg     PTR unsigned char 
  4190 ;;		 -> read_input@buffer(4), 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  str             1    8[COMMON] PTR unsigned char 
  4193 ;;		 -> read_input@buffer(4), 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4207 ;;Total ram usage:        1 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    1
  4210 ;; This function calls:
  4211 ;;		_strcpy
  4212 ;; This function is called by:
  4213 ;;		_read_input
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           
  4218                           ;psect for function _clear
  4219  006A                     _clear:	
  4220                           
  4221                           ;incstack = 0
  4222                           ; Regs used in _clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4223                           ;clear@str stored from wreg
  4224  006A  00F8               	movwf	clear@str
  4225                           
  4226                           ;main.c: 6:     strcpy(str,"");
  4227  006B  3003               	movlw	low ((STR_2+3)| (0+32768))
  4228  006C  00F0               	movwf	strcpy@src
  4229  006D  3088               	movlw	high ((STR_2+3)| (0+32768))
  4230  006E  00F1               	movwf	strcpy@src+1
  4231  006F  0878               	movf	clear@str,w
  4232  0070  3181  2157         	fcall	_strcpy
  4233  0072  0008               	return
  4234  0073                     __end_of_clear:	
  4235                           
  4236                           	psect	text3
  4237  0157                     __ptext3:	
  4238 ;; *************** function _strcpy *****************
  4239 ;; Defined at:
  4240 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  dest            1    wreg     PTR unsigned char 
  4243 ;;		 -> s(4), read_input@buffer(4), 
  4244 ;;  src             2    0[COMMON] PTR const unsigned char 
  4245 ;;		 -> read_input@buffer(4), STR_1(1), 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  dest            1    7[COMMON] PTR unsigned char 
  4248 ;;		 -> s(4), read_input@buffer(4), 
  4249 ;;  s               2    4[COMMON] PTR const unsigned char 
  4250 ;;		 -> read_input@buffer(4), STR_1(1), 
  4251 ;;  d               1    6[COMMON] PTR unsigned char 
  4252 ;;		 -> s(4), read_input@buffer(4), 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      PTR unsigned char 
  4255 ;; Registers used:
  4256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4265 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4266 ;;Total ram usage:        8 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_clear
  4272 ;;		_read_input
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           
  4277                           ;psect for function _strcpy
  4278  0157                     _strcpy:	
  4279                           
  4280                           ;incstack = 0
  4281                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  4282                           ;strcpy@dest stored from wreg
  4283  0157  00F7               	movwf	strcpy@dest
  4284  0158  0871               	movf	strcpy@src+1,w
  4285  0159  00F5               	movwf	strcpy@s+1
  4286  015A  0870               	movf	strcpy@src,w
  4287  015B  00F4               	movwf	strcpy@s
  4288  015C  0877               	movf	strcpy@dest,w
  4289  015D  00F2               	movwf	??_strcpy
  4290  015E  0872               	movf	??_strcpy,w
  4291  015F  00F6               	movwf	strcpy@d
  4292  0160                     l1876:	
  4293  0160  0876               	movf	strcpy@d,w
  4294  0161  0086               	movwf	6
  4295  0162  0187               	clrf	7
  4296  0163  0AF6               	incf	strcpy@d,f
  4297  0164  0875               	movf	strcpy@s+1,w
  4298  0165  00F3               	movwf	??_strcpy+1
  4299  0166  0874               	movf	strcpy@s,w
  4300  0167  00F2               	movwf	??_strcpy
  4301  0168  0AF4               	incf	strcpy@s,f
  4302  0169  1903               	skipnz
  4303  016A  0AF5               	incf	strcpy@s+1,f
  4304  016B  0872               	movf	??_strcpy,w
  4305  016C  0084               	movwf	4
  4306  016D  0873               	movf	??_strcpy+1,w
  4307  016E  0085               	movwf	5
  4308  016F  0800               	movf	0,w	;code access
  4309  0170  3FC0               	movwi [0]fsr1
  4310  0171  0889               	movf	9,f
  4311  0172  1903               	btfsc	3,2
  4312  0173  0008               	return
  4313  0174  2960               	goto	l1876
  4314  0175                     __end_of_strcpy:	
  4315                           
  4316                           	psect	text4
  4317  002F                     __ptext4:	
  4318 ;; *************** function _EUSART_is_rx_ready *****************
  4319 ;; Defined at:
  4320 ;;		line 99 in file "mcc_generated_files/eusart.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      _Bool 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_read_input
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           
  4348                           ;psect for function _EUSART_is_rx_ready
  4349  002F                     _EUSART_is_rx_ready:	
  4350                           
  4351                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  4352                           
  4353                           ;incstack = 0
  4354                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  4355  002F  0020               	movlb	0	; select bank0
  4356  0030  0E10               	swapf	16,w	;volatile
  4357  0031  0C89               	rrf	9,f
  4358  0032  3901               	andlw	1
  4359  0033  0008               	return
  4360  0034                     __end_of_EUSART_is_rx_ready:	
  4361                           
  4362                           	psect	text5
  4363  0089                     __ptext5:	
  4364 ;; *************** function _EUSART_Read *****************
  4365 ;; Defined at:
  4366 ;;		line 113 in file "mcc_generated_files/eusart.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      unsigned char 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4384 ;;Total ram usage:        0 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_read_input
  4390 ;;		_getch
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           
  4395                           ;psect for function _EUSART_Read
  4396  0089                     _EUSART_Read:	
  4397  0089                     l116:	
  4398                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  4399                           
  4400                           ;incstack = 0
  4401                           ; Regs used in _EUSART_Read: [wreg+status,2]
  4402                           
  4403                           
  4404                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  4405  0089  0020               	movlb	0	; select bank0
  4406  008A  1E90               	btfss	16,5	;volatile
  4407  008B  2889               	goto	l116
  4408                           
  4409                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  4410  008C  0021               	movlb	1	; select bank1
  4411  008D  01B4               	clrf	_eusartRxLastError^(0+128)	;volatile
  4412                           
  4413                           ;mcc_generated_files/eusart.c: 121:     if(1 == RC1STAbits.OERR)
  4414  008E  0023               	movlb	3	; select bank3
  4415  008F  1C9D               	btfss	29,1	;volatile
  4416  0090  2893               	goto	l1994
  4417                           
  4418                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RC1
      +                          STAbits.CREN = 0;
  4419  0091  121D               	bcf	29,4	;volatile
  4420                           
  4421                           ;mcc_generated_files/eusart.c: 126:         RC1STAbits.CREN = 1;
  4422  0092  161D               	bsf	29,4	;volatile
  4423  0093                     l1994:	
  4424                           
  4425                           ;mcc_generated_files/eusart.c: 129:     return RC1REG;
  4426  0093  0819               	movf	25,w	;volatile
  4427  0094  0008               	return
  4428  0095                     __end_of_EUSART_Read:	
  4429                           
  4430                           	psect	text6
  4431  00A2                     __ptext6:	
  4432 ;; *************** function _printf *****************
  4433 ;; Defined at:
  4434 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  4437 ;;		 -> STR_2(4), 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  ret             2    0        int 
  4440 ;;  ap              1   77[BANK0 ] PTR void [1]
  4441 ;;		 -> ?_printf(2), 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  2   70[BANK0 ] int 
  4444 ;; Registers used:
  4445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4451 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4452 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4453 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4454 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4455 ;;Total ram usage:        8 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    8
  4458 ;; This function calls:
  4459 ;;		_vfprintf
  4460 ;; This function is called by:
  4461 ;;		_main
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           
  4466                           ;psect for function _printf
  4467  00A2                     _printf:	
  4468                           
  4469                           ;incstack = 0
  4470                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4471  00A2  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4472  00A3  0020               	movlb	0	; select bank0
  4473  00A4  00EA               	movwf	??_printf
  4474  00A5  086A               	movf	??_printf,w
  4475  00A6  00ED               	movwf	printf@ap
  4476  00A7  0867               	movf	printf@fmt+1,w
  4477  00A8  00DF               	movwf	vfprintf@fmt+1
  4478  00A9  0866               	movf	printf@fmt,w
  4479  00AA  00DE               	movwf	vfprintf@fmt
  4480  00AB  306D               	movlw	(low (printf@ap| 0))& (0+255)
  4481  00AC  00EA               	movwf	??_printf
  4482  00AD  086A               	movf	??_printf,w
  4483  00AE  00E0               	movwf	vfprintf@ap
  4484  00AF  3000               	movlw	0
  4485  00B0  3181  21BB         	fcall	_vfprintf
  4486  00B2  0008               	return
  4487  00B3                     __end_of_printf:	
  4488                           
  4489                           	psect	text7
  4490  01BB                     __ptext7:	
  4491 ;; *************** function _vfprintf *****************
  4492 ;; Defined at:
  4493 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  fp              1    wreg     PTR struct _IO_FILE
  4496 ;;		 -> NULL(0), 
  4497 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  4498 ;;		 -> STR_2(4), 
  4499 ;;  ap              1   64[BANK0 ] PTR PTR void 
  4500 ;;		 -> printf@ap(1), 
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  4503 ;;		 -> NULL(0), 
  4504 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  4505 ;;		 -> STR_2(4), 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  2   62[BANK0 ] int 
  4508 ;; Registers used:
  4509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4515 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4516 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4517 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4518 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4519 ;;Total ram usage:        8 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    7
  4522 ;; This function calls:
  4523 ;;		_vfpfcnvrt
  4524 ;; This function is called by:
  4525 ;;		_printf
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           
  4530                           ;psect for function _vfprintf
  4531  01BB                     _vfprintf:	
  4532                           
  4533                           ;incstack = 0
  4534                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4535                           ;vfprintf@fp stored from wreg
  4536  01BB  0020               	movlb	0	; select bank0
  4537  01BC  00E3               	movwf	vfprintf@fp
  4538                           
  4539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4540  01BD  085F               	movf	vfprintf@fmt+1,w
  4541  01BE  00E5               	movwf	vfprintf@cfmt+1
  4542  01BF  085E               	movf	vfprintf@fmt,w
  4543  01C0  00E4               	movwf	vfprintf@cfmt
  4544                           
  4545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4546  01C1  0021               	movlb	1	; select bank1
  4547  01C2  01A4               	clrf	_nout^(0+128)
  4548  01C3  01A5               	clrf	(_nout+1)^(0+128)
  4549  01C4                     l2034:	
  4550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4551                           
  4552                           
  4553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4554  01C4  0020               	movlb	0	; select bank0
  4555  01C5  0864               	movf	vfprintf@cfmt,w
  4556  01C6  0084               	movwf	4
  4557  01C7  0865               	movf	vfprintf@cfmt+1,w
  4558  01C8  0085               	movwf	5
  4559  01C9  0012               	moviw fsr0++
  4560  01CA  1903               	btfsc	3,2
  4561  01CB  29E1               	goto	l2036
  4562                           
  4563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4564  01CC  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4565  01CD  00E1               	movwf	??_vfprintf
  4566  01CE  0861               	movf	??_vfprintf,w
  4567  01CF  00CE               	movwf	vfpfcnvrt@fmt
  4568  01D0  0860               	movf	vfprintf@ap,w
  4569  01D1  00E2               	movwf	??_vfprintf+1
  4570  01D2  0862               	movf	??_vfprintf+1,w
  4571  01D3  00CF               	movwf	vfpfcnvrt@ap
  4572  01D4  0863               	movf	vfprintf@fp,w
  4573  01D5  3184  2408  3181   	fcall	_vfpfcnvrt
  4574  01D8  0020               	movlb	0	; select bank0
  4575  01D9  084E               	movf	?_vfpfcnvrt,w
  4576  01DA  0021               	movlb	1	; select bank1
  4577  01DB  07A4               	addwf	_nout^(0+128),f
  4578  01DC  0020               	movlb	0	; select bank0
  4579  01DD  084F               	movf	?_vfpfcnvrt+1,w
  4580  01DE  0021               	movlb	1	; select bank1
  4581  01DF  3DA5               	addwfc	(_nout+1)^(0+128),f
  4582  01E0  29C4               	goto	l2034
  4583  01E1                     l2036:	
  4584                           
  4585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4586  01E1  0021               	movlb	1	; select bank1
  4587  01E2  0825               	movf	(_nout+1)^(0+128),w
  4588  01E3  0020               	movlb	0	; select bank0
  4589  01E4  00DF               	movwf	?_vfprintf+1
  4590  01E5  0021               	movlb	1	; select bank1
  4591  01E6  0824               	movf	_nout^(0+128),w
  4592  01E7  0020               	movlb	0	; select bank0
  4593  01E8  00DE               	movwf	?_vfprintf
  4594  01E9  0008               	return
  4595  01EA                     __end_of_vfprintf:	
  4596                           
  4597                           	psect	text8
  4598  0408                     __ptext8:	
  4599 ;; *************** function _vfpfcnvrt *****************
  4600 ;; Defined at:
  4601 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  fp              1    wreg     PTR struct _IO_FILE
  4604 ;;		 -> NULL(0), 
  4605 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  4606 ;;		 -> vfprintf@cfmt(2), 
  4607 ;;  ap              1   47[BANK0 ] PTR PTR void 
  4608 ;;		 -> printf@ap(1), 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  4611 ;;		 -> NULL(0), 
  4612 ;;  ll              8   53[BANK0 ] long long 
  4613 ;;  llu             8    0        unsigned long long 
  4614 ;;  f               4    0        unsigned long long 
  4615 ;;  ct              3    0        unsigned char [3]
  4616 ;;  vp              2    0        PTR void 
  4617 ;;  i               2    0        int 
  4618 ;;  done            2    0        int 
  4619 ;;  cp              2    0        PTR unsigned char 
  4620 ;;  c               1    0        unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  2   46[BANK0 ] int 
  4623 ;; Registers used:
  4624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4630 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;Total ram usage:       16 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    6
  4637 ;; This function calls:
  4638 ;;		_dtoa
  4639 ;;		_fputc
  4640 ;; This function is called by:
  4641 ;;		_vfprintf
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           
  4646                           ;psect for function _vfpfcnvrt
  4647  0408                     _vfpfcnvrt:	
  4648                           
  4649                           ;incstack = 0
  4650                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4651                           ;vfpfcnvrt@fp stored from wreg
  4652  0408  0020               	movlb	0	; select bank0
  4653  0409  00DD               	movwf	vfpfcnvrt@fp
  4654                           
  4655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4656  040A  084E               	movf	vfpfcnvrt@fmt,w
  4657  040B  0086               	movwf	6
  4658  040C  0187               	clrf	7
  4659  040D  3F40               	moviw [0]fsr1
  4660  040E  00D0               	movwf	??_vfpfcnvrt
  4661  040F  3F41               	moviw [1]fsr1
  4662  0410  00D1               	movwf	??_vfpfcnvrt+1
  4663  0411  0850               	movf	??_vfpfcnvrt,w
  4664  0412  0084               	movwf	4
  4665  0413  0851               	movf	??_vfpfcnvrt+1,w
  4666  0414  0085               	movwf	5
  4667  0415  0012               	moviw fsr0++
  4668  0416  3A25               	xorlw	37
  4669  0417  1D03               	btfss	3,2
  4670  0418  2CB5               	goto	l1914
  4671                           
  4672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4673  0419  084E               	movf	vfpfcnvrt@fmt,w
  4674  041A  0086               	movwf	6
  4675  041B  0187               	clrf	7
  4676  041C  3001               	movlw	1
  4677  041D  0781               	addwf	1,f
  4678  041E  3141               	addfsr 1,1
  4679  041F  1803               	skipnc
  4680  0420  0A81               	incf	1,f
  4681                           
  4682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4683  0421  0021               	movlb	1	; select bank1
  4684  0422  01A6               	clrf	_width^(0+128)
  4685  0423  01A7               	clrf	(_width+1)^(0+128)
  4686  0424  01AA               	clrf	_flags^(0+128)
  4687  0425  01AB               	clrf	(_flags+1)^(0+128)
  4688                           
  4689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4690  0426  30FF               	movlw	255
  4691  0427  00A8               	movwf	_prec^(0+128)
  4692  0428  30FF               	movlw	255
  4693  0429  00A9               	movwf	(_prec^(0+128)+1)
  4694                           
  4695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4696  042A  0020               	movlb	0	; select bank0
  4697  042B  084E               	movf	vfpfcnvrt@fmt,w
  4698  042C  0086               	movwf	6
  4699  042D  0187               	clrf	7
  4700  042E  3F40               	moviw [0]fsr1
  4701  042F  00D0               	movwf	??_vfpfcnvrt
  4702  0430  3F41               	moviw [1]fsr1
  4703  0431  00D1               	movwf	??_vfpfcnvrt+1
  4704  0432  0850               	movf	??_vfpfcnvrt,w
  4705  0433  0084               	movwf	4
  4706  0434  0851               	movf	??_vfpfcnvrt+1,w
  4707  0435  0085               	movwf	5
  4708  0436  0012               	moviw fsr0++
  4709  0437  3A64               	xorlw	100
  4710  0438  1903               	btfsc	3,2
  4711  0439  2C49               	goto	l1890
  4712  043A  084E               	movf	vfpfcnvrt@fmt,w
  4713  043B  0086               	movwf	6
  4714  043C  0187               	clrf	7
  4715  043D  3F40               	moviw [0]fsr1
  4716  043E  00D0               	movwf	??_vfpfcnvrt
  4717  043F  3F41               	moviw [1]fsr1
  4718  0440  00D1               	movwf	??_vfpfcnvrt+1
  4719  0441  0850               	movf	??_vfpfcnvrt,w
  4720  0442  0084               	movwf	4
  4721  0443  0851               	movf	??_vfpfcnvrt+1,w
  4722  0444  0085               	movwf	5
  4723  0445  0012               	moviw fsr0++
  4724  0446  3A69               	xorlw	105
  4725  0447  1D03               	btfss	3,2
  4726  0448  2C83               	goto	l1898
  4727  0449                     l1890:	
  4728                           
  4729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4730  0449  084E               	movf	vfpfcnvrt@fmt,w
  4731  044A  0086               	movwf	6
  4732  044B  0187               	clrf	7
  4733  044C  3001               	movlw	1
  4734  044D  0781               	addwf	1,f
  4735  044E  3141               	addfsr 1,1
  4736  044F  1803               	skipnc
  4737  0450  0A81               	incf	1,f
  4738                           
  4739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4740  0451  084F               	movf	vfpfcnvrt@ap,w
  4741  0452  0086               	movwf	6
  4742  0453  0187               	clrf	7
  4743  0454  0801               	movf	1,w
  4744  0455  0084               	movwf	4
  4745  0456  0185               	clrf	5
  4746  0457  3002               	movlw	2
  4747  0458  0781               	addwf	1,f
  4748  0459  3F00               	moviw [0]fsr0
  4749  045A  00D0               	movwf	??_vfpfcnvrt
  4750  045B  3F01               	moviw [1]fsr0
  4751  045C  00D1               	movwf	??_vfpfcnvrt+1
  4752  045D  0850               	movf	??_vfpfcnvrt,w
  4753  045E  00D5               	movwf	vfpfcnvrt@ll
  4754  045F  0851               	movf	??_vfpfcnvrt+1,w
  4755  0460  00D6               	movwf	vfpfcnvrt@ll+1
  4756  0461  0D89               	rlf	9,f
  4757  0462  3B89               	subwfb	9,f
  4758  0463  0989               	comf	9,f
  4759  0464  00D7               	movwf	vfpfcnvrt@ll+2
  4760  0465  00D8               	movwf	vfpfcnvrt@ll+3
  4761  0466  00D9               	movwf	vfpfcnvrt@ll+4
  4762  0467  00DA               	movwf	vfpfcnvrt@ll+5
  4763  0468  00DB               	movwf	vfpfcnvrt@ll+6
  4764  0469  00DC               	movwf	vfpfcnvrt@ll+7
  4765                           
  4766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4767  046A  0855               	movf	vfpfcnvrt@ll,w
  4768  046B  00B0               	movwf	dtoa@d
  4769  046C  0856               	movf	vfpfcnvrt@ll+1,w
  4770  046D  00B1               	movwf	dtoa@d+1
  4771  046E  0857               	movf	vfpfcnvrt@ll+2,w
  4772  046F  00B2               	movwf	dtoa@d+2
  4773  0470  0858               	movf	vfpfcnvrt@ll+3,w
  4774  0471  00B3               	movwf	dtoa@d+3
  4775  0472  0859               	movf	vfpfcnvrt@ll+4,w
  4776  0473  00B4               	movwf	dtoa@d+4
  4777  0474  085A               	movf	vfpfcnvrt@ll+5,w
  4778  0475  00B5               	movwf	dtoa@d+5
  4779  0476  085B               	movf	vfpfcnvrt@ll+6,w
  4780  0477  00B6               	movwf	dtoa@d+6
  4781  0478  085C               	movf	vfpfcnvrt@ll+7,w
  4782  0479  00B7               	movwf	dtoa@d+7
  4783  047A  085D               	movf	vfpfcnvrt@fp,w
  4784  047B  3186  26A7         	fcall	_dtoa
  4785  047D  0020               	movlb	0	; select bank0
  4786  047E  0831               	movf	?_dtoa+1,w
  4787  047F  00CF               	movwf	?_vfpfcnvrt+1
  4788  0480  0830               	movf	?_dtoa,w
  4789  0481  00CE               	movwf	?_vfpfcnvrt
  4790  0482  0008               	return
  4791  0483                     l1898:	
  4792                           
  4793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4794  0483  084E               	movf	vfpfcnvrt@fmt,w
  4795  0484  0086               	movwf	6
  4796  0485  0187               	clrf	7
  4797  0486  3F40               	moviw [0]fsr1
  4798  0487  00D0               	movwf	??_vfpfcnvrt
  4799  0488  3F41               	moviw [1]fsr1
  4800  0489  00D1               	movwf	??_vfpfcnvrt+1
  4801  048A  0850               	movf	??_vfpfcnvrt,w
  4802  048B  0084               	movwf	4
  4803  048C  0851               	movf	??_vfpfcnvrt+1,w
  4804  048D  0085               	movwf	5
  4805  048E  0012               	moviw fsr0++
  4806  048F  3A25               	xorlw	37
  4807  0490  1D03               	btfss	3,2
  4808  0491  2CAA               	goto	l1908
  4809                           
  4810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4811  0492  084E               	movf	vfpfcnvrt@fmt,w
  4812  0493  0086               	movwf	6
  4813  0494  0187               	clrf	7
  4814  0495  3001               	movlw	1
  4815  0496  0781               	addwf	1,f
  4816  0497  3141               	addfsr 1,1
  4817  0498  1803               	skipnc
  4818  0499  0A81               	incf	1,f
  4819                           
  4820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4821  049A  3025               	movlw	37
  4822  049B  00F2               	movwf	fputc@c
  4823  049C  3000               	movlw	0
  4824  049D  00F3               	movwf	fputc@c+1
  4825  049E  085D               	movf	vfpfcnvrt@fp,w
  4826  049F  00D0               	movwf	??_vfpfcnvrt
  4827  04A0  0850               	movf	??_vfpfcnvrt,w
  4828  04A1  00F4               	movwf	fputc@fp
  4829  04A2  3182  221D         	fcall	_fputc
  4830  04A4                     l1904:	
  4831                           
  4832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4833  04A4  3001               	movlw	1
  4834  04A5  0020               	movlb	0	; select bank0
  4835  04A6  00CE               	movwf	?_vfpfcnvrt
  4836  04A7  3000               	movlw	0
  4837  04A8  00CF               	movwf	?_vfpfcnvrt+1
  4838  04A9  0008               	return
  4839  04AA                     l1908:	
  4840                           
  4841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4842  04AA  084E               	movf	vfpfcnvrt@fmt,w
  4843  04AB  0086               	movwf	6
  4844  04AC  0187               	clrf	7
  4845  04AD  3001               	movlw	1
  4846  04AE  0781               	addwf	1,f
  4847  04AF  3141               	addfsr 1,1
  4848  04B0  1803               	skipnc
  4849  04B1  0A81               	incf	1,f
  4850                           
  4851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4852  04B2  01CE               	clrf	?_vfpfcnvrt
  4853  04B3  01CF               	clrf	?_vfpfcnvrt+1
  4854  04B4  0008               	return
  4855  04B5                     l1914:	
  4856                           
  4857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4858  04B5  084E               	movf	vfpfcnvrt@fmt,w
  4859  04B6  0086               	movwf	6
  4860  04B7  0187               	clrf	7
  4861  04B8  3F40               	moviw [0]fsr1
  4862  04B9  00D0               	movwf	??_vfpfcnvrt
  4863  04BA  3F41               	moviw [1]fsr1
  4864  04BB  00D1               	movwf	??_vfpfcnvrt+1
  4865  04BC  0850               	movf	??_vfpfcnvrt,w
  4866  04BD  0084               	movwf	4
  4867  04BE  0851               	movf	??_vfpfcnvrt+1,w
  4868  04BF  0085               	movwf	5
  4869  04C0  0800               	movf	0,w	;code access
  4870  04C1  00D2               	movwf	??_vfpfcnvrt+2
  4871  04C2  01D3               	clrf	??_vfpfcnvrt+3
  4872  04C3  0852               	movf	??_vfpfcnvrt+2,w
  4873  04C4  00F2               	movwf	fputc@c
  4874  04C5  0853               	movf	??_vfpfcnvrt+3,w
  4875  04C6  00F3               	movwf	fputc@c+1
  4876  04C7  085D               	movf	vfpfcnvrt@fp,w
  4877  04C8  00D4               	movwf	??_vfpfcnvrt+4
  4878  04C9  0854               	movf	??_vfpfcnvrt+4,w
  4879  04CA  00F4               	movwf	fputc@fp
  4880  04CB  3182  221D  3184   	fcall	_fputc
  4881                           
  4882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4883  04CE  0020               	movlb	0	; select bank0
  4884  04CF  084E               	movf	vfpfcnvrt@fmt,w
  4885  04D0  0086               	movwf	6
  4886  04D1  0187               	clrf	7
  4887  04D2  3001               	movlw	1
  4888  04D3  0781               	addwf	1,f
  4889  04D4  3141               	addfsr 1,1
  4890  04D5  1803               	skipnc
  4891  04D6  0A81               	incf	1,f
  4892  04D7  2CA4               	goto	l1904
  4893  04D8                     __end_of_vfpfcnvrt:	
  4894                           
  4895                           	psect	text9
  4896  06A7                     __ptext9:	
  4897 ;; *************** function _dtoa *****************
  4898 ;; Defined at:
  4899 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;  fp              1    wreg     PTR struct _IO_FILE
  4902 ;;		 -> NULL(0), 
  4903 ;;  d               8   16[BANK0 ] long long 
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  4906 ;;		 -> NULL(0), 
  4907 ;;  n               8   36[BANK0 ] long long 
  4908 ;;  i               2   44[BANK0 ] int 
  4909 ;;  s               2   34[BANK0 ] int 
  4910 ;;  w               2   32[BANK0 ] int 
  4911 ;;  p               2   29[BANK0 ] int 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  2   16[BANK0 ] int 
  4914 ;; Registers used:
  4915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4921 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4922 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4923 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4924 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4925 ;;Total ram usage:       30 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    5
  4928 ;; This function calls:
  4929 ;;		___aodiv
  4930 ;;		___aomod
  4931 ;;		_abs
  4932 ;;		_pad
  4933 ;; This function is called by:
  4934 ;;		_vfpfcnvrt
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           
  4939                           ;psect for function _dtoa
  4940  06A7                     _dtoa:	
  4941                           
  4942                           ;incstack = 0
  4943                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4944                           ;dtoa@fp stored from wreg
  4945  06A7  0020               	movlb	0	; select bank0
  4946  06A8  00BF               	movwf	dtoa@fp
  4947                           
  4948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4949  06A9  0830               	movf	dtoa@d,w
  4950  06AA  00C4               	movwf	dtoa@n
  4951  06AB  0831               	movf	dtoa@d+1,w
  4952  06AC  00C5               	movwf	dtoa@n+1
  4953  06AD  0832               	movf	dtoa@d+2,w
  4954  06AE  00C6               	movwf	dtoa@n+2
  4955  06AF  0833               	movf	dtoa@d+3,w
  4956  06B0  00C7               	movwf	dtoa@n+3
  4957  06B1  0834               	movf	dtoa@d+4,w
  4958  06B2  00C8               	movwf	dtoa@n+4
  4959  06B3  0835               	movf	dtoa@d+5,w
  4960  06B4  00C9               	movwf	dtoa@n+5
  4961  06B5  0836               	movf	dtoa@d+6,w
  4962  06B6  00CA               	movwf	dtoa@n+6
  4963  06B7  0837               	movf	dtoa@d+7,w
  4964  06B8  00CB               	movwf	dtoa@n+7
  4965                           
  4966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4967  06B9  3044               	movlw	low dtoa@n
  4968  06BA  0086               	movwf	6
  4969  06BB  3000               	movlw	high dtoa@n
  4970  06BC  0087               	movwf	7
  4971  06BD  3F47               	moviw [7]fsr1
  4972  06BE  00B8               	movwf	??_dtoa
  4973  06BF  1FB8               	btfss	??_dtoa,7
  4974  06C0  2EC3               	goto	u1140
  4975  06C1  3001               	movlw	1
  4976  06C2  2EC4               	goto	u1150
  4977  06C3                     u1140:	
  4978  06C3  3000               	movlw	0
  4979  06C4                     u1150:	
  4980  06C4  0020               	movlb	0	; select bank0
  4981  06C5  00B9               	movwf	??_dtoa+1
  4982  06C6  01BA               	clrf	??_dtoa+2
  4983  06C7  0839               	movf	??_dtoa+1,w
  4984  06C8  00C2               	movwf	dtoa@s
  4985  06C9  083A               	movf	??_dtoa+2,w
  4986  06CA  00C3               	movwf	dtoa@s+1
  4987                           
  4988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4989  06CB  0842               	movf	dtoa@s,w
  4990  06CC  0443               	iorwf	dtoa@s+1,w
  4991  06CD  1903               	btfsc	3,2
  4992  06CE  2EED               	goto	l458
  4993                           
  4994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4995  06CF  09C4               	comf	dtoa@n,f
  4996  06D0  09C5               	comf	dtoa@n+1,f
  4997  06D1  09C6               	comf	dtoa@n+2,f
  4998  06D2  09C7               	comf	dtoa@n+3,f
  4999  06D3  09C8               	comf	dtoa@n+4,f
  5000  06D4  09C9               	comf	dtoa@n+5,f
  5001  06D5  09CA               	comf	dtoa@n+6,f
  5002  06D6  09CB               	comf	dtoa@n+7,f
  5003  06D7  0AC4               	incf	dtoa@n,f
  5004  06D8  1D03               	skipz
  5005  06D9  2EED               	goto	l458
  5006  06DA  0AC5               	incf	dtoa@n+1,f
  5007  06DB  1D03               	skipz
  5008  06DC  2EED               	goto	l458
  5009  06DD  0AC6               	incf	dtoa@n+2,f
  5010  06DE  1D03               	skipz
  5011  06DF  2EED               	goto	l458
  5012  06E0  0AC7               	incf	dtoa@n+3,f
  5013  06E1  1D03               	skipz
  5014  06E2  2EED               	goto	l458
  5015  06E3  0AC8               	incf	dtoa@n+4,f
  5016  06E4  1D03               	skipz
  5017  06E5  2EED               	goto	l458
  5018  06E6  0AC9               	incf	dtoa@n+5,f
  5019  06E7  1D03               	skipz
  5020  06E8  2EED               	goto	l458
  5021  06E9  0ACA               	incf	dtoa@n+6,f
  5022  06EA  1D03               	skipz
  5023  06EB  2EED               	goto	l458
  5024  06EC  0ACB               	incf	dtoa@n+7,f
  5025  06ED                     l458:	
  5026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5027                           
  5028                           
  5029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5030  06ED  0021               	movlb	1	; select bank1
  5031  06EE  1BA9               	btfsc	(_prec+1)^(0+128),7
  5032  06EF  2EF4               	goto	l459
  5033                           
  5034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5035  06F0  30FD               	movlw	253
  5036  06F1  05AA               	andwf	_flags^(0+128),f
  5037  06F2  30FF               	movlw	255
  5038  06F3  05AB               	andwf	(_flags+1)^(0+128),f
  5039  06F4                     l459:	
  5040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5041                           
  5042                           
  5043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5044  06F4  0829               	movf	(_prec+1)^(0+128),w
  5045  06F5  3A80               	xorlw	128
  5046  06F6  0020               	movlb	0	; select bank0
  5047  06F7  00B8               	movwf	??_dtoa
  5048  06F8  3080               	movlw	128
  5049  06F9  0238               	subwf	??_dtoa,w
  5050  06FA  1D03               	skipz
  5051  06FB  2EFF               	goto	u1195
  5052  06FC  3001               	movlw	1
  5053  06FD  0021               	movlb	1	; select bank1
  5054  06FE  0228               	subwf	_prec^(0+128),w
  5055  06FF                     u1195:	
  5056  06FF  1803               	skipnc
  5057  0700  2F07               	goto	l1822
  5058  0701  3001               	movlw	1
  5059  0702  0020               	movlb	0	; select bank0
  5060  0703  00BD               	movwf	dtoa@p
  5061  0704  3000               	movlw	0
  5062  0705  00BE               	movwf	dtoa@p+1
  5063  0706  2F0F               	goto	l463
  5064  0707                     l1822:	
  5065  0707  0021               	movlb	1	; select bank1
  5066  0708  0829               	movf	(_prec+1)^(0+128),w
  5067  0709  0020               	movlb	0	; select bank0
  5068  070A  00BE               	movwf	dtoa@p+1
  5069  070B  0021               	movlb	1	; select bank1
  5070  070C  0828               	movf	_prec^(0+128),w
  5071  070D  0020               	movlb	0	; select bank0
  5072  070E  00BD               	movwf	dtoa@p
  5073  070F                     l463:	
  5074                           
  5075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5076  070F  0021               	movlb	1	; select bank1
  5077  0710  0827               	movf	(_width+1)^(0+128),w
  5078  0711  0020               	movlb	0	; select bank0
  5079  0712  00C1               	movwf	dtoa@w+1
  5080  0713  0021               	movlb	1	; select bank1
  5081  0714  0826               	movf	_width^(0+128),w
  5082  0715  0020               	movlb	0	; select bank0
  5083  0716  00C0               	movwf	dtoa@w
  5084                           
  5085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5086  0717  0842               	movf	dtoa@s,w
  5087  0718  0443               	iorwf	dtoa@s+1,w
  5088  0719  1D03               	btfss	3,2
  5089  071A  2F1E               	goto	l1828
  5090  071B  0021               	movlb	1	; select bank1
  5091  071C  1D2A               	btfss	_flags^(0+128),2
  5092  071D  2F23               	goto	l464
  5093  071E                     l1828:	
  5094                           
  5095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5096  071E  30FF               	movlw	255
  5097  071F  0020               	movlb	0	; select bank0
  5098  0720  07C0               	addwf	dtoa@w,f
  5099  0721  30FF               	movlw	255
  5100  0722  3DC1               	addwfc	dtoa@w+1,f
  5101  0723                     l464:	
  5102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5103                           
  5104                           
  5105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5106  0723  301F               	movlw	31
  5107  0724  0020               	movlb	0	; select bank0
  5108  0725  00CC               	movwf	dtoa@i
  5109  0726  3000               	movlw	0
  5110  0727  00CD               	movwf	dtoa@i+1
  5111                           
  5112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5113  0728  0021               	movlb	1	; select bank1
  5114  0729  01D4               	clrf	(_dbuf^(0+128)+31)
  5115                           
  5116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5117  072A  2FB8               	goto	l467
  5118  072B                     l1842:	
  5119  072B  0020               	movlb	0	; select bank0
  5120  072C  0844               	movf	dtoa@n,w
  5121  072D  0445               	iorwf	dtoa@n+1,w
  5122  072E  0446               	iorwf	dtoa@n+2,w
  5123  072F  0447               	iorwf	dtoa@n+3,w
  5124  0730  0448               	iorwf	dtoa@n+4,w
  5125  0731  0449               	iorwf	dtoa@n+5,w
  5126  0732  044A               	iorwf	dtoa@n+6,w
  5127  0733  044B               	iorwf	dtoa@n+7,w
  5128  0734  1D03               	skipz
  5129  0735  2F50               	goto	l1832
  5130  0736  083E               	movf	dtoa@p+1,w
  5131  0737  3A80               	xorlw	128
  5132  0738  00B8               	movwf	??_dtoa
  5133  0739  3080               	movlw	128
  5134  073A  0238               	subwf	??_dtoa,w
  5135  073B  1D03               	skipz
  5136  073C  2F3F               	goto	u1245
  5137  073D  3001               	movlw	1
  5138  073E  023D               	subwf	dtoa@p,w
  5139  073F                     u1245:	
  5140  073F  1803               	skipnc
  5141  0740  2F50               	goto	l1832
  5142  0741  0020               	movlb	0	; select bank0
  5143  0742  0841               	movf	dtoa@w+1,w
  5144  0743  3A80               	xorlw	128
  5145  0744  00B8               	movwf	??_dtoa
  5146  0745  3080               	movlw	128
  5147  0746  0238               	subwf	??_dtoa,w
  5148  0747  1D03               	skipz
  5149  0748  2F4B               	goto	u1255
  5150  0749  3001               	movlw	1
  5151  074A  0240               	subwf	dtoa@w,w
  5152  074B                     u1255:	
  5153  074B  1C03               	skipc
  5154  074C  2FC4               	goto	l1850
  5155  074D  0021               	movlb	1	; select bank1
  5156  074E  1CAA               	btfss	_flags^(0+128),1
  5157  074F  2FC4               	goto	l1850
  5158  0750                     l1832:	
  5159                           
  5160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5161  0750  30FF               	movlw	255
  5162  0751  0020               	movlb	0	; select bank0
  5163  0752  07CC               	addwf	dtoa@i,f
  5164  0753  30FF               	movlw	255
  5165  0754  3DCD               	addwfc	dtoa@i+1,f
  5166                           
  5167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5168  0755  300A               	movlw	10
  5169  0756  00A0               	movwf	___aomod@divisor
  5170  0757  01A1               	clrf	___aomod@divisor+1
  5171  0758  01A2               	clrf	___aomod@divisor+2
  5172  0759  01A3               	clrf	___aomod@divisor+3
  5173  075A  01A4               	clrf	___aomod@divisor+4
  5174  075B  01A5               	clrf	___aomod@divisor+5
  5175  075C  01A6               	clrf	___aomod@divisor+6
  5176  075D  01A7               	clrf	___aomod@divisor+7
  5177  075E  0844               	movf	dtoa@n,w
  5178  075F  00A8               	movwf	___aomod@dividend
  5179  0760  0845               	movf	dtoa@n+1,w
  5180  0761  00A9               	movwf	___aomod@dividend+1
  5181  0762  0846               	movf	dtoa@n+2,w
  5182  0763  00AA               	movwf	___aomod@dividend+2
  5183  0764  0847               	movf	dtoa@n+3,w
  5184  0765  00AB               	movwf	___aomod@dividend+3
  5185  0766  0848               	movf	dtoa@n+4,w
  5186  0767  00AC               	movwf	___aomod@dividend+4
  5187  0768  0849               	movf	dtoa@n+5,w
  5188  0769  00AD               	movwf	___aomod@dividend+5
  5189  076A  084A               	movf	dtoa@n+6,w
  5190  076B  00AE               	movwf	___aomod@dividend+6
  5191  076C  084B               	movf	dtoa@n+7,w
  5192  076D  00AF               	movwf	___aomod@dividend+7
  5193  076E  3184  24D8  3186   	fcall	___aomod
  5194  0771  0020               	movlb	0	; select bank0
  5195  0772  0821               	movf	?___aomod+1,w
  5196  0773  00F4               	movwf	abs@a+1
  5197  0774  0820               	movf	?___aomod,w
  5198  0775  00F3               	movwf	abs@a
  5199  0776  3180  20F2  3186   	fcall	_abs
  5200  0779  0873               	movf	?_abs,w
  5201  077A  3E30               	addlw	48
  5202  077B  0020               	movlb	0	; select bank0
  5203  077C  00B8               	movwf	??_dtoa
  5204  077D  084C               	movf	dtoa@i,w
  5205  077E  3EB5               	addlw	(low (_dbuf| 0))& (0+255)
  5206  077F  0086               	movwf	6
  5207  0780  0187               	clrf	7
  5208  0781  0838               	movf	??_dtoa,w
  5209  0782  0081               	movwf	1
  5210                           
  5211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5212  0783  30FF               	movlw	255
  5213  0784  07BD               	addwf	dtoa@p,f
  5214  0785  30FF               	movlw	255
  5215  0786  3DBE               	addwfc	dtoa@p+1,f
  5216                           
  5217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5218  0787  30FF               	movlw	255
  5219  0788  07C0               	addwf	dtoa@w,f
  5220  0789  30FF               	movlw	255
  5221  078A  3DC1               	addwfc	dtoa@w+1,f
  5222                           
  5223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5224  078B  300A               	movlw	10
  5225  078C  00A0               	movwf	___aodiv@divisor
  5226  078D  01A1               	clrf	___aodiv@divisor+1
  5227  078E  01A2               	clrf	___aodiv@divisor+2
  5228  078F  01A3               	clrf	___aodiv@divisor+3
  5229  0790  01A4               	clrf	___aodiv@divisor+4
  5230  0791  01A5               	clrf	___aodiv@divisor+5
  5231  0792  01A6               	clrf	___aodiv@divisor+6
  5232  0793  01A7               	clrf	___aodiv@divisor+7
  5233  0794  0844               	movf	dtoa@n,w
  5234  0795  00A8               	movwf	___aodiv@dividend
  5235  0796  0845               	movf	dtoa@n+1,w
  5236  0797  00A9               	movwf	___aodiv@dividend+1
  5237  0798  0846               	movf	dtoa@n+2,w
  5238  0799  00AA               	movwf	___aodiv@dividend+2
  5239  079A  0847               	movf	dtoa@n+3,w
  5240  079B  00AB               	movwf	___aodiv@dividend+3
  5241  079C  0848               	movf	dtoa@n+4,w
  5242  079D  00AC               	movwf	___aodiv@dividend+4
  5243  079E  0849               	movf	dtoa@n+5,w
  5244  079F  00AD               	movwf	___aodiv@dividend+5
  5245  07A0  084A               	movf	dtoa@n+6,w
  5246  07A1  00AE               	movwf	___aodiv@dividend+6
  5247  07A2  084B               	movf	dtoa@n+7,w
  5248  07A3  00AF               	movwf	___aodiv@dividend+7
  5249  07A4  3185  25B4  3186   	fcall	___aodiv
  5250  07A7  0020               	movlb	0	; select bank0
  5251  07A8  0820               	movf	?___aodiv,w
  5252  07A9  00C4               	movwf	dtoa@n
  5253  07AA  0821               	movf	?___aodiv+1,w
  5254  07AB  00C5               	movwf	dtoa@n+1
  5255  07AC  0822               	movf	?___aodiv+2,w
  5256  07AD  00C6               	movwf	dtoa@n+2
  5257  07AE  0823               	movf	?___aodiv+3,w
  5258  07AF  00C7               	movwf	dtoa@n+3
  5259  07B0  0824               	movf	?___aodiv+4,w
  5260  07B1  00C8               	movwf	dtoa@n+4
  5261  07B2  0825               	movf	?___aodiv+5,w
  5262  07B3  00C9               	movwf	dtoa@n+5
  5263  07B4  0826               	movf	?___aodiv+6,w
  5264  07B5  00CA               	movwf	dtoa@n+6
  5265  07B6  0827               	movf	?___aodiv+7,w
  5266  07B7  00CB               	movwf	dtoa@n+7
  5267  07B8                     l467:	
  5268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  5269                           
  5270                           
  5271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5272  07B8  0020               	movlb	0	; select bank0
  5273  07B9  084D               	movf	dtoa@i+1,w
  5274  07BA  3A80               	xorlw	128
  5275  07BB  00B8               	movwf	??_dtoa
  5276  07BC  3080               	movlw	128
  5277  07BD  0238               	subwf	??_dtoa,w
  5278  07BE  1D03               	skipz
  5279  07BF  2FC2               	goto	u1225
  5280  07C0  3001               	movlw	1
  5281  07C1  024C               	subwf	dtoa@i,w
  5282  07C2                     u1225:	
  5283  07C2  1803               	btfsc	3,0
  5284  07C3  2F2B               	goto	l1842
  5285  07C4                     l1850:	
  5286                           
  5287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5288  07C4  0020               	movlb	0	; select bank0
  5289  07C5  0842               	movf	dtoa@s,w
  5290  07C6  0443               	iorwf	dtoa@s+1,w
  5291  07C7  1D03               	btfss	3,2
  5292  07C8  2FCC               	goto	l1854
  5293  07C9  0021               	movlb	1	; select bank1
  5294  07CA  1D2A               	btfss	_flags^(0+128),2
  5295  07CB  2FE3               	goto	l1864
  5296  07CC                     l1854:	
  5297                           
  5298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5299  07CC  30FF               	movlw	255
  5300  07CD  0020               	movlb	0	; select bank0
  5301  07CE  07CC               	addwf	dtoa@i,f
  5302  07CF  30FF               	movlw	255
  5303  07D0  3DCD               	addwfc	dtoa@i+1,f
  5304                           
  5305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5306  07D1  0842               	movf	dtoa@s,w
  5307  07D2  0443               	iorwf	dtoa@s+1,w
  5308  07D3  1D03               	btfss	3,2
  5309  07D4  2FD7               	goto	l1860
  5310  07D5  302B               	movlw	43
  5311  07D6  2FD8               	goto	L1
  5312  07D7                     l1860:	
  5313  07D7  302D               	movlw	45
  5314  07D8                     L1:	
  5315  07D8  00BB               	movwf	_dtoa$788
  5316  07D9  3000               	movlw	0
  5317  07DA  00BC               	movwf	_dtoa$788+1
  5318  07DB  083B               	movf	_dtoa$788,w
  5319  07DC  00B8               	movwf	??_dtoa
  5320  07DD  084C               	movf	dtoa@i,w
  5321  07DE  3EB5               	addlw	(low (_dbuf| 0))& (0+255)
  5322  07DF  0086               	movwf	6
  5323  07E0  0187               	clrf	7
  5324  07E1  0838               	movf	??_dtoa,w
  5325  07E2  0081               	movwf	1
  5326  07E3                     l1864:	
  5327                           
  5328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5329  07E3  0020               	movlb	0	; select bank0
  5330  07E4  084C               	movf	dtoa@i,w
  5331  07E5  3EB5               	addlw	(low (_dbuf| 0))& (0+255)
  5332  07E6  00B8               	movwf	??_dtoa
  5333  07E7  0838               	movf	??_dtoa,w
  5334  07E8  00A4               	movwf	pad@buf
  5335  07E9  0841               	movf	dtoa@w+1,w
  5336  07EA  00A6               	movwf	pad@p+1
  5337  07EB  0840               	movf	dtoa@w,w
  5338  07EC  00A5               	movwf	pad@p
  5339  07ED  083F               	movf	dtoa@fp,w
  5340  07EE  3182  2252         	fcall	_pad
  5341  07F0  0020               	movlb	0	; select bank0
  5342  07F1  0825               	movf	?_pad+1,w
  5343  07F2  00B1               	movwf	?_dtoa+1
  5344  07F3  0824               	movf	?_pad,w
  5345  07F4  00B0               	movwf	?_dtoa
  5346  07F5  0008               	return
  5347  07F6                     __end_of_dtoa:	
  5348                           
  5349                           	psect	text10
  5350  0252                     __ptext10:	
  5351 ;; *************** function _pad *****************
  5352 ;; Defined at:
  5353 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  fp              1    wreg     PTR struct _IO_FILE
  5356 ;;		 -> NULL(0), 
  5357 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5358 ;;		 -> dbuf(32), 
  5359 ;;  p               2    5[BANK0 ] int 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  5362 ;;		 -> NULL(0), 
  5363 ;;  w               2   10[BANK0 ] int 
  5364 ;;  i               2    8[BANK0 ] int 
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  2    4[BANK0 ] int 
  5367 ;; Registers used:
  5368 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5374 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5375 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5377 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;Total ram usage:        9 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; Hardware stack levels required when called:    4
  5381 ;; This function calls:
  5382 ;;		_fputc
  5383 ;;		_fputs
  5384 ;;		_strlen
  5385 ;; This function is called by:
  5386 ;;		_dtoa
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           
  5391                           ;psect for function _pad
  5392  0252                     _pad:	
  5393                           
  5394                           ;incstack = 0
  5395                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5396                           ;pad@fp stored from wreg
  5397  0252  0020               	movlb	0	; select bank0
  5398  0253  00AC               	movwf	pad@fp
  5399                           
  5400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5401  0254  0021               	movlb	1	; select bank1
  5402  0255  1C2A               	btfss	_flags^(0+128),0
  5403  0256  2A60               	goto	l1722
  5404                           
  5405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5406  0257  0020               	movlb	0	; select bank0
  5407  0258  082C               	movf	pad@fp,w
  5408  0259  00A7               	movwf	??_pad
  5409  025A  0827               	movf	??_pad,w
  5410  025B  00FA               	movwf	fputs@fp
  5411  025C  0824               	movf	pad@buf,w
  5412  025D  3181  2196  3182   	fcall	_fputs
  5413  0260                     l1722:	
  5414                           
  5415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5416  0260  0020               	movlb	0	; select bank0
  5417  0261  1BA6               	btfsc	pad@p+1,7
  5418  0262  2A68               	goto	l1726
  5419  0263  0826               	movf	pad@p+1,w
  5420  0264  00AB               	movwf	pad@w+1
  5421  0265  0825               	movf	pad@p,w
  5422  0266  00AA               	movwf	pad@w
  5423  0267  2A6A               	goto	l450
  5424  0268                     l1726:	
  5425  0268  01AA               	clrf	pad@w
  5426  0269  01AB               	clrf	pad@w+1
  5427  026A                     l450:	
  5428                           
  5429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5430  026A  01A8               	clrf	pad@i
  5431  026B  01A9               	clrf	pad@i+1
  5432  026C                     l1732:	
  5433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5434                           
  5435                           
  5436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5437  026C  0829               	movf	pad@i+1,w
  5438  026D  3A80               	xorlw	128
  5439  026E  00A7               	movwf	??_pad
  5440  026F  082B               	movf	pad@w+1,w
  5441  0270  3A80               	xorlw	128
  5442  0271  0227               	subwf	??_pad,w
  5443  0272  1D03               	skipz
  5444  0273  2A76               	goto	u905
  5445  0274  082A               	movf	pad@w,w
  5446  0275  0228               	subwf	pad@i,w
  5447  0276                     u905:	
  5448  0276  1803               	btfsc	3,0
  5449  0277  2A8A               	goto	l453
  5450                           
  5451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5452  0278  3020               	movlw	32
  5453  0279  00F2               	movwf	fputc@c
  5454  027A  3000               	movlw	0
  5455  027B  00F3               	movwf	fputc@c+1
  5456  027C  0020               	movlb	0	; select bank0
  5457  027D  082C               	movf	pad@fp,w
  5458  027E  00A7               	movwf	??_pad
  5459  027F  0827               	movf	??_pad,w
  5460  0280  00F4               	movwf	fputc@fp
  5461  0281  3182  221D  3182   	fcall	_fputc
  5462                           
  5463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5464  0284  3001               	movlw	1
  5465  0285  0020               	movlb	0	; select bank0
  5466  0286  07A8               	addwf	pad@i,f
  5467  0287  3000               	movlw	0
  5468  0288  3DA9               	addwfc	pad@i+1,f
  5469  0289  2A6C               	goto	l1732
  5470  028A                     l453:	
  5471                           
  5472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5473  028A  0021               	movlb	1	; select bank1
  5474  028B  182A               	btfsc	_flags^(0+128),0
  5475  028C  2A96               	goto	l454
  5476                           
  5477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5478  028D  0020               	movlb	0	; select bank0
  5479  028E  082C               	movf	pad@fp,w
  5480  028F  00A7               	movwf	??_pad
  5481  0290  0827               	movf	??_pad,w
  5482  0291  00FA               	movwf	fputs@fp
  5483  0292  0824               	movf	pad@buf,w
  5484  0293  3181  2196  3182   	fcall	_fputs
  5485  0296                     l454:	
  5486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 92:     }
  5487                           
  5488                           
  5489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5490  0296  0020               	movlb	0	; select bank0
  5491  0297  0824               	movf	pad@buf,w
  5492  0298  3181  2109         	fcall	_strlen
  5493  029A  0020               	movlb	0	; select bank0
  5494  029B  082A               	movf	pad@w,w
  5495  029C  0770               	addwf	?_strlen,w
  5496  029D  00A4               	movwf	?_pad
  5497  029E  082B               	movf	pad@w+1,w
  5498  029F  3D71               	addwfc	?_strlen+1,w
  5499  02A0  00A5               	movwf	?_pad+1
  5500  02A1  0008               	return
  5501  02A2                     __end_of_pad:	
  5502                           
  5503                           	psect	text11
  5504  0109                     __ptext11:	
  5505 ;; *************** function _strlen *****************
  5506 ;; Defined at:
  5507 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;  s               1    wreg     PTR const unsigned char 
  5510 ;;		 -> dbuf(32), 
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;  s               1    4[COMMON] PTR const unsigned char 
  5513 ;;		 -> dbuf(32), 
  5514 ;;  a               1    3[COMMON] PTR const unsigned char 
  5515 ;;		 -> dbuf(32), 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  2    0[COMMON] unsigned int 
  5518 ;; Registers used:
  5519 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5529 ;;Total ram usage:        5 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_pad
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           
  5539                           ;psect for function _strlen
  5540  0109                     _strlen:	
  5541                           
  5542                           ;incstack = 0
  5543                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5544                           ;strlen@s stored from wreg
  5545  0109  00F4               	movwf	strlen@s
  5546  010A  0874               	movf	strlen@s,w
  5547  010B  00F2               	movwf	??_strlen
  5548  010C  0872               	movf	??_strlen,w
  5549  010D  00F3               	movwf	strlen@a
  5550  010E                     l1712:	
  5551  010E  0874               	movf	strlen@s,w
  5552  010F  0086               	movwf	6
  5553  0110  0187               	clrf	7
  5554  0111  0801               	movf	1,w
  5555  0112  1903               	btfsc	3,2
  5556  0113  2919               	goto	l1714
  5557  0114  3001               	movlw	1
  5558  0115  00F2               	movwf	??_strlen
  5559  0116  0872               	movf	??_strlen,w
  5560  0117  07F4               	addwf	strlen@s,f
  5561  0118  290E               	goto	l1712
  5562  0119                     l1714:	
  5563  0119  0873               	movf	strlen@a,w
  5564  011A  0274               	subwf	strlen@s,w
  5565  011B  00F0               	movwf	?_strlen
  5566  011C  01F1               	clrf	?_strlen+1
  5567  011D  1BF0               	btfsc	?_strlen,7
  5568  011E  03F1               	decf	?_strlen+1,f
  5569  011F  0008               	return
  5570  0120                     __end_of_strlen:	
  5571                           
  5572                           	psect	text12
  5573  0196                     __ptext12:	
  5574 ;; *************** function _fputs *****************
  5575 ;; Defined at:
  5576 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  s               1    wreg     PTR const unsigned char 
  5579 ;;		 -> dbuf(32), 
  5580 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  5581 ;;		 -> NULL(0), 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  5584 ;;		 -> dbuf(32), 
  5585 ;;  i               2    1[BANK0 ] int 
  5586 ;;  c               1    0[BANK0 ] unsigned char 
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  2   10[COMMON] int 
  5589 ;; Registers used:
  5590 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5596 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5599 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5600 ;;Total ram usage:        8 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; Hardware stack levels required when called:    3
  5603 ;; This function calls:
  5604 ;;		_fputc
  5605 ;; This function is called by:
  5606 ;;		_pad
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           
  5611                           ;psect for function _fputs
  5612  0196                     _fputs:	
  5613                           
  5614                           ;incstack = 0
  5615                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5616                           ;fputs@s stored from wreg
  5617  0196  0020               	movlb	0	; select bank0
  5618  0197  00A3               	movwf	fputs@s
  5619  0198  01A1               	clrf	fputs@i
  5620  0199  01A2               	clrf	fputs@i+1
  5621  019A                     l1706:	
  5622  019A  0821               	movf	fputs@i,w
  5623  019B  0723               	addwf	fputs@s,w
  5624  019C  00FB               	movwf	??_fputs
  5625  019D  087B               	movf	??_fputs,w
  5626  019E  0086               	movwf	6
  5627  019F  0187               	clrf	7
  5628  01A0  0801               	movf	1,w
  5629  01A1  00FC               	movwf	??_fputs+1
  5630  01A2  087C               	movf	??_fputs+1,w
  5631  01A3  00A0               	movwf	fputs@c
  5632  01A4  0820               	movf	fputs@c,w
  5633  01A5  1903               	btfsc	3,2
  5634  01A6  0008               	return
  5635  01A7  0820               	movf	fputs@c,w
  5636  01A8  00FB               	movwf	??_fputs
  5637  01A9  01FC               	clrf	??_fputs+1
  5638  01AA  087B               	movf	??_fputs,w
  5639  01AB  00F2               	movwf	fputc@c
  5640  01AC  087C               	movf	??_fputs+1,w
  5641  01AD  00F3               	movwf	fputc@c+1
  5642  01AE  087A               	movf	fputs@fp,w
  5643  01AF  00FD               	movwf	??_fputs+2
  5644  01B0  087D               	movf	??_fputs+2,w
  5645  01B1  00F4               	movwf	fputc@fp
  5646  01B2  3182  221D  3181   	fcall	_fputc
  5647  01B5  3001               	movlw	1
  5648  01B6  0020               	movlb	0	; select bank0
  5649  01B7  07A1               	addwf	fputs@i,f
  5650  01B8  3000               	movlw	0
  5651  01B9  3DA2               	addwfc	fputs@i+1,f
  5652  01BA  299A               	goto	l1706
  5653  01BB                     __end_of_fputs:	
  5654                           
  5655                           	psect	text13
  5656  021D                     __ptext13:	
  5657 ;; *************** function _fputc *****************
  5658 ;; Defined at:
  5659 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  c               2    2[COMMON] int 
  5662 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  5663 ;;		 -> NULL(0), 
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;		None
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  2    2[COMMON] int 
  5668 ;; Registers used:
  5669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5675 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;Total ram usage:        8 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; Hardware stack levels required when called:    2
  5682 ;; This function calls:
  5683 ;;		_putch
  5684 ;; This function is called by:
  5685 ;;		_pad
  5686 ;;		_vfpfcnvrt
  5687 ;;		_fputs
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           
  5692                           ;psect for function _fputc
  5693  021D                     _fputc:	
  5694                           
  5695                           ;incstack = 0
  5696                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5697  021D  0874               	movf	fputc@fp,w
  5698  021E  1D03               	btfss	3,2
  5699  021F  0874               	movf	fputc@fp,w
  5700  0220  1D03               	btfss	3,2
  5701  0221  2A26               	goto	l1692
  5702  0222  0872               	movf	fputc@c,w
  5703  0223  3180  202A         	fcall	_putch
  5704  0225  0008               	return
  5705  0226                     l1692:	
  5706  0226  0874               	movf	fputc@fp,w
  5707  0227  3E03               	addlw	3
  5708  0228  0086               	movwf	6
  5709  0229  0187               	clrf	7
  5710  022A  0016               	moviw fsr1++
  5711  022B  0401               	iorwf	1,w
  5712  022C  1903               	btfsc	3,2
  5713  022D  2A49               	goto	l1696
  5714  022E  0874               	movf	fputc@fp,w
  5715  022F  3E03               	addlw	3
  5716  0230  0086               	movwf	6
  5717  0231  0187               	clrf	7
  5718  0232  3F40               	moviw [0]fsr1
  5719  0233  00F5               	movwf	??_fputc
  5720  0234  3F41               	moviw [1]fsr1
  5721  0235  00F6               	movwf	??_fputc+1
  5722  0236  0A74               	incf	fputc@fp,w
  5723  0237  0086               	movwf	6
  5724  0238  0187               	clrf	7
  5725  0239  3F40               	moviw [0]fsr1
  5726  023A  00F7               	movwf	??_fputc+2
  5727  023B  3F41               	moviw [1]fsr1
  5728  023C  00F8               	movwf	??_fputc+3
  5729  023D  0878               	movf	??_fputc+3,w
  5730  023E  3A80               	xorlw	128
  5731  023F  00F9               	movwf	??_fputc+4
  5732  0240  0876               	movf	??_fputc+1,w
  5733  0241  3A80               	xorlw	128
  5734  0242  0279               	subwf	??_fputc+4,w
  5735  0243  1D03               	skipz
  5736  0244  2A47               	goto	u855
  5737  0245  0875               	movf	??_fputc,w
  5738  0246  0277               	subwf	??_fputc+2,w
  5739  0247                     u855:	
  5740  0247  1803               	skipnc
  5741  0248  0008               	return
  5742  0249                     l1696:	
  5743  0249  0A74               	incf	fputc@fp,w
  5744  024A  0086               	movwf	6
  5745  024B  0187               	clrf	7
  5746  024C  3001               	movlw	1
  5747  024D  0781               	addwf	1,f
  5748  024E  3141               	addfsr 1,1
  5749  024F  1803               	skipnc
  5750  0250  0A81               	incf	1,f
  5751  0251  0008               	return
  5752  0252                     __end_of_fputc:	
  5753                           
  5754                           	psect	text14
  5755  002A                     __ptext14:	
  5756 ;; *************** function _putch *****************
  5757 ;; Defined at:
  5758 ;;		line 146 in file "mcc_generated_files/eusart.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  txData          1    wreg     unsigned char 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  txData          1    1[COMMON] unsigned char 
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      void 
  5765 ;; Registers used:
  5766 ;;		wreg, status,2, status,0, pclath, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;Total ram usage:        1 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:    1
  5779 ;; This function calls:
  5780 ;;		_EUSART_Write
  5781 ;; This function is called by:
  5782 ;;		_fputc
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           
  5787                           ;psect for function _putch
  5788  002A                     _putch:	
  5789                           
  5790                           ;incstack = 0
  5791                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  5792                           ;putch@txData stored from wreg
  5793  002A  00F1               	movwf	putch@txData
  5794                           
  5795                           ;mcc_generated_files/eusart.c: 146: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 147: {;mcc_generated_files/eusart.c: 148:     EUSART_Write(txData);
  5796  002B  0871               	movf	putch@txData,w
  5797  002C  3180  2059         	fcall	_EUSART_Write
  5798  002E  0008               	return
  5799  002F                     __end_of_putch:	
  5800                           
  5801                           	psect	text15
  5802  0059                     __ptext15:	
  5803 ;; *************** function _EUSART_Write *****************
  5804 ;; Defined at:
  5805 ;;		line 132 in file "mcc_generated_files/eusart.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  txData          1    wreg     unsigned char 
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  txData          1    0[COMMON] unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5823 ;;Total ram usage:        1 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_putch
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           
  5833                           ;psect for function _EUSART_Write
  5834  0059                     _EUSART_Write:	
  5835                           
  5836                           ;incstack = 0
  5837                           ; Regs used in _EUSART_Write: [wreg]
  5838                           ;EUSART_Write@txData stored from wreg
  5839  0059  00F0               	movwf	EUSART_Write@txData
  5840  005A                     l123:	
  5841                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  5842                           
  5843                           
  5844                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  5845  005A  0020               	movlb	0	; select bank0
  5846  005B  1E10               	btfss	16,4	;volatile
  5847  005C  285A               	goto	l123
  5848                           
  5849                           ;mcc_generated_files/eusart.c: 138:     TX1REG = txData;
  5850  005D  0870               	movf	EUSART_Write@txData,w
  5851  005E  0023               	movlb	3	; select bank3
  5852  005F  009A               	movwf	26	;volatile
  5853  0060  0008               	return
  5854  0061                     __end_of_EUSART_Write:	
  5855                           
  5856                           	psect	text16
  5857  00F2                     __ptext16:	
  5858 ;; *************** function _abs *****************
  5859 ;; Defined at:
  5860 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  a               2    3[COMMON] int 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;		None
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  2    3[COMMON] int 
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5874 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;Total ram usage:        4 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_dtoa
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           
  5888                           ;psect for function _abs
  5889  00F2                     _abs:	
  5890                           
  5891                           ;incstack = 0
  5892                           ; Regs used in _abs: [wreg+status,2+status,0]
  5893  00F2  0874               	movf	abs@a+1,w
  5894  00F3  3A80               	xorlw	128
  5895  00F4  00F5               	movwf	??_abs
  5896  00F5  3080               	movlw	128
  5897  00F6  0275               	subwf	??_abs,w
  5898  00F7  1D03               	skipz
  5899  00F8  28FB               	goto	u925
  5900  00F9  3001               	movlw	1
  5901  00FA  0273               	subwf	abs@a,w
  5902  00FB                     u925:	
  5903  00FB  1803               	skipnc
  5904  00FC  0008               	return
  5905  00FD  0973               	comf	abs@a,w
  5906  00FE  00F5               	movwf	??_abs
  5907  00FF  0974               	comf	abs@a+1,w
  5908  0100  00F6               	movwf	??_abs+1
  5909  0101  0AF5               	incf	??_abs,f
  5910  0102  1903               	skipnz
  5911  0103  0AF6               	incf	??_abs+1,f
  5912  0104  0875               	movf	??_abs,w
  5913  0105  00F3               	movwf	?_abs
  5914  0106  0876               	movf	??_abs+1,w
  5915  0107  00F4               	movwf	?_abs+1
  5916  0108  0008               	return
  5917  0109                     __end_of_abs:	
  5918                           
  5919                           	psect	text17
  5920  04D8                     __ptext17:	
  5921 ;; *************** function ___aomod *****************
  5922 ;; Defined at:
  5923 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  divisor         8    0[BANK0 ] long long 
  5926 ;;  dividend        8    8[BANK0 ] long long 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  sign            1    2[COMMON] unsigned char 
  5929 ;;  counter         1    1[COMMON] unsigned char 
  5930 ;; Return value:  Size  Location     Type
  5931 ;;                  8    0[BANK0 ] long long 
  5932 ;; Registers used:
  5933 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5939 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5940 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5942 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5943 ;;Total ram usage:       19 bytes
  5944 ;; Hardware stack levels used:    1
  5945 ;; This function calls:
  5946 ;;		Nothing
  5947 ;; This function is called by:
  5948 ;;		_dtoa
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           
  5953                           ;psect for function ___aomod
  5954  04D8                     ___aomod:	
  5955                           
  5956                           ;incstack = 0
  5957                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  5958  04D8  01F2               	clrf	___aomod@sign
  5959  04D9  3028               	movlw	low ___aomod@dividend
  5960  04DA  0086               	movwf	6
  5961  04DB  3000               	movlw	high ___aomod@dividend
  5962  04DC  0087               	movwf	7
  5963  04DD  3F47               	moviw [7]fsr1
  5964  04DE  00F0               	movwf	??___aomod
  5965  04DF  1FF0               	btfss	??___aomod,7
  5966  04E0  2D02               	goto	l1786
  5967  04E1  0020               	movlb	0	; select bank0
  5968  04E2  09A8               	comf	___aomod@dividend,f
  5969  04E3  09A9               	comf	___aomod@dividend+1,f
  5970  04E4  09AA               	comf	___aomod@dividend+2,f
  5971  04E5  09AB               	comf	___aomod@dividend+3,f
  5972  04E6  09AC               	comf	___aomod@dividend+4,f
  5973  04E7  09AD               	comf	___aomod@dividend+5,f
  5974  04E8  09AE               	comf	___aomod@dividend+6,f
  5975  04E9  09AF               	comf	___aomod@dividend+7,f
  5976  04EA  0AA8               	incf	___aomod@dividend,f
  5977  04EB  1D03               	skipz
  5978  04EC  2D00               	goto	u105lld
  5979  04ED  0AA9               	incf	___aomod@dividend+1,f
  5980  04EE  1D03               	skipz
  5981  04EF  2D00               	goto	u105lld
  5982  04F0  0AAA               	incf	___aomod@dividend+2,f
  5983  04F1  1D03               	skipz
  5984  04F2  2D00               	goto	u105lld
  5985  04F3  0AAB               	incf	___aomod@dividend+3,f
  5986  04F4  1D03               	skipz
  5987  04F5  2D00               	goto	u105lld
  5988  04F6  0AAC               	incf	___aomod@dividend+4,f
  5989  04F7  1D03               	skipz
  5990  04F8  2D00               	goto	u105lld
  5991  04F9  0AAD               	incf	___aomod@dividend+5,f
  5992  04FA  1D03               	skipz
  5993  04FB  2D00               	goto	u105lld
  5994  04FC  0AAE               	incf	___aomod@dividend+6,f
  5995  04FD  1D03               	skipz
  5996  04FE  2D00               	goto	u105lld
  5997  04FF  0AAF               	incf	___aomod@dividend+7,f
  5998  0500                     u105lld:	
  5999  0500  01F2               	clrf	___aomod@sign
  6000  0501  0AF2               	incf	___aomod@sign,f
  6001  0502                     l1786:	
  6002  0502  3020               	movlw	low ___aomod@divisor
  6003  0503  0086               	movwf	6
  6004  0504  3000               	movlw	high ___aomod@divisor
  6005  0505  0087               	movwf	7
  6006  0506  3F47               	moviw [7]fsr1
  6007  0507  00F0               	movwf	??___aomod
  6008  0508  1FF0               	btfss	??___aomod,7
  6009  0509  2D29               	goto	l1790
  6010  050A  0020               	movlb	0	; select bank0
  6011  050B  09A0               	comf	___aomod@divisor,f
  6012  050C  09A1               	comf	___aomod@divisor+1,f
  6013  050D  09A2               	comf	___aomod@divisor+2,f
  6014  050E  09A3               	comf	___aomod@divisor+3,f
  6015  050F  09A4               	comf	___aomod@divisor+4,f
  6016  0510  09A5               	comf	___aomod@divisor+5,f
  6017  0511  09A6               	comf	___aomod@divisor+6,f
  6018  0512  09A7               	comf	___aomod@divisor+7,f
  6019  0513  0AA0               	incf	___aomod@divisor,f
  6020  0514  1D03               	skipz
  6021  0515  2D29               	goto	l1790
  6022  0516  0AA1               	incf	___aomod@divisor+1,f
  6023  0517  1D03               	skipz
  6024  0518  2D29               	goto	l1790
  6025  0519  0AA2               	incf	___aomod@divisor+2,f
  6026  051A  1D03               	skipz
  6027  051B  2D29               	goto	l1790
  6028  051C  0AA3               	incf	___aomod@divisor+3,f
  6029  051D  1D03               	skipz
  6030  051E  2D29               	goto	l1790
  6031  051F  0AA4               	incf	___aomod@divisor+4,f
  6032  0520  1D03               	skipz
  6033  0521  2D29               	goto	l1790
  6034  0522  0AA5               	incf	___aomod@divisor+5,f
  6035  0523  1D03               	skipz
  6036  0524  2D29               	goto	l1790
  6037  0525  0AA6               	incf	___aomod@divisor+6,f
  6038  0526  1D03               	skipz
  6039  0527  2D29               	goto	l1790
  6040  0528  0AA7               	incf	___aomod@divisor+7,f
  6041  0529                     l1790:	
  6042  0529  0020               	movlb	0	; select bank0
  6043  052A  0820               	movf	___aomod@divisor,w
  6044  052B  0421               	iorwf	___aomod@divisor+1,w
  6045  052C  0422               	iorwf	___aomod@divisor+2,w
  6046  052D  0423               	iorwf	___aomod@divisor+3,w
  6047  052E  0424               	iorwf	___aomod@divisor+4,w
  6048  052F  0425               	iorwf	___aomod@divisor+5,w
  6049  0530  0426               	iorwf	___aomod@divisor+6,w
  6050  0531  0427               	iorwf	___aomod@divisor+7,w
  6051  0532  1903               	skipnz
  6052  0533  2D81               	goto	l1806
  6053  0534  01F1               	clrf	___aomod@counter
  6054  0535  0AF1               	incf	___aomod@counter,f
  6055  0536                     l1798:	
  6056  0536  1BA7               	btfsc	___aomod@divisor+7,7
  6057  0537  2D45               	goto	l1800
  6058  0538  35A0               	lslf	___aomod@divisor,f
  6059  0539  0DA1               	rlf	___aomod@divisor+1,f
  6060  053A  0DA2               	rlf	___aomod@divisor+2,f
  6061  053B  0DA3               	rlf	___aomod@divisor+3,f
  6062  053C  0DA4               	rlf	___aomod@divisor+4,f
  6063  053D  0DA5               	rlf	___aomod@divisor+5,f
  6064  053E  0DA6               	rlf	___aomod@divisor+6,f
  6065  053F  0DA7               	rlf	___aomod@divisor+7,f
  6066  0540  3001               	movlw	1
  6067  0541  00F0               	movwf	??___aomod
  6068  0542  0870               	movf	??___aomod,w
  6069  0543  07F1               	addwf	___aomod@counter,f
  6070  0544  2D36               	goto	l1798
  6071  0545                     l1800:	
  6072  0545  0827               	movf	___aomod@divisor+7,w
  6073  0546  022F               	subwf	___aomod@dividend+7,w
  6074  0547  1D03               	skipz
  6075  0548  2D63               	goto	u1105
  6076  0549  0826               	movf	___aomod@divisor+6,w
  6077  054A  022E               	subwf	___aomod@dividend+6,w
  6078  054B  1D03               	skipz
  6079  054C  2D63               	goto	u1105
  6080  054D  0825               	movf	___aomod@divisor+5,w
  6081  054E  022D               	subwf	___aomod@dividend+5,w
  6082  054F  1D03               	skipz
  6083  0550  2D63               	goto	u1105
  6084  0551  0824               	movf	___aomod@divisor+4,w
  6085  0552  022C               	subwf	___aomod@dividend+4,w
  6086  0553  1D03               	skipz
  6087  0554  2D63               	goto	u1105
  6088  0555  0823               	movf	___aomod@divisor+3,w
  6089  0556  022B               	subwf	___aomod@dividend+3,w
  6090  0557  1D03               	skipz
  6091  0558  2D63               	goto	u1105
  6092  0559  0822               	movf	___aomod@divisor+2,w
  6093  055A  022A               	subwf	___aomod@dividend+2,w
  6094  055B  1D03               	skipz
  6095  055C  2D63               	goto	u1105
  6096  055D  0821               	movf	___aomod@divisor+1,w
  6097  055E  0229               	subwf	___aomod@dividend+1,w
  6098  055F  1D03               	skipz
  6099  0560  2D63               	goto	u1105
  6100  0561  0820               	movf	___aomod@divisor,w
  6101  0562  0228               	subwf	___aomod@dividend,w
  6102  0563                     u1105:	
  6103  0563  1C03               	skipc
  6104  0564  2D75               	goto	l1804
  6105  0565  0820               	movf	___aomod@divisor,w
  6106  0566  02A8               	subwf	___aomod@dividend,f
  6107  0567  0821               	movf	___aomod@divisor+1,w
  6108  0568  3BA9               	subwfb	___aomod@dividend+1,f
  6109  0569  0822               	movf	___aomod@divisor+2,w
  6110  056A  3BAA               	subwfb	___aomod@dividend+2,f
  6111  056B  0823               	movf	___aomod@divisor+3,w
  6112  056C  3BAB               	subwfb	___aomod@dividend+3,f
  6113  056D  0824               	movf	___aomod@divisor+4,w
  6114  056E  3BAC               	subwfb	___aomod@dividend+4,f
  6115  056F  0825               	movf	___aomod@divisor+5,w
  6116  0570  3BAD               	subwfb	___aomod@dividend+5,f
  6117  0571  0826               	movf	___aomod@divisor+6,w
  6118  0572  3BAE               	subwfb	___aomod@dividend+6,f
  6119  0573  0827               	movf	___aomod@divisor+7,w
  6120  0574  3BAF               	subwfb	___aomod@dividend+7,f
  6121  0575                     l1804:	
  6122  0575  36A7               	lsrf	___aomod@divisor+7,f
  6123  0576  0CA6               	rrf	___aomod@divisor+6,f
  6124  0577  0CA5               	rrf	___aomod@divisor+5,f
  6125  0578  0CA4               	rrf	___aomod@divisor+4,f
  6126  0579  0CA3               	rrf	___aomod@divisor+3,f
  6127  057A  0CA2               	rrf	___aomod@divisor+2,f
  6128  057B  0CA1               	rrf	___aomod@divisor+1,f
  6129  057C  0CA0               	rrf	___aomod@divisor,f
  6130  057D  3001               	movlw	1
  6131  057E  02F1               	subwf	___aomod@counter,f
  6132  057F  1D03               	btfss	3,2
  6133  0580  2D45               	goto	l1800
  6134  0581                     l1806:	
  6135  0581  0872               	movf	___aomod@sign,w
  6136  0582  1903               	btfsc	3,2
  6137  0583  2DA2               	goto	l612
  6138  0584  09A8               	comf	___aomod@dividend,f
  6139  0585  09A9               	comf	___aomod@dividend+1,f
  6140  0586  09AA               	comf	___aomod@dividend+2,f
  6141  0587  09AB               	comf	___aomod@dividend+3,f
  6142  0588  09AC               	comf	___aomod@dividend+4,f
  6143  0589  09AD               	comf	___aomod@dividend+5,f
  6144  058A  09AE               	comf	___aomod@dividend+6,f
  6145  058B  09AF               	comf	___aomod@dividend+7,f
  6146  058C  0AA8               	incf	___aomod@dividend,f
  6147  058D  1D03               	skipz
  6148  058E  2DA2               	goto	l612
  6149  058F  0AA9               	incf	___aomod@dividend+1,f
  6150  0590  1D03               	skipz
  6151  0591  2DA2               	goto	l612
  6152  0592  0AAA               	incf	___aomod@dividend+2,f
  6153  0593  1D03               	skipz
  6154  0594  2DA2               	goto	l612
  6155  0595  0AAB               	incf	___aomod@dividend+3,f
  6156  0596  1D03               	skipz
  6157  0597  2DA2               	goto	l612
  6158  0598  0AAC               	incf	___aomod@dividend+4,f
  6159  0599  1D03               	skipz
  6160  059A  2DA2               	goto	l612
  6161  059B  0AAD               	incf	___aomod@dividend+5,f
  6162  059C  1D03               	skipz
  6163  059D  2DA2               	goto	l612
  6164  059E  0AAE               	incf	___aomod@dividend+6,f
  6165  059F  1D03               	skipz
  6166  05A0  2DA2               	goto	l612
  6167  05A1  0AAF               	incf	___aomod@dividend+7,f
  6168  05A2                     l612:	
  6169  05A2  0020               	movlb	0	; select bank0
  6170  05A3  0828               	movf	___aomod@dividend,w
  6171  05A4  00A0               	movwf	?___aomod
  6172  05A5  0829               	movf	___aomod@dividend+1,w
  6173  05A6  00A1               	movwf	?___aomod+1
  6174  05A7  082A               	movf	___aomod@dividend+2,w
  6175  05A8  00A2               	movwf	?___aomod+2
  6176  05A9  082B               	movf	___aomod@dividend+3,w
  6177  05AA  00A3               	movwf	?___aomod+3
  6178  05AB  082C               	movf	___aomod@dividend+4,w
  6179  05AC  00A4               	movwf	?___aomod+4
  6180  05AD  082D               	movf	___aomod@dividend+5,w
  6181  05AE  00A5               	movwf	?___aomod+5
  6182  05AF  082E               	movf	___aomod@dividend+6,w
  6183  05B0  00A6               	movwf	?___aomod+6
  6184  05B1  082F               	movf	___aomod@dividend+7,w
  6185  05B2  00A7               	movwf	?___aomod+7
  6186  05B3  0008               	return
  6187  05B4                     __end_of___aomod:	
  6188                           
  6189                           	psect	text18
  6190  05B4                     __ptext18:	
  6191 ;; *************** function ___aodiv *****************
  6192 ;; Defined at:
  6193 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;  divisor         8    0[BANK0 ] long long 
  6196 ;;  dividend        8    8[BANK0 ] long long 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  quotient        8    3[COMMON] long long 
  6199 ;;  sign            1    2[COMMON] unsigned char 
  6200 ;;  counter         1    1[COMMON] unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  8    0[BANK0 ] long long 
  6203 ;; Registers used:
  6204 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6210 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6211 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6212 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;Total ram usage:       27 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		_dtoa
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           
  6224                           ;psect for function ___aodiv
  6225  05B4                     ___aodiv:	
  6226                           
  6227                           ;incstack = 0
  6228                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6229  05B4  01F2               	clrf	___aodiv@sign
  6230  05B5  3020               	movlw	low ___aodiv@divisor
  6231  05B6  0086               	movwf	6
  6232  05B7  3000               	movlw	high ___aodiv@divisor
  6233  05B8  0087               	movwf	7
  6234  05B9  3F47               	moviw [7]fsr1
  6235  05BA  00F0               	movwf	??___aodiv
  6236  05BB  1FF0               	btfss	??___aodiv,7
  6237  05BC  2DDE               	goto	l1748
  6238  05BD  0020               	movlb	0	; select bank0
  6239  05BE  09A0               	comf	___aodiv@divisor,f
  6240  05BF  09A1               	comf	___aodiv@divisor+1,f
  6241  05C0  09A2               	comf	___aodiv@divisor+2,f
  6242  05C1  09A3               	comf	___aodiv@divisor+3,f
  6243  05C2  09A4               	comf	___aodiv@divisor+4,f
  6244  05C3  09A5               	comf	___aodiv@divisor+5,f
  6245  05C4  09A6               	comf	___aodiv@divisor+6,f
  6246  05C5  09A7               	comf	___aodiv@divisor+7,f
  6247  05C6  0AA0               	incf	___aodiv@divisor,f
  6248  05C7  1D03               	skipz
  6249  05C8  2DDC               	goto	u94lld
  6250  05C9  0AA1               	incf	___aodiv@divisor+1,f
  6251  05CA  1D03               	skipz
  6252  05CB  2DDC               	goto	u94lld
  6253  05CC  0AA2               	incf	___aodiv@divisor+2,f
  6254  05CD  1D03               	skipz
  6255  05CE  2DDC               	goto	u94lld
  6256  05CF  0AA3               	incf	___aodiv@divisor+3,f
  6257  05D0  1D03               	skipz
  6258  05D1  2DDC               	goto	u94lld
  6259  05D2  0AA4               	incf	___aodiv@divisor+4,f
  6260  05D3  1D03               	skipz
  6261  05D4  2DDC               	goto	u94lld
  6262  05D5  0AA5               	incf	___aodiv@divisor+5,f
  6263  05D6  1D03               	skipz
  6264  05D7  2DDC               	goto	u94lld
  6265  05D8  0AA6               	incf	___aodiv@divisor+6,f
  6266  05D9  1D03               	skipz
  6267  05DA  2DDC               	goto	u94lld
  6268  05DB  0AA7               	incf	___aodiv@divisor+7,f
  6269  05DC                     u94lld:	
  6270  05DC  01F2               	clrf	___aodiv@sign
  6271  05DD  0AF2               	incf	___aodiv@sign,f
  6272  05DE                     l1748:	
  6273  05DE  3028               	movlw	low ___aodiv@dividend
  6274  05DF  0086               	movwf	6
  6275  05E0  3000               	movlw	high ___aodiv@dividend
  6276  05E1  0087               	movwf	7
  6277  05E2  3F47               	moviw [7]fsr1
  6278  05E3  00F0               	movwf	??___aodiv
  6279  05E4  1FF0               	btfss	??___aodiv,7
  6280  05E5  2E09               	goto	l1754
  6281  05E6  0020               	movlb	0	; select bank0
  6282  05E7  09A8               	comf	___aodiv@dividend,f
  6283  05E8  09A9               	comf	___aodiv@dividend+1,f
  6284  05E9  09AA               	comf	___aodiv@dividend+2,f
  6285  05EA  09AB               	comf	___aodiv@dividend+3,f
  6286  05EB  09AC               	comf	___aodiv@dividend+4,f
  6287  05EC  09AD               	comf	___aodiv@dividend+5,f
  6288  05ED  09AE               	comf	___aodiv@dividend+6,f
  6289  05EE  09AF               	comf	___aodiv@dividend+7,f
  6290  05EF  0AA8               	incf	___aodiv@dividend,f
  6291  05F0  1D03               	skipz
  6292  05F1  2E05               	goto	l1752
  6293  05F2  0AA9               	incf	___aodiv@dividend+1,f
  6294  05F3  1D03               	skipz
  6295  05F4  2E05               	goto	l1752
  6296  05F5  0AAA               	incf	___aodiv@dividend+2,f
  6297  05F6  1D03               	skipz
  6298  05F7  2E05               	goto	l1752
  6299  05F8  0AAB               	incf	___aodiv@dividend+3,f
  6300  05F9  1D03               	skipz
  6301  05FA  2E05               	goto	l1752
  6302  05FB  0AAC               	incf	___aodiv@dividend+4,f
  6303  05FC  1D03               	skipz
  6304  05FD  2E05               	goto	l1752
  6305  05FE  0AAD               	incf	___aodiv@dividend+5,f
  6306  05FF  1D03               	skipz
  6307  0600  2E05               	goto	l1752
  6308  0601  0AAE               	incf	___aodiv@dividend+6,f
  6309  0602  1D03               	skipz
  6310  0603  2E05               	goto	l1752
  6311  0604  0AAF               	incf	___aodiv@dividend+7,f
  6312  0605                     l1752:	
  6313  0605  3001               	movlw	1
  6314  0606  00F0               	movwf	??___aodiv
  6315  0607  0870               	movf	??___aodiv,w
  6316  0608  06F2               	xorwf	___aodiv@sign,f
  6317  0609                     l1754:	
  6318  0609  3073               	movlw	low ___aodiv@quotient
  6319  060A  0086               	movwf	6
  6320  060B  3000               	movlw	high ___aodiv@quotient
  6321  060C  0087               	movwf	7
  6322  060D  3008               	movlw	8
  6323  060E  00F0               	movwf	??___aodiv
  6324  060F  3000               	movlw	0
  6325  0610                     u970:	
  6326  0610  001E               	movwi fsr1++
  6327  0611  0BF0               	decfsz	??___aodiv,f
  6328  0612  2E10               	goto	u970
  6329  0613  0020               	movlb	0	; select bank0
  6330  0614  0820               	movf	___aodiv@divisor,w
  6331  0615  0421               	iorwf	___aodiv@divisor+1,w
  6332  0616  0422               	iorwf	___aodiv@divisor+2,w
  6333  0617  0423               	iorwf	___aodiv@divisor+3,w
  6334  0618  0424               	iorwf	___aodiv@divisor+4,w
  6335  0619  0425               	iorwf	___aodiv@divisor+5,w
  6336  061A  0426               	iorwf	___aodiv@divisor+6,w
  6337  061B  0427               	iorwf	___aodiv@divisor+7,w
  6338  061C  1903               	skipnz
  6339  061D  2E74               	goto	l1776
  6340  061E  01F1               	clrf	___aodiv@counter
  6341  061F  0AF1               	incf	___aodiv@counter,f
  6342  0620                     l1764:	
  6343  0620  1BA7               	btfsc	___aodiv@divisor+7,7
  6344  0621  2E2F               	goto	l1766
  6345  0622  35A0               	lslf	___aodiv@divisor,f
  6346  0623  0DA1               	rlf	___aodiv@divisor+1,f
  6347  0624  0DA2               	rlf	___aodiv@divisor+2,f
  6348  0625  0DA3               	rlf	___aodiv@divisor+3,f
  6349  0626  0DA4               	rlf	___aodiv@divisor+4,f
  6350  0627  0DA5               	rlf	___aodiv@divisor+5,f
  6351  0628  0DA6               	rlf	___aodiv@divisor+6,f
  6352  0629  0DA7               	rlf	___aodiv@divisor+7,f
  6353  062A  3001               	movlw	1
  6354  062B  00F0               	movwf	??___aodiv
  6355  062C  0870               	movf	??___aodiv,w
  6356  062D  07F1               	addwf	___aodiv@counter,f
  6357  062E  2E20               	goto	l1764
  6358  062F                     l1766:	
  6359  062F  35F3               	lslf	___aodiv@quotient,f
  6360  0630  0DF4               	rlf	___aodiv@quotient+1,f
  6361  0631  0DF5               	rlf	___aodiv@quotient+2,f
  6362  0632  0DF6               	rlf	___aodiv@quotient+3,f
  6363  0633  0DF7               	rlf	___aodiv@quotient+4,f
  6364  0634  0DF8               	rlf	___aodiv@quotient+5,f
  6365  0635  0DF9               	rlf	___aodiv@quotient+6,f
  6366  0636  0DFA               	rlf	___aodiv@quotient+7,f
  6367  0637  0827               	movf	___aodiv@divisor+7,w
  6368  0638  022F               	subwf	___aodiv@dividend+7,w
  6369  0639  1D03               	skipz
  6370  063A  2E55               	goto	u1005
  6371  063B  0826               	movf	___aodiv@divisor+6,w
  6372  063C  022E               	subwf	___aodiv@dividend+6,w
  6373  063D  1D03               	skipz
  6374  063E  2E55               	goto	u1005
  6375  063F  0825               	movf	___aodiv@divisor+5,w
  6376  0640  022D               	subwf	___aodiv@dividend+5,w
  6377  0641  1D03               	skipz
  6378  0642  2E55               	goto	u1005
  6379  0643  0824               	movf	___aodiv@divisor+4,w
  6380  0644  022C               	subwf	___aodiv@dividend+4,w
  6381  0645  1D03               	skipz
  6382  0646  2E55               	goto	u1005
  6383  0647  0823               	movf	___aodiv@divisor+3,w
  6384  0648  022B               	subwf	___aodiv@dividend+3,w
  6385  0649  1D03               	skipz
  6386  064A  2E55               	goto	u1005
  6387  064B  0822               	movf	___aodiv@divisor+2,w
  6388  064C  022A               	subwf	___aodiv@dividend+2,w
  6389  064D  1D03               	skipz
  6390  064E  2E55               	goto	u1005
  6391  064F  0821               	movf	___aodiv@divisor+1,w
  6392  0650  0229               	subwf	___aodiv@dividend+1,w
  6393  0651  1D03               	skipz
  6394  0652  2E55               	goto	u1005
  6395  0653  0820               	movf	___aodiv@divisor,w
  6396  0654  0228               	subwf	___aodiv@dividend,w
  6397  0655                     u1005:	
  6398  0655  1C03               	skipc
  6399  0656  2E68               	goto	l1774
  6400  0657  0820               	movf	___aodiv@divisor,w
  6401  0658  02A8               	subwf	___aodiv@dividend,f
  6402  0659  0821               	movf	___aodiv@divisor+1,w
  6403  065A  3BA9               	subwfb	___aodiv@dividend+1,f
  6404  065B  0822               	movf	___aodiv@divisor+2,w
  6405  065C  3BAA               	subwfb	___aodiv@dividend+2,f
  6406  065D  0823               	movf	___aodiv@divisor+3,w
  6407  065E  3BAB               	subwfb	___aodiv@dividend+3,f
  6408  065F  0824               	movf	___aodiv@divisor+4,w
  6409  0660  3BAC               	subwfb	___aodiv@dividend+4,f
  6410  0661  0825               	movf	___aodiv@divisor+5,w
  6411  0662  3BAD               	subwfb	___aodiv@dividend+5,f
  6412  0663  0826               	movf	___aodiv@divisor+6,w
  6413  0664  3BAE               	subwfb	___aodiv@dividend+6,f
  6414  0665  0827               	movf	___aodiv@divisor+7,w
  6415  0666  3BAF               	subwfb	___aodiv@dividend+7,f
  6416  0667  1473               	bsf	___aodiv@quotient,0
  6417  0668                     l1774:	
  6418  0668  36A7               	lsrf	___aodiv@divisor+7,f
  6419  0669  0CA6               	rrf	___aodiv@divisor+6,f
  6420  066A  0CA5               	rrf	___aodiv@divisor+5,f
  6421  066B  0CA4               	rrf	___aodiv@divisor+4,f
  6422  066C  0CA3               	rrf	___aodiv@divisor+3,f
  6423  066D  0CA2               	rrf	___aodiv@divisor+2,f
  6424  066E  0CA1               	rrf	___aodiv@divisor+1,f
  6425  066F  0CA0               	rrf	___aodiv@divisor,f
  6426  0670  3001               	movlw	1
  6427  0671  02F1               	subwf	___aodiv@counter,f
  6428  0672  1D03               	btfss	3,2
  6429  0673  2E2F               	goto	l1766
  6430  0674                     l1776:	
  6431  0674  0872               	movf	___aodiv@sign,w
  6432  0675  1903               	btfsc	3,2
  6433  0676  2E95               	goto	l599
  6434  0677  09F3               	comf	___aodiv@quotient,f
  6435  0678  09F4               	comf	___aodiv@quotient+1,f
  6436  0679  09F5               	comf	___aodiv@quotient+2,f
  6437  067A  09F6               	comf	___aodiv@quotient+3,f
  6438  067B  09F7               	comf	___aodiv@quotient+4,f
  6439  067C  09F8               	comf	___aodiv@quotient+5,f
  6440  067D  09F9               	comf	___aodiv@quotient+6,f
  6441  067E  09FA               	comf	___aodiv@quotient+7,f
  6442  067F  0AF3               	incf	___aodiv@quotient,f
  6443  0680  1D03               	skipz
  6444  0681  2E95               	goto	l599
  6445  0682  0AF4               	incf	___aodiv@quotient+1,f
  6446  0683  1D03               	skipz
  6447  0684  2E95               	goto	l599
  6448  0685  0AF5               	incf	___aodiv@quotient+2,f
  6449  0686  1D03               	skipz
  6450  0687  2E95               	goto	l599
  6451  0688  0AF6               	incf	___aodiv@quotient+3,f
  6452  0689  1D03               	skipz
  6453  068A  2E95               	goto	l599
  6454  068B  0AF7               	incf	___aodiv@quotient+4,f
  6455  068C  1D03               	skipz
  6456  068D  2E95               	goto	l599
  6457  068E  0AF8               	incf	___aodiv@quotient+5,f
  6458  068F  1D03               	skipz
  6459  0690  2E95               	goto	l599
  6460  0691  0AF9               	incf	___aodiv@quotient+6,f
  6461  0692  1D03               	skipz
  6462  0693  2E95               	goto	l599
  6463  0694  0AFA               	incf	___aodiv@quotient+7,f
  6464  0695                     l599:	
  6465  0695  0873               	movf	___aodiv@quotient,w
  6466  0696  0020               	movlb	0	; select bank0
  6467  0697  00A0               	movwf	?___aodiv
  6468  0698  0874               	movf	___aodiv@quotient+1,w
  6469  0699  00A1               	movwf	?___aodiv+1
  6470  069A  0875               	movf	___aodiv@quotient+2,w
  6471  069B  00A2               	movwf	?___aodiv+2
  6472  069C  0876               	movf	___aodiv@quotient+3,w
  6473  069D  00A3               	movwf	?___aodiv+3
  6474  069E  0877               	movf	___aodiv@quotient+4,w
  6475  069F  00A4               	movwf	?___aodiv+4
  6476  06A0  0878               	movf	___aodiv@quotient+5,w
  6477  06A1  00A5               	movwf	?___aodiv+5
  6478  06A2  0879               	movf	___aodiv@quotient+6,w
  6479  06A3  00A6               	movwf	?___aodiv+6
  6480  06A4  087A               	movf	___aodiv@quotient+7,w
  6481  06A5  00A7               	movwf	?___aodiv+7
  6482  06A6  0008               	return
  6483  06A7                     __end_of___aodiv:	
  6484                           
  6485                           	psect	text19
  6486  036D                     __ptext19:	
  6487 ;; *************** function _atoi *****************
  6488 ;; Defined at:
  6489 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  s               1    wreg     PTR const unsigned char 
  6492 ;;		 -> s(4), 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  s               1    9[BANK0 ] PTR const unsigned char 
  6495 ;;		 -> s(4), 
  6496 ;;  n               2    7[BANK0 ] int 
  6497 ;;  neg             2    0[BANK0 ] int 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  2    6[COMMON] int 
  6500 ;; Registers used:
  6501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;Total ram usage:       16 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    1
  6514 ;; This function calls:
  6515 ;;		___wmul
  6516 ;;		_isdigit
  6517 ;;		_isspace
  6518 ;; This function is called by:
  6519 ;;		_main
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           
  6524                           ;psect for function _atoi
  6525  036D                     _atoi:	
  6526                           
  6527                           ;incstack = 0
  6528                           ; Regs used in _atoi: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6529                           ;atoi@s stored from wreg
  6530  036D  0020               	movlb	0	; select bank0
  6531  036E  00A9               	movwf	atoi@s
  6532  036F  01A7               	clrf	atoi@n
  6533  0370  01A8               	clrf	atoi@n+1
  6534  0371  01A0               	clrf	atoi@neg
  6535  0372  01A1               	clrf	atoi@neg+1
  6536  0373                     l2120:	
  6537  0373  01A6               	clrf	_atoi$1102
  6538  0374  0AA6               	incf	_atoi$1102,f
  6539  0375  0829               	movf	atoi@s,w
  6540  0376  0086               	movwf	6
  6541  0377  0187               	clrf	7
  6542  0378  3020               	movlw	32
  6543  0379  0601               	xorwf	1,w
  6544  037A  1903               	btfsc	3,2
  6545  037B  2B8D               	goto	l2128
  6546  037C  0829               	movf	atoi@s,w
  6547  037D  0086               	movwf	6
  6548  037E  0187               	clrf	7
  6549  037F  0801               	movf	1,w
  6550  0380  3EF7               	addlw	247
  6551  0381  00F8               	movwf	??_atoi
  6552  0382  30FF               	movlw	255
  6553  0383  1803               	skipnc
  6554  0384  3000               	movlw	0
  6555  0385  00F9               	movwf	??_atoi+1
  6556  0386  3000               	movlw	0
  6557  0387  0279               	subwf	??_atoi+1,w
  6558  0388  3005               	movlw	5
  6559  0389  1903               	skipnz
  6560  038A  0278               	subwf	??_atoi,w
  6561  038B  1803               	btfsc	3,0
  6562  038C  01A6               	clrf	_atoi$1102
  6563  038D                     l2128:	
  6564  038D  0826               	movf	_atoi$1102,w
  6565  038E  00F8               	movwf	??_atoi
  6566  038F  01F9               	clrf	??_atoi+1
  6567  0390  0878               	movf	??_atoi,w
  6568  0391  00A2               	movwf	_atoi$1101
  6569  0392  0879               	movf	??_atoi+1,w
  6570  0393  00A3               	movwf	_atoi$1101+1
  6571  0394  0822               	movf	_atoi$1101,w
  6572  0395  0423               	iorwf	_atoi$1101+1,w
  6573  0396  1903               	btfsc	3,2
  6574  0397  2BA2               	goto	l2138
  6575  0398  3001               	movlw	1
  6576  0399  00F8               	movwf	??_atoi
  6577  039A  0878               	movf	??_atoi,w
  6578  039B  07A9               	addwf	atoi@s,f
  6579  039C  2B73               	goto	l2120
  6580  039D                     l2134:	
  6581  039D  3001               	movlw	1
  6582  039E  00A0               	movwf	atoi@neg
  6583  039F  3000               	movlw	0
  6584  03A0  00A1               	movwf	atoi@neg+1
  6585  03A1  2BD1               	goto	l2136
  6586  03A2                     l2138:	
  6587  03A2  0829               	movf	atoi@s,w
  6588  03A3  0086               	movwf	6
  6589  03A4  0187               	clrf	7
  6590  03A5  0801               	movf	1,w
  6591  03A6  00F8               	movwf	??_atoi
  6592  03A7  01F9               	clrf	??_atoi+1
  6593                           
  6594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6595                           ; Switch size 1, requested type "simple"
  6596                           ; Number of cases is 1, Range of values is 0 to 0
  6597                           ; switch strategies available:
  6598                           ; Name         Instructions Cycles
  6599                           ; simple_byte            4     3 (average)
  6600                           ; direct_byte            8     6 (fixed)
  6601                           ; jumptable            260     6 (fixed)
  6602                           ;	Chosen strategy is simple_byte
  6603  03A8  0879               	movf	??_atoi+1,w
  6604  03A9  3A00               	xorlw	0	; case 0
  6605  03AA  1903               	skipnz
  6606  03AB  2BAD               	goto	l2246
  6607  03AC  2BD5               	goto	l2144
  6608  03AD                     l2246:	
  6609                           
  6610                           ; Switch size 1, requested type "simple"
  6611                           ; Number of cases is 2, Range of values is 43 to 45
  6612                           ; switch strategies available:
  6613                           ; Name         Instructions Cycles
  6614                           ; simple_byte            7     4 (average)
  6615                           ; direct_byte           15     9 (fixed)
  6616                           ; jumptable            263     9 (fixed)
  6617                           ;	Chosen strategy is simple_byte
  6618  03AD  0878               	movf	??_atoi,w
  6619  03AE  3A2B               	xorlw	43	; case 43
  6620  03AF  1903               	skipnz
  6621  03B0  2BD1               	goto	l2136
  6622  03B1  3A06               	xorlw	6	; case 45
  6623  03B2  1903               	skipnz
  6624  03B3  2B9D               	goto	l2134
  6625  03B4  2BD5               	goto	l2144
  6626  03B5                     l2140:	
  6627  03B5  0829               	movf	atoi@s,w
  6628  03B6  0086               	movwf	6
  6629  03B7  0187               	clrf	7
  6630  03B8  0828               	movf	atoi@n+1,w
  6631  03B9  00F1               	movwf	___wmul@multiplier+1
  6632  03BA  0827               	movf	atoi@n,w
  6633  03BB  00F0               	movwf	___wmul@multiplier
  6634  03BC  300A               	movlw	10
  6635  03BD  00F2               	movwf	___wmul@multiplicand
  6636  03BE  3000               	movlw	0
  6637  03BF  00F3               	movwf	___wmul@multiplicand+1
  6638  03C0  3181  2120  3183   	fcall	___wmul
  6639  03C3  0871               	movf	?___wmul+1,w
  6640  03C4  00F9               	movwf	??_atoi+1
  6641  03C5  0801               	movf	1,w
  6642  03C6  0270               	subwf	?___wmul,w
  6643  03C7  00F8               	movwf	??_atoi
  6644  03C8  1C03               	skipc
  6645  03C9  03F9               	decf	??_atoi+1,f
  6646  03CA  0878               	movf	??_atoi,w
  6647  03CB  3E30               	addlw	48
  6648  03CC  0020               	movlb	0	; select bank0
  6649  03CD  00A7               	movwf	atoi@n
  6650  03CE  3000               	movlw	0
  6651  03CF  3D79               	addwfc	??_atoi+1,w
  6652  03D0  00A8               	movwf	atoi@n+1
  6653  03D1                     l2136:	
  6654  03D1  3001               	movlw	1
  6655  03D2  00F8               	movwf	??_atoi
  6656  03D3  0878               	movf	??_atoi,w
  6657  03D4  07A9               	addwf	atoi@s,f
  6658  03D5                     l2144:	
  6659  03D5  0829               	movf	atoi@s,w
  6660  03D6  0086               	movwf	6
  6661  03D7  0187               	clrf	7
  6662  03D8  0801               	movf	1,w
  6663  03D9  3ED0               	addlw	208
  6664  03DA  00F8               	movwf	??_atoi
  6665  03DB  30FF               	movlw	255
  6666  03DC  1803               	skipnc
  6667  03DD  3000               	movlw	0
  6668  03DE  00F9               	movwf	??_atoi+1
  6669  03DF  3000               	movlw	0
  6670  03E0  0279               	subwf	??_atoi+1,w
  6671  03E1  300A               	movlw	10
  6672  03E2  1903               	skipnz
  6673  03E3  0278               	subwf	??_atoi,w
  6674  03E4  1803               	btfsc	3,0
  6675  03E5  2BE8               	goto	u1520
  6676  03E6  3001               	movlw	1
  6677  03E7  2BE9               	goto	u1530
  6678  03E8                     u1520:	
  6679  03E8  3000               	movlw	0
  6680  03E9                     u1530:	
  6681  03E9  00FA               	movwf	??_atoi+2
  6682  03EA  01FB               	clrf	??_atoi+3
  6683  03EB  087A               	movf	??_atoi+2,w
  6684  03EC  00A4               	movwf	_atoi$1103
  6685  03ED  087B               	movf	??_atoi+3,w
  6686  03EE  00A5               	movwf	_atoi$1103+1
  6687  03EF  0824               	movf	_atoi$1103,w
  6688  03F0  0425               	iorwf	_atoi$1103+1,w
  6689  03F1  1D03               	btfss	3,2
  6690  03F2  2BB5               	goto	l2140
  6691  03F3  0820               	movf	atoi@neg,w
  6692  03F4  0421               	iorwf	atoi@neg+1,w
  6693  03F5  1D03               	btfss	3,2
  6694  03F6  2C03               	goto	l2154
  6695  03F7  0927               	comf	atoi@n,w
  6696  03F8  00F8               	movwf	??_atoi
  6697  03F9  0928               	comf	atoi@n+1,w
  6698  03FA  00F9               	movwf	??_atoi+1
  6699  03FB  0AF8               	incf	??_atoi,f
  6700  03FC  1903               	skipnz
  6701  03FD  0AF9               	incf	??_atoi+1,f
  6702  03FE  0878               	movf	??_atoi,w
  6703  03FF  00F6               	movwf	?_atoi
  6704  0400  0879               	movf	??_atoi+1,w
  6705  0401  00F7               	movwf	?_atoi+1
  6706  0402  0008               	return
  6707  0403                     l2154:	
  6708  0403  0828               	movf	atoi@n+1,w
  6709  0404  00F7               	movwf	?_atoi+1
  6710  0405  0827               	movf	atoi@n,w
  6711  0406  00F6               	movwf	?_atoi
  6712  0407  0008               	return
  6713  0408                     __end_of_atoi:	
  6714                           
  6715                           	psect	text20
  6716  013B                     __ptext20:	
  6717 ;; *************** function _isspace *****************
  6718 ;; Defined at:
  6719 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  c               2    0[COMMON] int 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;		None
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  2    0[COMMON] int 
  6726 ;; Registers used:
  6727 ;;		wreg, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6736 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;Total ram usage:        5 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_atoi
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           
  6747                           ;psect for function _isspace
  6748  013B                     _isspace:	
  6749                           
  6750                           ;incstack = 0
  6751                           ; Regs used in _isspace: [wreg+status,2+status,0]
  6752  013B  01F4               	clrf	_isspace$1119
  6753  013C  0AF4               	incf	_isspace$1119,f
  6754  013D  3020               	movlw	32
  6755  013E  0670               	xorwf	isspace@c,w
  6756  013F  0471               	iorwf	isspace@c+1,w
  6757  0140  1903               	btfsc	3,2
  6758  0141  294F               	goto	l2062
  6759  0142  0870               	movf	isspace@c,w
  6760  0143  3EF7               	addlw	247
  6761  0144  00F2               	movwf	??_isspace
  6762  0145  30FF               	movlw	255
  6763  0146  3D71               	addwfc	isspace@c+1,w
  6764  0147  00F3               	movwf	??_isspace+1
  6765  0148  3000               	movlw	0
  6766  0149  0273               	subwf	??_isspace+1,w
  6767  014A  3005               	movlw	5
  6768  014B  1903               	skipnz
  6769  014C  0272               	subwf	??_isspace,w
  6770  014D  1803               	btfsc	3,0
  6771  014E  01F4               	clrf	_isspace$1119
  6772  014F                     l2062:	
  6773  014F  0874               	movf	_isspace$1119,w
  6774  0150  00F2               	movwf	??_isspace
  6775  0151  01F3               	clrf	??_isspace+1
  6776  0152  0872               	movf	??_isspace,w
  6777  0153  00F0               	movwf	?_isspace
  6778  0154  0873               	movf	??_isspace+1,w
  6779  0155  00F1               	movwf	?_isspace+1
  6780  0156  0008               	return
  6781  0157                     __end_of_isspace:	
  6782                           
  6783                           	psect	text21
  6784  00DB                     __ptext21:	
  6785 ;; *************** function _isdigit *****************
  6786 ;; Defined at:
  6787 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  c               2    0[COMMON] int 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;		None
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  2    0[COMMON] int 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6803 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6804 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6805 ;;Total ram usage:        6 bytes
  6806 ;; Hardware stack levels used:    1
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_atoi
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           
  6815                           ;psect for function _isdigit
  6816  00DB                     _isdigit:	
  6817                           
  6818                           ;incstack = 0
  6819                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6820  00DB  0870               	movf	isdigit@c,w
  6821  00DC  3ED0               	addlw	208
  6822  00DD  00F2               	movwf	??_isdigit
  6823  00DE  30FF               	movlw	255
  6824  00DF  3D71               	addwfc	isdigit@c+1,w
  6825  00E0  00F3               	movwf	??_isdigit+1
  6826  00E1  3000               	movlw	0
  6827  00E2  0273               	subwf	??_isdigit+1,w
  6828  00E3  300A               	movlw	10
  6829  00E4  1903               	skipnz
  6830  00E5  0272               	subwf	??_isdigit,w
  6831  00E6  1803               	btfsc	3,0
  6832  00E7  28EA               	goto	u1440
  6833  00E8  3001               	movlw	1
  6834  00E9  28EB               	goto	u1450
  6835  00EA                     u1440:	
  6836  00EA  3000               	movlw	0
  6837  00EB                     u1450:	
  6838  00EB  00F4               	movwf	??_isdigit+2
  6839  00EC  01F5               	clrf	??_isdigit+3
  6840  00ED  0874               	movf	??_isdigit+2,w
  6841  00EE  00F0               	movwf	?_isdigit
  6842  00EF  0875               	movf	??_isdigit+3,w
  6843  00F0  00F1               	movwf	?_isdigit+1
  6844  00F1  0008               	return
  6845  00F2                     __end_of_isdigit:	
  6846                           
  6847                           	psect	text22
  6848  0120                     __ptext22:	
  6849 ;; *************** function ___wmul *****************
  6850 ;; Defined at:
  6851 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;  multiplier      2    0[COMMON] unsigned int 
  6854 ;;  multiplicand    2    2[COMMON] unsigned int 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  product         2    4[COMMON] unsigned int 
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  2    0[COMMON] unsigned int 
  6859 ;; Registers used:
  6860 ;;		wreg, status,2, status,0
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6867 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6869 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;Total ram usage:        6 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; This function calls:
  6873 ;;		Nothing
  6874 ;; This function is called by:
  6875 ;;		_atoi
  6876 ;; This function uses a non-reentrant model
  6877 ;;
  6878                           
  6879                           
  6880                           ;psect for function ___wmul
  6881  0120                     ___wmul:	
  6882                           
  6883                           ;incstack = 0
  6884                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6885  0120  01F4               	clrf	___wmul@product
  6886  0121  01F5               	clrf	___wmul@product+1
  6887  0122                     l2042:	
  6888  0122  1C70               	btfss	___wmul@multiplier,0
  6889  0123  2928               	goto	l499
  6890  0124  0872               	movf	___wmul@multiplicand,w
  6891  0125  07F4               	addwf	___wmul@product,f
  6892  0126  0873               	movf	___wmul@multiplicand+1,w
  6893  0127  3DF5               	addwfc	___wmul@product+1,f
  6894  0128                     l499:	
  6895  0128  3001               	movlw	1
  6896  0129                     u1395:	
  6897  0129  35F2               	lslf	___wmul@multiplicand,f
  6898  012A  0DF3               	rlf	___wmul@multiplicand+1,f
  6899  012B  0B89               	decfsz	9,f
  6900  012C  2929               	goto	u1395
  6901  012D  3001               	movlw	1
  6902  012E                     u1405:	
  6903  012E  36F1               	lsrf	___wmul@multiplier+1,f
  6904  012F  0CF0               	rrf	___wmul@multiplier,f
  6905  0130  0B89               	decfsz	9,f
  6906  0131  292E               	goto	u1405
  6907  0132  0870               	movf	___wmul@multiplier,w
  6908  0133  0471               	iorwf	___wmul@multiplier+1,w
  6909  0134  1D03               	btfss	3,2
  6910  0135  2922               	goto	l2042
  6911  0136  0875               	movf	___wmul@product+1,w
  6912  0137  00F1               	movwf	?___wmul+1
  6913  0138  0874               	movf	___wmul@product,w
  6914  0139  00F0               	movwf	?___wmul
  6915  013A  0008               	return
  6916  013B                     __end_of___wmul:	
  6917                           
  6918                           	psect	text23
  6919  00B3                     __ptext23:	
  6920 ;; *************** function _SYSTEM_Initialize *****************
  6921 ;; Defined at:
  6922 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;		None
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;		None
  6927 ;; Return value:  Size  Location     Type
  6928 ;;                  1    wreg      void 
  6929 ;; Registers used:
  6930 ;;		wreg, status,2, status,0, pclath, cstack
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;Total ram usage:        0 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; Hardware stack levels required when called:    2
  6943 ;; This function calls:
  6944 ;;		_ADC_Initialize
  6945 ;;		_EUSART_Initialize
  6946 ;;		_OSCILLATOR_Initialize
  6947 ;;		_PIN_MANAGER_Initialize
  6948 ;;		_PWM3_Initialize
  6949 ;;		_TMR2_Initialize
  6950 ;; This function is called by:
  6951 ;;		_main
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           
  6956                           ;psect for function _SYSTEM_Initialize
  6957  00B3                     _SYSTEM_Initialize:	
  6958                           
  6959                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  6960                           
  6961                           ;incstack = 0
  6962                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6963  00B3  3181  21EA  3180   	fcall	_PIN_MANAGER_Initialize
  6964                           
  6965                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  6966  00B6  3180  2052  3180   	fcall	_OSCILLATOR_Initialize
  6967                           
  6968                           ;mcc_generated_files/mcc.c: 54:     PWM3_Initialize();
  6969  00B9  3180  2073  3180   	fcall	_PWM3_Initialize
  6970                           
  6971                           ;mcc_generated_files/mcc.c: 55:     TMR2_Initialize();
  6972  00BC  3180  207E  3180   	fcall	_TMR2_Initialize
  6973                           
  6974                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  6975  00BF  3180  2061  3180   	fcall	_ADC_Initialize
  6976                           
  6977                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  6978  00C2  3181  2175         	fcall	_EUSART_Initialize
  6979  00C4  0008               	return
  6980  00C5                     __end_of_SYSTEM_Initialize:	
  6981                           
  6982                           	psect	text24
  6983  007E                     __ptext24:	
  6984 ;; *************** function _TMR2_Initialize *****************
  6985 ;; Defined at:
  6986 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;		None
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;Total ram usage:        0 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_SYSTEM_Initialize
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           
  7014                           ;psect for function _TMR2_Initialize
  7015  007E                     _TMR2_Initialize:	
  7016                           
  7017                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x00;
  7018                           
  7019                           ;incstack = 0
  7020                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  7021  007E  0020               	movlb	0	; select bank0
  7022  007F  019E               	clrf	30	;volatile
  7023                           
  7024                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  7025  0080  019D               	clrf	29	;volatile
  7026                           
  7027                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  7028  0081  019F               	clrf	31	;volatile
  7029                           
  7030                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x9B;
  7031  0082  309B               	movlw	155
  7032  0083  009B               	movwf	27	;volatile
  7033                           
  7034                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  7035  0084  019A               	clrf	26	;volatile
  7036                           
  7037                           ;mcc_generated_files/tmr2.c: 82:     PIR1bits.TMR2IF = 0;
  7038  0085  1090               	bcf	16,1	;volatile
  7039                           
  7040                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
  7041  0086  30F0               	movlw	240
  7042  0087  009C               	movwf	28	;volatile
  7043  0088  0008               	return
  7044  0089                     __end_of_TMR2_Initialize:	
  7045                           
  7046                           	psect	text25
  7047  0073                     __ptext25:	
  7048 ;; *************** function _PWM3_Initialize *****************
  7049 ;; Defined at:
  7050 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;Total ram usage:        0 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; This function calls:
  7071 ;;		Nothing
  7072 ;; This function is called by:
  7073 ;;		_SYSTEM_Initialize
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           
  7078                           ;psect for function _PWM3_Initialize
  7079  0073                     _PWM3_Initialize:	
  7080                           
  7081                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  7082                           
  7083                           ;incstack = 0
  7084                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  7085  0073  3080               	movlw	128
  7086  0074  002C               	movlb	12	; select bank12
  7087  0075  0099               	movwf	25	;volatile
  7088                           
  7089                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x4D;
  7090  0076  304D               	movlw	77
  7091  0077  0098               	movwf	24	;volatile
  7092                           
  7093                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  7094  0078  30C0               	movlw	192
  7095  0079  0097               	movwf	23	;volatile
  7096                           
  7097                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 0;
  7098  007A  30CF               	movlw	-49
  7099  007B  0025               	movlb	5	; select bank5
  7100  007C  059E               	andwf	30,f	;volatile
  7101  007D  0008               	return
  7102  007E                     __end_of_PWM3_Initialize:	
  7103                           
  7104                           	psect	text26
  7105  01EA                     __ptext26:	
  7106 ;; *************** function _PIN_MANAGER_Initialize *****************
  7107 ;; Defined at:
  7108 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;		None
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;		None
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  1    wreg      void 
  7115 ;; Registers used:
  7116 ;;		wreg, status,2
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7126 ;;Total ram usage:        0 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_SYSTEM_Initialize
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           
  7136                           ;psect for function _PIN_MANAGER_Initialize
  7137  01EA                     _PIN_MANAGER_Initialize:	
  7138                           
  7139                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x20;
  7140                           
  7141                           ;incstack = 0
  7142                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7143  01EA  3020               	movlw	32
  7144  01EB  0022               	movlb	2	; select bank2
  7145  01EC  008C               	movwf	12	;volatile
  7146                           
  7147                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7148  01ED  018D               	clrf	13	;volatile
  7149                           
  7150                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7151  01EE  018E               	clrf	14	;volatile
  7152                           
  7153                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  7154  01EF  3037               	movlw	55
  7155  01F0  0021               	movlb	1	; select bank1
  7156  01F1  008C               	movwf	12	;volatile
  7157                           
  7158                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x00;
  7159  01F2  018D               	clrf	13	;volatile
  7160                           
  7161                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  7162  01F3  30FF               	movlw	255
  7163  01F4  008E               	movwf	14	;volatile
  7164                           
  7165                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x4F;
  7166  01F5  304F               	movlw	79
  7167  01F6  0023               	movlb	3	; select bank3
  7168  01F7  008E               	movwf	14	;volatile
  7169                           
  7170                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x60;
  7171  01F8  3060               	movlw	96
  7172  01F9  008D               	movwf	13	;volatile
  7173                           
  7174                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  7175  01FA  3017               	movlw	23
  7176  01FB  008C               	movwf	12	;volatile
  7177                           
  7178                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  7179  01FC  0024               	movlb	4	; select bank4
  7180  01FD  018D               	clrf	13	;volatile
  7181                           
  7182                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  7183  01FE  018C               	clrf	12	;volatile
  7184                           
  7185                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  7186  01FF  018E               	clrf	14	;volatile
  7187                           
  7188                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  7189  0200  0021               	movlb	1	; select bank1
  7190  0201  1795               	bsf	21,7	;volatile
  7191                           
  7192                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  7193  0202  0025               	movlb	5	; select bank5
  7194  0203  018C               	clrf	12	;volatile
  7195                           
  7196                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  7197  0204  018D               	clrf	13	;volatile
  7198                           
  7199                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  7200  0205  018E               	clrf	14	;volatile
  7201                           
  7202                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
  7203  0206  3037               	movlw	55
  7204  0207  0026               	movlb	6	; select bank6
  7205  0208  008C               	movwf	12	;volatile
  7206                           
  7207                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
  7208  0209  30F0               	movlw	240
  7209  020A  008D               	movwf	13	;volatile
  7210                           
  7211                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  7212  020B  30FF               	movlw	255
  7213  020C  008E               	movwf	14	;volatile
  7214                           
  7215                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
  7216  020D  303F               	movlw	63
  7217  020E  0027               	movlb	7	; select bank7
  7218  020F  008C               	movwf	12	;volatile
  7219                           
  7220                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
  7221  0210  30F0               	movlw	240
  7222  0211  008D               	movwf	13	;volatile
  7223                           
  7224                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  7225  0212  30FF               	movlw	255
  7226  0213  008E               	movwf	14	;volatile
  7227                           
  7228                           ;mcc_generated_files/pin_manager.c: 114:     RXPPS = 0x17;
  7229  0214  3017               	movlw	23
  7230  0215  003C               	movlb	28	; select bank28
  7231  0216  00A4               	movwf	36	;volatile
  7232                           
  7233                           ;mcc_generated_files/pin_manager.c: 115:     RB7PPS = 0x12;
  7234  0217  3012               	movlw	18
  7235  0218  003D               	movlb	29	; select bank29
  7236  0219  009F               	movwf	31	;volatile
  7237                           
  7238                           ;mcc_generated_files/pin_manager.c: 116:     RB4PPS = 0x0E;
  7239  021A  300E               	movlw	14
  7240  021B  009C               	movwf	28	;volatile
  7241  021C  0008               	return
  7242  021D                     __end_of_PIN_MANAGER_Initialize:	
  7243                           
  7244                           	psect	text27
  7245  0052                     __ptext27:	
  7246 ;; *************** function _OSCILLATOR_Initialize *****************
  7247 ;; Defined at:
  7248 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;		None
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;		None
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  1    wreg      void 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7266 ;;Total ram usage:        0 bytes
  7267 ;; Hardware stack levels used:    1
  7268 ;; This function calls:
  7269 ;;		Nothing
  7270 ;; This function is called by:
  7271 ;;		_SYSTEM_Initialize
  7272 ;; This function uses a non-reentrant model
  7273 ;;
  7274                           
  7275                           
  7276                           ;psect for function _OSCILLATOR_Initialize
  7277  0052                     _OSCILLATOR_Initialize:	
  7278                           
  7279                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x6A;
  7280                           
  7281                           ;incstack = 0
  7282                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7283  0052  306A               	movlw	106
  7284  0053  0021               	movlb	1	; select bank1
  7285  0054  0099               	movwf	25	;volatile
  7286                           
  7287                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  7288  0055  0198               	clrf	24	;volatile
  7289                           
  7290                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  7291  0056  0022               	movlb	2	; select bank2
  7292  0057  0196               	clrf	22	;volatile
  7293  0058  0008               	return
  7294  0059                     __end_of_OSCILLATOR_Initialize:	
  7295                           
  7296                           	psect	text28
  7297  0175                     __ptext28:	
  7298 ;; *************** function _EUSART_Initialize *****************
  7299 ;; Defined at:
  7300 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;		None
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;		None
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  1    wreg      void 
  7307 ;; Registers used:
  7308 ;;		wreg, status,2, status,0, pclath, cstack
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7318 ;;Total ram usage:        0 bytes
  7319 ;; Hardware stack levels used:    1
  7320 ;; Hardware stack levels required when called:    1
  7321 ;; This function calls:
  7322 ;;		_EUSART_SetErrorHandler
  7323 ;;		_EUSART_SetFramingErrorHandler
  7324 ;;		_EUSART_SetOverrunErrorHandler
  7325 ;; This function is called by:
  7326 ;;		_SYSTEM_Initialize
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           
  7331                           ;psect for function _EUSART_Initialize
  7332  0175                     _EUSART_Initialize:	
  7333                           
  7334                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
  7335                           
  7336                           ;incstack = 0
  7337                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7338  0175  3008               	movlw	8
  7339  0176  0023               	movlb	3	; select bank3
  7340  0177  009F               	movwf	31	;volatile
  7341                           
  7342                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x90;
  7343  0178  3090               	movlw	144
  7344  0179  009D               	movwf	29	;volatile
  7345                           
  7346                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
  7347  017A  3024               	movlw	36
  7348  017B  009E               	movwf	30	;volatile
  7349                           
  7350                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  7351  017C  3067               	movlw	103
  7352  017D  009B               	movwf	27	;volatile
  7353                           
  7354                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7355  017E  019C               	clrf	28	;volatile
  7356                           
  7357                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7358  017F  3000               	movlw	0
  7359  0180  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7360  0181  3000               	movlw	0
  7361  0182  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7362  0183  3180  2040  3181   	fcall	_EUSART_SetFramingErrorHandler
  7363                           
  7364                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7365  0186  3000               	movlw	0
  7366  0187  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7367  0188  3000               	movlw	0
  7368  0189  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7369  018A  3180  2046  3181   	fcall	_EUSART_SetOverrunErrorHandler
  7370                           
  7371                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7372  018D  3000               	movlw	0
  7373  018E  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  7374  018F  3000               	movlw	0
  7375  0190  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7376  0191  3180  203A         	fcall	_EUSART_SetErrorHandler
  7377                           
  7378                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7379  0193  0021               	movlb	1	; select bank1
  7380  0194  01B4               	clrf	_eusartRxLastError^(0+128)	;volatile
  7381  0195  0008               	return
  7382  0196                     __end_of_EUSART_Initialize:	
  7383                           
  7384                           	psect	text29
  7385  0046                     __ptext29:	
  7386 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7387 ;; Defined at:
  7388 ;;		line 170 in file "mcc_generated_files/eusart.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7391 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;		None
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  1    wreg      void 
  7396 ;; Registers used:
  7397 ;;		wreg
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7407 ;;Total ram usage:        2 bytes
  7408 ;; Hardware stack levels used:    1
  7409 ;; This function calls:
  7410 ;;		Nothing
  7411 ;; This function is called by:
  7412 ;;		_EUSART_Initialize
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           
  7417                           ;psect for function _EUSART_SetOverrunErrorHandler
  7418  0046                     _EUSART_SetOverrunErrorHandler:	
  7419                           
  7420                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
  7421                           
  7422                           ;incstack = 0
  7423                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7424  0046  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7425  0047  0021               	movlb	1	; select bank1
  7426  0048  00DC               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  7427  0049  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7428  004A  00DB               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  7429  004B  0008               	return
  7430  004C                     __end_of_EUSART_SetOverrunErrorHandler:	
  7431                           
  7432                           	psect	text30
  7433  0040                     __ptext30:	
  7434 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7435 ;; Defined at:
  7436 ;;		line 166 in file "mcc_generated_files/eusart.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7439 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;		None
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  1    wreg      void 
  7444 ;; Registers used:
  7445 ;;		wreg
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7454 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7455 ;;Total ram usage:        2 bytes
  7456 ;; Hardware stack levels used:    1
  7457 ;; This function calls:
  7458 ;;		Nothing
  7459 ;; This function is called by:
  7460 ;;		_EUSART_Initialize
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           
  7465                           ;psect for function _EUSART_SetFramingErrorHandler
  7466  0040                     _EUSART_SetFramingErrorHandler:	
  7467                           
  7468                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
  7469                           
  7470                           ;incstack = 0
  7471                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7472  0040  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7473  0041  0021               	movlb	1	; select bank1
  7474  0042  00DE               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  7475  0043  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7476  0044  00DD               	movwf	_EUSART_FramingErrorHandler^(0+128)
  7477  0045  0008               	return
  7478  0046                     __end_of_EUSART_SetFramingErrorHandler:	
  7479                           
  7480                           	psect	text31
  7481  003A                     __ptext31:	
  7482 ;; *************** function _EUSART_SetErrorHandler *****************
  7483 ;; Defined at:
  7484 ;;		line 174 in file "mcc_generated_files/eusart.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7487 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;		None
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1    wreg      void 
  7492 ;; Registers used:
  7493 ;;		wreg
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7503 ;;Total ram usage:        2 bytes
  7504 ;; Hardware stack levels used:    1
  7505 ;; This function calls:
  7506 ;;		Nothing
  7507 ;; This function is called by:
  7508 ;;		_EUSART_Initialize
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           
  7513                           ;psect for function _EUSART_SetErrorHandler
  7514  003A                     _EUSART_SetErrorHandler:	
  7515                           
  7516                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
  7517                           
  7518                           ;incstack = 0
  7519                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7520  003A  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7521  003B  0021               	movlb	1	; select bank1
  7522  003C  00DA               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  7523  003D  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7524  003E  00D9               	movwf	_EUSART_ErrorHandler^(0+128)
  7525  003F  0008               	return
  7526  0040                     __end_of_EUSART_SetErrorHandler:	
  7527                           
  7528                           	psect	text32
  7529  0061                     __ptext32:	
  7530 ;; *************** function _ADC_Initialize *****************
  7531 ;; Defined at:
  7532 ;;		line 67 in file "mcc_generated_files/adc.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;		None
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;		None
  7537 ;; Return value:  Size  Location     Type
  7538 ;;                  1    wreg      void 
  7539 ;; Registers used:
  7540 ;;		wreg, status,2
  7541 ;; Tracked objects:
  7542 ;;		On entry : 0/0
  7543 ;;		On exit  : 0/0
  7544 ;;		Unchanged: 0/0
  7545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7550 ;;Total ram usage:        0 bytes
  7551 ;; Hardware stack levels used:    1
  7552 ;; This function calls:
  7553 ;;		Nothing
  7554 ;; This function is called by:
  7555 ;;		_SYSTEM_Initialize
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           
  7560                           ;psect for function _ADC_Initialize
  7561  0061                     _ADC_Initialize:	
  7562                           
  7563                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xC0;
  7564                           
  7565                           ;incstack = 0
  7566                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7567  0061  30C0               	movlw	192
  7568  0062  0021               	movlb	1	; select bank1
  7569  0063  009E               	movwf	30	;volatile
  7570                           
  7571                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
  7572  0064  019F               	clrf	31	;volatile
  7573                           
  7574                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  7575  0065  019B               	clrf	27	;volatile
  7576                           
  7577                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  7578  0066  019C               	clrf	28	;volatile
  7579                           
  7580                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  7581  0067  3001               	movlw	1
  7582  0068  009D               	movwf	29	;volatile
  7583  0069  0008               	return
  7584  006A                     __end_of_ADC_Initialize:	
  7585                           
  7586                           	psect	text33
  7587  00C5                     __ptext33:	
  7588 ;; *************** function _PWM3_LoadDutyValue *****************
  7589 ;; Defined at:
  7590 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;  dutyValue       2    0[COMMON] unsigned short 
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;		None
  7595 ;; Return value:  Size  Location     Type
  7596 ;;                  1    wreg      void 
  7597 ;; Registers used:
  7598 ;;		wreg, status,2, status,0
  7599 ;; Tracked objects:
  7600 ;;		On entry : 0/0
  7601 ;;		On exit  : 0/0
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7608 ;;Total ram usage:        4 bytes
  7609 ;; Hardware stack levels used:    1
  7610 ;; This function calls:
  7611 ;;		Nothing
  7612 ;; This function is called by:
  7613 ;;		_main
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           
  7618                           ;psect for function _PWM3_LoadDutyValue
  7619  00C5                     _PWM3_LoadDutyValue:	
  7620                           
  7621                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  7622                           
  7623                           ;incstack = 0
  7624                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  7625  00C5  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  7626  00C6  00F3               	movwf	??_PWM3_LoadDutyValue+1
  7627  00C7  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  7628  00C8  00F2               	movwf	??_PWM3_LoadDutyValue
  7629  00C9  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  7630  00CA  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  7631  00CB  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  7632  00CC  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  7633  00CD  0872               	movf	??_PWM3_LoadDutyValue,w
  7634  00CE  002C               	movlb	12	; select bank12
  7635  00CF  0098               	movwf	24	;volatile
  7636                           
  7637                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
  7638  00D0  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  7639  00D1  3903               	andlw	3
  7640  00D2  00F2               	movwf	??_PWM3_LoadDutyValue
  7641  00D3  3005               	movlw	5
  7642  00D4                     u1465:	
  7643  00D4  35F2               	lslf	??_PWM3_LoadDutyValue,f
  7644  00D5  3EFF               	addlw	-1
  7645  00D6  1D03               	skipz
  7646  00D7  28D4               	goto	u1465
  7647  00D8  3572               	lslf	??_PWM3_LoadDutyValue,w
  7648  00D9  0097               	movwf	23	;volatile
  7649  00DA  0008               	return
  7650  00DB                     __end_of_PWM3_LoadDutyValue:	
  7651                           
  7652                           	psect	text34
  7653  0027                     __ptext34:	
  7654 ;; *************** function _ADC_StartConversion *****************
  7655 ;; Defined at:
  7656 ;;		line 96 in file "mcc_generated_files/adc.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;		None
  7659 ;; Auto vars:     Size  Location     Type
  7660 ;;		None
  7661 ;; Return value:  Size  Location     Type
  7662 ;;                  1    wreg      void 
  7663 ;; Registers used:
  7664 ;;		None
  7665 ;; Tracked objects:
  7666 ;;		On entry : 0/0
  7667 ;;		On exit  : 0/0
  7668 ;;		Unchanged: 0/0
  7669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7674 ;;Total ram usage:        0 bytes
  7675 ;; Hardware stack levels used:    1
  7676 ;; This function calls:
  7677 ;;		Nothing
  7678 ;; This function is called by:
  7679 ;;		_main
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           
  7684                           ;psect for function _ADC_StartConversion
  7685  0027                     _ADC_StartConversion:	
  7686                           
  7687                           ;mcc_generated_files/adc.c: 99:     ADCON0bits.GO_nDONE = 1;
  7688                           
  7689                           ;incstack = 0
  7690                           ; Regs used in _ADC_StartConversion: []
  7691  0027  0021               	movlb	1	; select bank1
  7692  0028  149D               	bsf	29,1	;volatile
  7693  0029  0008               	return
  7694  002A                     __end_of_ADC_StartConversion:	
  7695                           
  7696                           	psect	text35
  7697  0095                     __ptext35:	
  7698 ;; *************** function _ADC_SelectChannel *****************
  7699 ;; Defined at:
  7700 ;;		line 88 in file "mcc_generated_files/adc.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;  channel         1    wreg     enum E9635
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;  channel         1    1[COMMON] enum E9635
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      void 
  7707 ;; Registers used:
  7708 ;;		wreg, status,2, status,0
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;Total ram usage:        2 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; This function calls:
  7721 ;;		Nothing
  7722 ;; This function is called by:
  7723 ;;		_main
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           
  7728                           ;psect for function _ADC_SelectChannel
  7729  0095                     _ADC_SelectChannel:	
  7730                           
  7731                           ;incstack = 0
  7732                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  7733                           ;ADC_SelectChannel@channel stored from wreg
  7734  0095  00F1               	movwf	ADC_SelectChannel@channel
  7735                           
  7736                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
  7737  0096  0871               	movf	ADC_SelectChannel@channel,w
  7738  0097  00F0               	movwf	??_ADC_SelectChannel
  7739  0098  0DF0               	rlf	??_ADC_SelectChannel,f
  7740  0099  0DF0               	rlf	??_ADC_SelectChannel,f
  7741  009A  0021               	movlb	1	; select bank1
  7742  009B  081D               	movf	29,w	;volatile
  7743  009C  0670               	xorwf	??_ADC_SelectChannel,w
  7744  009D  3983               	andlw	-125
  7745  009E  0670               	xorwf	??_ADC_SelectChannel,w
  7746  009F  009D               	movwf	29	;volatile
  7747                           
  7748                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
  7749  00A0  141D               	bsf	29,0	;volatile
  7750  00A1  0008               	return
  7751  00A2                     __end_of_ADC_SelectChannel:	
  7752                           
  7753                           	psect	text36
  7754  0034                     __ptext36:	
  7755 ;; *************** function _ADC_GetConversionResult *****************
  7756 ;; Defined at:
  7757 ;;		line 109 in file "mcc_generated_files/adc.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;		None
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;		None
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  2    0[COMMON] unsigned short 
  7764 ;; Registers used:
  7765 ;;		wreg
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7775 ;;Total ram usage:        2 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; This function calls:
  7778 ;;		Nothing
  7779 ;; This function is called by:
  7780 ;;		_main
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784                           
  7785                           ;psect for function _ADC_GetConversionResult
  7786  0034                     _ADC_GetConversionResult:	
  7787                           
  7788                           ;mcc_generated_files/adc.c: 112:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7789                           
  7790                           ;incstack = 0
  7791                           ; Regs used in _ADC_GetConversionResult: [wreg]
  7792  0034  0021               	movlb	1	; select bank1
  7793  0035  081C               	movf	28,w	;volatile
  7794  0036  00F1               	movwf	?_ADC_GetConversionResult+1
  7795  0037  081B               	movf	27,w	;volatile
  7796  0038  00F0               	movwf	?_ADC_GetConversionResult
  7797  0039  0008               	return
  7798  003A                     __end_of_ADC_GetConversionResult:	
  7799  007E                     btemp	set	126	;btemp
  7800  007E                     wtemp0	set	126


Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         57
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      2      65
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 4
		 -> s(BANK1[4]), read_input@buffer(BANK0[4]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> s(BANK1[4]), read_input@buffer(BANK0[4]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> read_input@buffer(BANK0[4]), STR_1(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> read_input@buffer(BANK0[4]), STR_1(CODE[1]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1123_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 4
		 -> s(BANK1[4]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    read_input@str	PTR unsigned char  size(1) Largest target is 4
		 -> s(BANK1[4]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 4
		 -> s(BANK1[4]), read_input@buffer(BANK0[4]), 

    clear@str	PTR unsigned char  size(1) Largest target is 4
		 -> read_input@buffer(BANK0[4]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _read_input->_clear
    _clear->_strcpy
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8584
                                             78 BANK0      2     2      0
                                              0 BANK1      2     2      0
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                _ADC_StartConversion
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
                               _atoi
                             _printf
                         _read_input
 ---------------------------------------------------------------------------------
 (1) _read_input                                          12    12      0    1221
                                              9 COMMON     2     2      0
                                              0 BANK0     10    10      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                              _clear
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _clear                                                1     1      0     511
                                              8 COMMON     1     1      0
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     6      2     423
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5936
                                             70 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5806
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5478
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4133
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2510
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1127
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     812
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _atoi                                                16    14      2     966
                                              6 COMMON     6     4      2
                                              0 BANK0     10    10      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (2) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_SelectChannel
   _ADC_StartConversion
   _PWM3_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR2_Initialize
   _atoi
     ___wmul
     _isdigit
     _isspace
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _read_input
     _EUSART_Read
     _EUSART_is_rx_ready
     _clear
       _strcpy
     _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      2      41       7       81.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Nov 11 19:22:07 2021

                                            _s 00D5                                    __CFG_CP$OFF 0000  
                          ___wmul@multiplicand 0072                                    __CFG_LVP$ON 0000  
                                          l123 005A                                            l116 0089  
                                          l450 026A                                            l612 05A2  
                                          l453 028A                                            l454 0296  
                                          l463 070F                                            l464 0723  
                                          l458 06ED                                            l467 07B8  
                                          l459 06F4                                            l499 0128  
                                          l599 0695                                            _PR2 001B  
                                          u905 0276                                            u925 00FB  
                                          u855 0247                                            u970 0610  
                                          _adc 00AC                                            _abs 00F2  
                                          _pad 0252                                            _num 00AE  
               ?_EUSART_SetFramingErrorHandler 0070                                _TMR2_Initialize 007E  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ?_EUSART_Read 0070  
                                 __CFG_ZCD$OFF 0000                                           ?_abs 0073  
                                         l2120 0373                                           l2042 0122  
                                         l2034 01C4                                           l2106 02CD  
                                         l2202 032E                                           l2140 03B5  
                                         l2036 01E1                                           l2108 02F7  
                                         l2062 014F                                           l2134 039D  
                                         l2144 03D5                                           l2136 03D1  
                                         l2128 038D                                           l2154 0403  
                                         l2138 03A2                                           l2244 02EE  
                                         l2092 02B1                                           l2180 030A  
                                         l2246 03AD                                           l1800 0545  
                                         l1712 010E                                           l1706 019A  
                                         l1714 0119                                           l1722 0260  
                                         l2098 02BD                                           l1804 0575  
                                         l1732 026C                                           l1806 0581  
                                         l1726 0268                                           l1822 0707  
                                         l1752 0605                                           l1832 0750  
                                         l1904 04A4                                           l1754 0609  
                                         l1842 072B                                           l1850 07C4  
                                         l1914 04B5                                           l1764 0620  
                                         l1748 05DE                                           l1692 0226  
                                         l1860 07D7                                           l1828 071E  
                                         l1908 04AA                                           l1774 0668  
                                         l1766 062F                                           l1790 0529  
                                         l1854 07CC                                           l1776 0674  
                                         l1696 0249                                           l1864 07E3  
                                         l1786 0502                                           l1890 0449  
                                         l1876 0160                                           l1798 0536  
                                         ?_pad 0024                                           l1898 0483  
                                         l1994 0093                                           STR_1 0803  
                                         STR_2 0800                                           u1005 0655  
                                         u1105 0563                                           u1140 06C3  
                                         u1150 06C4                                           u1225 07C2  
                                         u1405 012E                                           u1245 073F  
                                         _LATA 010C                                           _LATB 010D  
                                         u1255 074B                                           _LATC 010E  
                                         u1440 00EA                                           u1520 03E8  
                                         u1450 00EB                                           u1530 03E9  
                                         u1195 06FF                                           u1465 00D4  
                                         _T2PR 001B                                           u1395 0129  
                                         u1485 02D7                                           u1565 0339  
                                         u1577 0314                                           u1587 0360  
                                         _TMR2 001A                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 0073                                           _dbuf 00B5  
                                         _atoi 036D                                           _main 0304  
                                         _dtoa 06A7                                           _prec 00A8  
                                         _nout 00A4                                           pad@i 0028  
                                         pad@p 0025                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 002A  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                         start 0002                                  __CFG_MCLRE$ON 0000  
                                        ??_abs 0075                                          ??_pad 0027  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 0059                                __end_of___aodiv 06A7  
                                        ?_atoi 0076                                          ?_main 0070  
                                        ?_dtoa 0030                                __end_of___aomod 05B4  
                                __CFG_WDTE$OFF 0000                                          _T2CON 001C  
                                        _T2HLT 001D                                          _T2TMR 001A  
                                        _T2RST 001F                                   vfpfcnvrt@fmt 004E  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
             __size_of_ADC_GetConversionResult 0006                                          u94lld 05DC  
                                        _clear 006A                                          _flags 00AA  
                                        _count 00B0                                          _fputc 021D  
                                        _fputs 0196                                __end_of_isdigit 00F2  
                                        atoi@n 0027                                          pad@fp 002C  
                                        atoi@s 0029                                          _width 00A6  
                                        _putch 002A                                          dtoa@d 0030  
                                        dtoa@i 004C                                          dtoa@n 0044  
                                        dtoa@p 003D                                          dtoa@s 0042  
                                        dtoa@w 0040                                __end_of_isspace 0157  
                      __end_of_PWM3_Initialize 007E                                          status 0003  
                                        wtemp0 007E                                __initialization 07F6  
                                 __end_of_atoi 0408                                   __end_of_main 036D  
                                 __end_of_dtoa 07F6                                 ??_EUSART_Write 0070  
                      __end_of_TMR2_Initialize 0089                                 __CFG_LPBOR$OFF 0000  
                                       ??_atoi 0078                                         ??_main 006E  
                                       ??_dtoa 0038                                 __CFG_PLLEN$OFF 0000  
                                       ?_clear 0070              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                                       _ADCON2 009F                     _EUSART_OverrunErrorHandler 00DB  
                                       ?_fputc 0072                                         ?_fputs 007A  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                   __end_of_EUSART_is_rx_ready 0034                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RB4PPS 0E9C                                         _RB7PPS 0E9F  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       _OSCCON 0099                                         u105lld 0500  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _TX1REG 019A                                         _TX1STA 019E  
                               __CFG_PWRTE$OFF 0000                                   vfprintf@cfmt 0064  
                  __size_of_PWM3_LoadDutyValue 0016                                      ??___aodiv 0070  
                                    ??___aomod 0070                                         ___wmul 0120  
                               __CFG_STVREN$ON 0000                                         _printf 00A2  
                                       pad@buf 0024                                         dtoa@fp 003F  
                                       _strcpy 0157                                         _strlen 0109  
                                       fputc@c 0072                                         fputs@c 0020  
                                       fputs@i 0021                                         fputs@s 0023  
                                    ??_isdigit 0072                                      ??_isspace 0072  
                             __end_of_vfprintf 01EA                                    read_input@i 0026  
                             ?_PWM3_Initialize 0070                           __size_of_EUSART_Read 000C  
                            _SYSTEM_Initialize 00B3                        __end_of__initialization 07FD  
                           ?_SYSTEM_Initialize 0070                   __size_of_ADC_StartConversion 0003  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0072  
                                __end_of_clear 0073                                  __end_of_fputc 0252  
                                __end_of_fputs 01BB                                  __end_of_putch 002F  
                             ?_TMR2_Initialize 0070                        _ADC_GetConversionResult 0034  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0072  
                                      ??_clear 0078                                        ??_fputc 0075  
                    __end_of_SYSTEM_Initialize 00C5                                        ??_fputs 007B  
                                      ??_putch 0071                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 0061                                     __pmaintext 0304  
                                      ?___wmul 0070                                __CFG_PPS1WAY$ON 0000  
                                      ?_printf 0066                        __size_of_ADC_Initialize 0009  
                                      ?_strcpy 0070                                        ?_strlen 0070  
                              __CFG_WDTCCS$SWC 0000                             __size_of_vfpfcnvrt 00D0  
                                      _OSCTUNE 0098                                        _PWM3DCH 0618  
                                      _PWM3DCL 0617                                        _PWM3CON 0619  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 0072  
                         _ADC_InterruptHandler 00B2                                        ___aodiv 05B4  
                                      ___aomod 04D8                                __size_of___wmul 001B  
                                    ?_vfprintf 005E                      ??_ADC_GetConversionResult 0072  
                                   _read_input 02A2                                        __ptext1 02A2  
                                      __ptext2 006A                                        __ptext3 0157  
                                      __ptext4 002F                                        __ptext5 0089  
                                      __ptext6 00A2                                        __ptext7 01BB  
                                      __ptext8 0408                                        __ptext9 06A7  
                              __size_of_printf 0011                                __size_of_strcpy 001E  
                              __size_of_strlen 0017                          _OSCILLATOR_Initialize 0052  
                                    _T2CONbits 001C                                   __size_of_abs 0017  
                                 __size_of_pad 0050                                        _isdigit 00DB  
                     ??_PIN_MANAGER_Initialize 0070                                        _isspace 013B  
                                    _T2HLTbits 001D                                        atoi@neg 0020  
                   __size_of_SYSTEM_Initialize 0012                                        clrloop0 004D  
                         end_of_initialization 07FD                                      _T2RSTbits 001F  
        __end_of_EUSART_SetOverrunErrorHandler 004C         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 0046                                        fputc@fp 0074  
                                      fputs@fp 007A                              _EUSART_Initialize 0175  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 04D8  
                           _EUSART_is_rx_ready 002F                                     ??_vfprintf 0061  
                                      strcpy@d 0076                                        strlen@a 0073  
                                      strcpy@s 0074                                        strlen@s 0074  
                          ??_EUSART_Initialize 0072                            ?_EUSART_is_rx_ready 0070  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 0008  
                          _ADC_StartConversion 0027                __size_of_EUSART_SetErrorHandler 0006  
                    __end_of_EUSART_Initialize 0196                           ??_EUSART_is_rx_ready 0070  
                   __end_of_PWM3_LoadDutyValue 00DB                           ?_ADC_StartConversion 0070  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 004F  
                                  vfpfcnvrt@fp 005D                                    vfpfcnvrt@ll 0055  
                               __end_of___wmul 013B                                   _EUSART_Write 0059  
                               _ADC_Initialize 0061                                    ?_read_input 0070  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_printf 00B3  
                               __end_of_strcpy 0175                                 __end_of_strlen 0120  
                          start_initialization 07F6                __size_of_PIN_MANAGER_Initialize 0033  
                                  __end_of_abs 0109                                    __end_of_pad 02A2  
                                ??_EUSART_Read 0070                                    putch@txData 0071  
               ?_EUSART_SetOverrunErrorHandler 0070                          ??_ADC_StartConversion 0070  
                     __size_of_PWM3_Initialize 000B                                    vfprintf@fmt 005E  
                   _EUSART_FramingErrorHandler 00DD                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 003A                                    _CCPTMRSbits 029E  
                       __end_of_ADC_Initialize 006A                                       ??_printf 006A  
                                     ??_strcpy 0072                                       ??_strlen 0072  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00DF                               ___aodiv@dividend 0028  
                     __size_of_TMR2_Initialize 000B                     __size_of_EUSART_Initialize 0021  
                          __end_of_EUSART_Read 0095                                      _atoi$1101 0022  
                                    _atoi$1102 0026                                      _atoi$1103 0024  
                          __size_of_read_input 0062                                      __pnvBANK1 00D9  
                       _PIN_MANAGER_Initialize 01EA                              _ADC_SelectChannel 0095  
                                     ?___aodiv 0020                                       ?___aomod 0020  
                             ___aodiv@quotient 0073                                ?_ADC_Initialize 0070  
                           ?_ADC_SelectChannel 0070                              __size_of_vfprintf 002F  
                                     _BAUD1CON 019F                                       ?_isdigit 0070  
                          ??_ADC_SelectChannel 0070                               read_input@F10251 00A0  
                                     ?_isspace 0070                                 __size_of_clear 0009  
                               __size_of_fputc 0035                                       _T2CLKCON 001E  
                               __size_of_fputs 0025                                 __size_of_putch 0005  
                               ___wmul@product 0074         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                                      clear_ram0 004C  
                            _eusartRxLastError 00B4                      __end_of_ADC_SelectChannel 00A2  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 0072  
                         __CFG_WDTCPS$WDTCPS1F 0000              _EUSART_DefaultOverrunErrorHandler 0000  
                             read_input@buffer 0020                                      _vfpfcnvrt 0408  
                            ??_PWM3_Initialize 0070                                     _ADCON0bits 009D  
                            ___wmul@multiplier 0070                       ADC_SelectChannel@channel 0071  
                                    main@count 00DF                                   _isspace$1119 0074  
                                  _EUSART_Read 0089                              ??_TMR2_Initialize 0070  
                                   vfprintf@ap 0060                                     vfprintf@fp 0063  
                     ?_ADC_GetConversionResult 0070                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 00D9                               __size_of___aodiv 00F3  
                             __size_of___aomod 00DC                                     ?_vfpfcnvrt 004E  
                                 ??_read_input 0079                                ___aodiv@divisor 0020  
                              ___aodiv@counter 0071                             _PWM3_LoadDutyValue 00C5  
                             __size_of_isdigit 0017                                       _dtoa$788 003B  
                             __size_of_isspace 001C                                       __ptext10 0252  
                                     __ptext11 0109                                       __ptext20 013B  
                                     __ptext12 0196                                       __ptext21 00DB  
                                     __ptext13 021D                                       __ptext30 0040  
                                     __ptext22 0120                                       __ptext14 002A  
                                     __ptext31 003A                                       __ptext23 00B3  
                                     __ptext15 0059                                       __ptext32 0061  
                                     __ptext24 007E                                       __ptext16 00F2  
                                     __ptext33 00C5                                       __ptext25 0073  
                                     __ptext17 04D8                                       __ptext34 0027  
                                     __ptext26 01EA                                       __ptext18 05B4  
                                     __ptext35 0095                                       __ptext27 0052  
                                     __ptext19 036D                                       __ptext36 0034  
                                     __ptext28 0175                                       __ptext29 0046  
                          ?_PWM3_LoadDutyValue 0070                                     strcpy@dest 0077  
                  __size_of_EUSART_is_rx_ready 0005                                  __size_of_atoi 009B  
                                __size_of_main 0069                                  __size_of_dtoa 014F  
                                     clear@str 0078                             __end_of_read_input 0304  
                         __CFG_WDTCWS$WDTCWSSW 0000                        ?_EUSART_SetErrorHandler 0070  
                   __size_of_ADC_SelectChannel 000D                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                           ??_PWM3_LoadDutyValue 0072  
                              read_input@index 0024                                       _vfprintf 01BB  
                                    printf@fmt 0066          __end_of_EUSART_SetFramingErrorHandler 0046  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0040  
                             ___aomod@dividend 0028                                       isdigit@c 0070  
                  __end_of_ADC_StartConversion 002A                                       isspace@c 0070  
                      ?_PIN_MANAGER_Initialize 0070                __end_of_ADC_GetConversionResult 003A  
               __end_of_EUSART_SetErrorHandler 0040                              __CFG_CLKOUTEN$OFF 0000  
                                    strcpy@src 0070                               ??_ADC_Initialize 0070  
                               read_input@temp 0028                                       printf@ap 006D  
EUSART_SetFramingErrorHandler@interruptHandler 0070                    PWM3_LoadDutyValue@dutyValue 0070  
                              ___aomod@divisor 0020                                    ??_vfpfcnvrt 0050  
                              ___aomod@counter 0071                                  __pstringtext1 0800  
                                __pstringtext2 0000                                  read_input@str 0029  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0070  
                                 ___aodiv@sign 0072                 __end_of_PIN_MANAGER_Initialize 021D  
                                 ___aomod@sign 0072                                _PWM3_Initialize 0073  
